<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table assess_company_evaluate -->
    <resultMap id="RM-ASSESS-COMPANY-EVALUATE" class="com.born.fcs.am.dal.dataobject.AssessCompanyEvaluateDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="applyId" column="apply_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="companyId" column="company_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="companyName" column="company_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evaluatePerson" column="evaluate_person" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="evaluatePersonAccount" column="evaluate_person_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evaluatePersonName" column="evaluate_person_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="workSituation" column="work_situation" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="attachment" column="attachment" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="technicalLevel" column="technical_level" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="evaluationEfficiency" column="evaluation_efficiency" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="cooperationSituation" column="cooperation_situation" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="serviceAttitude" column="service_attitude" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="isReview" column="is_review" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisAssessCompanyEvaluateDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.insert -->
    <insert id="MS-ASSESS-COMPANY-EVALUATE-INSERT">
        INSERT /*MS-YRD-ASSESS-COMPANY-EVALUATE-INSERT*/ INTO assess_company_evaluate(apply_id,
		 		 company_id,
				company_name,
				evaluate_person,
				evaluate_person_account,
				evaluate_person_name,
				work_situation,
				attachment,
				technical_level,
				evaluation_efficiency,
				cooperation_situation,
				service_attitude,
				is_review,
				remark,
		   raw_add_time)
		   VALUES (#applyId#,#companyId#,#companyName#,#evaluatePerson#,#evaluatePersonAccount#,#evaluatePersonName#,
		   #workSituation#,#attachment#,#technicalLevel#,#evaluationEfficiency#,#cooperationSituation#,#serviceAttitude#,
		   #isReview#,#remark#,#rawAddTime#)
	       <selectKey  resultClass ="long"  keyProperty ="id" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.update -->
    <update id="MS-ASSESS-COMPANY-EVALUATE-UPDATE">
    <![CDATA[
        update /*MS-YRD-ASSESS-COMPANY-EVALUATE-UPDATE*/ assess_company_evaluate set apply_id=#applyId#, company_id=#companyId#, company_name=#companyName#, evaluate_person=#evaluatePerson#, evaluate_person_account=#evaluatePersonAccount#, evaluate_person_name=#evaluatePersonName#, work_situation=#workSituation#, attachment=#attachment#, technical_level=#technicalLevel#, evaluation_efficiency=#evaluationEfficiency#, cooperation_situation=#cooperationSituation#, service_attitude=#serviceAttitude#, is_review=#isReview#, remark=#remark# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.findById -->
    <select id="MS-ASSESS-COMPANY-EVALUATE-FIND-BY-ID" resultMap="RM-ASSESS-COMPANY-EVALUATE">
    <![CDATA[
        select /*MS-YRD-ASSESS-COMPANY-EVALUATE-FIND-BY-ID*/ * from assess_company_evaluate where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.deleteById -->
    <delete id="MS-ASSESS-COMPANY-EVALUATE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-ASSESS-COMPANY-EVALUATE-DELETE-BY-ID*/ from assess_company_evaluate where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.findByApplyId -->
    <select id="MS-ASSESS-COMPANY-EVALUATE-FIND-BY-APPLY-ID" resultMap="RM-ASSESS-COMPANY-EVALUATE">
    <![CDATA[
        select /*MS-YRD-ASSESS-COMPANY-EVALUATE-FIND-BY-APPLY-ID*/ * from assess_company_evaluate where (apply_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.findByCompanyId -->
    <select id="MS-ASSESS-COMPANY-EVALUATE-FIND-BY-COMPANY-ID" resultMap="RM-ASSESS-COMPANY-EVALUATE">
    <![CDATA[
        select /*MS-YRD-ASSESS-COMPANY-EVALUATE-FIND-BY-COMPANY-ID*/ * from assess_company_evaluate where (company_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.findByConditionCount -->
    <select id="MS-ASSESS-COMPANY-EVALUATE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-ASSESS-COMPANY-EVALUATE-FIND-BY-CONDITION-COUNT*/  count(*)  FROM assess_company_evaluate WHERE  1=1
	        <dynamic>
	            <isGreaterThan property="id"  compareValue="0" prepend=" and ">
	               id = #id#
	            </isGreaterThan>
	            <isGreaterThan property="applyId"  compareValue="0" prepend=" and ">
	               apply_id = #applyId#
	            </isGreaterThan>
	            <isGreaterThan property="companyId"  compareValue="0" prepend=" and ">
	               company_id = #companyId#
	            </isGreaterThan>  
	            <isGreaterThan property="evaluatePerson"  compareValue="0" prepend=" and ">
	               evaluate_person = #evaluatePerson#
	            </isGreaterThan>    
	        	<isNotEmpty property="companyName" prepend=" and ">
	               company_name LIKE CONCAT('%',#companyName#,'%')
	            </isNotEmpty>  
	            <isNotEmpty property="isReview" prepend=" and ">
	               is_review = #isReview#
	            </isNotEmpty> 
	        </dynamic>
    </select>

    <!-- mapped statement for IbatisAssessCompanyEvaluateDAO.findByCondition -->
    <select id="MS-ASSESS-COMPANY-EVALUATE-FIND-BY-CONDITION" resultMap="RM-ASSESS-COMPANY-EVALUATE">
        SELECT /*MS-YRD-ASSESS-COMPANY-EVALUATE-FIND-BY-CONDITION*/ * from assess_company_evaluate where 1=1
	        <dynamic>
	        	<isGreaterThan property="assessCompanyEvaluate.id"  compareValue="0" prepend=" and ">
	               id = #assessCompanyEvaluate.id#
	            </isGreaterThan>
	            <isGreaterThan property="assessCompanyEvaluate.applyId"  compareValue="0" prepend=" and ">
	               apply_id = #assessCompanyEvaluate.applyId#
	            </isGreaterThan>
	            <isGreaterThan property="assessCompanyEvaluate.companyId"  compareValue="0" prepend=" and ">
	               company_id = #assessCompanyEvaluate.companyId#
	            </isGreaterThan>  
	            <isGreaterThan property="assessCompanyEvaluate.evaluatePerson"  compareValue="0" prepend=" and ">
	               evaluate_person = #assessCompanyEvaluate.evaluatePerson#
	            </isGreaterThan>    
	        	<isNotEmpty property="assessCompanyEvaluate.companyName" prepend=" and ">
	               company_name LIKE CONCAT('%',#assessCompanyEvaluate.companyName#,'%')
	            </isNotEmpty>  
	            <isNotEmpty property="assessCompanyEvaluate.isReview" prepend=" and ">
	               is_review = #assessCompanyEvaluate.isReview#
	            </isNotEmpty>
	           
	        </dynamic>
	        <isNotEmpty property="sortCol" prepend=" order by ">
            $sortCol$
            <isNotEmpty property="sortOrder">
                $sortOrder$
            </isNotEmpty>
        </isNotEmpty>
        <isEmpty property="sortCol" prepend=" ">
            ORDER BY raw_add_time DESC
        </isEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

</sqlMap>
