<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table assess_company_business_scope -->
    <resultMap id="RM-ASSESS-COMPANY-BUSINESS-SCOPE" class="com.born.fcs.am.dal.dataobject.AssessCompanyBusinessScopeDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="assessCompanyId" column="assess_company_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="businessScopeRegion" column="business_scope_region" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="code" column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisAssessCompanyBusinessScopeDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.insert -->
    <insert id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-INSERT">
        INSERT /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-INSERT*/ INTO assess_company_business_scope
					(assess_company_id,
						business_scope_region,
						code,
						sort,
						raw_add_time)  
				VALUES (#assessCompanyId#, #businessScopeRegion#, #code#,#sort#,#rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.update -->
    <update id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-UPDATE">
    <![CDATA[
        update /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-UPDATE*/ assess_company_business_scope set assess_company_id=#assessCompanyId#, business_scope_region=#businessScopeRegion#, code=#code#, sort=#sort# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.findById -->
    <select id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-ID" resultMap="RM-ASSESS-COMPANY-BUSINESS-SCOPE">
    <![CDATA[
        select /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-ID*/ * from assess_company_business_scope where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.findByAssessCompanyId -->
    <select id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-ASSESS-COMPANY-ID" resultMap="RM-ASSESS-COMPANY-BUSINESS-SCOPE">
    <![CDATA[
        select /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-ASSESS-COMPANY-ID*/ * from assess_company_business_scope where (assess_company_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.deleteById -->
    <delete id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-DELETE-BY-ID*/ from assess_company_business_scope where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.deleteByAssessCompanyId -->
    <delete id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-DELETE-BY-ASSESS-COMPANY-ID">
    <![CDATA[
        delete /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-DELETE-BY-ASSESS-COMPANY-ID*/ from assess_company_business_scope where (assess_company_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.findByCondition -->
    <select id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-CONDITION" resultMap="RM-ASSESS-COMPANY-BUSINESS-SCOPE">
        SELECT /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-CONDITION*/ * from assess_company_business_scope where 1=1
	        <dynamic>
	       		 <isGreaterThan property="assessCompanyBusinessScope.id"  compareValue="0" prepend=" and ">
	               id = #assessCompanyBusinessScope.id#
	            </isGreaterThan>
	            <isGreaterThan property="assessCompanyBusinessScope.assessCompanyId"  compareValue="0" prepend=" and ">
	               assess_company_id = #assessCompanyBusinessScope.assessCompanyId#
	            </isGreaterThan>
	             <isNotEmpty property="assessCompanyBusinessScope.businessScopeRegion" prepend=" and ">
	               business_scope_region = #assessCompanyBusinessScope.businessScopeRegion#
	            </isNotEmpty>
	            <isNotEmpty property="assessCompanyBusinessScope.code" prepend=" and ">
	               code = #assessCompanyBusinessScope.code#
	            </isNotEmpty>
	            <isNotEmpty property="assessCompanyBusinessScope.sort" prepend=" and ">
	               sort = #assessCompanyBusinessScope.sort#
	            </isNotEmpty>
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
	         order by id
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisAssessCompanyBusinessScopeDAO.findByConditionCount -->
    <select id="MS-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-ASSESS-COMPANY-BUSINESS-SCOPE-FIND-BY-CONDITION-COUNT*/  count(*)  FROM assess_company_business_scope  where 1=1
	        <dynamic>
	              <isGreaterThan property="id"  compareValue="0" prepend=" and ">
	               id = #id#
	            </isGreaterThan>
	            <isGreaterThan property="assessCompanyId"  compareValue="0" prepend=" and ">
	               assess_company_id = #assessCompanyId#
	            </isGreaterThan>
	             <isNotEmpty property="businessScopeRegion" prepend=" and ">
	               business_scope_region = #businessScopeRegion#
	            </isNotEmpty>
	            <isNotEmpty property="code" prepend=" and ">
	               code = #code#
	            </isNotEmpty>
	            <isNotEmpty property="sort" prepend=" and ">
	               sort = #sort#
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
