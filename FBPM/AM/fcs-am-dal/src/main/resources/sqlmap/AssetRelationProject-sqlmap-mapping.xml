<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table asset_relation_project -->
    <resultMap id="RM-ASSET-RELATION-PROJECT" class="com.born.fcs.am.dal.dataobject.AssetRelationProjectDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="assetsId" column="assets_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="assetsStatus" column="assets_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiType" column="busi_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiTypeName" column="busi_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="assetFirstType" column="asset_first_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisAssetRelationProjectDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisAssetRelationProjectDAO.insert -->
    <insert id="MS-ASSET-RELATION-PROJECT-INSERT">
        INSERT /*MS-YRD-ASSET-RELATION-PROJECT-INSERT*/ INTO asset_relation_project
					(assets_id,
						assets_status,
						project_code,
						project_name,
						customer_id,
						customer_name,
						busi_type,
						busi_type_name,
						asset_first_type,
						raw_add_time)  
				VALUES (#assetsId#, #assetsStatus#, #projectCode#,#projectName#,#customerId#,#customerName#,#busiType#,#busiTypeName#,#assetFirstType#,#rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.update -->
    <update id="MS-ASSET-RELATION-PROJECT-UPDATE">
    <![CDATA[
        update /*MS-YRD-ASSET-RELATION-PROJECT-UPDATE*/ asset_relation_project set assets_id=#assetsId#, assets_status=#assetsStatus#, project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, busi_type=#busiType#, busi_type_name=#busiTypeName#, asset_first_type=#assetFirstType# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.findById -->
    <select id="MS-ASSET-RELATION-PROJECT-FIND-BY-ID" resultMap="RM-ASSET-RELATION-PROJECT">
    <![CDATA[
        select /*MS-YRD-ASSET-RELATION-PROJECT-FIND-BY-ID*/ * from asset_relation_project where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.findByAssetsIdAndProjectCodeAndStatusAndFirst -->
    <select id="MS-ASSET-RELATION-PROJECT-FIND-BY-ASSETS-ID-AND-PROJECT-CODE-AND-STATUS-AND-FIRST" resultMap="RM-ASSET-RELATION-PROJECT">
    <![CDATA[
        select /*MS-YRD-ASSET-RELATION-PROJECT-FIND-BY-ASSETS-ID-AND-PROJECT-CODE-AND-STATUS-AND-FIRST*/ * from asset_relation_project where ((assets_id = #assetsId#) AND (project_code = #projectCode#) AND (assets_status = #assetsStatus#) AND (asset_first_type = #assetFirstType#))
    ]]>
    </select>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.findByAssetsIdAndProjectCodeAndStatus -->
    <select id="MS-ASSET-RELATION-PROJECT-FIND-BY-ASSETS-ID-AND-PROJECT-CODE-AND-STATUS" resultMap="RM-ASSET-RELATION-PROJECT">
    <![CDATA[
        select /*MS-YRD-ASSET-RELATION-PROJECT-FIND-BY-ASSETS-ID-AND-PROJECT-CODE-AND-STATUS*/ * from asset_relation_project where ((assets_id = #assetsId#) AND (project_code = #projectCode#) AND (assets_status = #assetsStatus#))
    ]]>
    </select>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.findByAssetsId -->
    <select id="MS-ASSET-RELATION-PROJECT-FIND-BY-ASSETS-ID" resultMap="RM-ASSET-RELATION-PROJECT">
    <![CDATA[
        select /*MS-YRD-ASSET-RELATION-PROJECT-FIND-BY-ASSETS-ID*/ * from asset_relation_project where (assets_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.findByCustomerId -->
    <select id="MS-ASSET-RELATION-PROJECT-FIND-BY-CUSTOMER-ID" resultMap="RM-ASSET-RELATION-PROJECT">
    <![CDATA[
        select /*MS-YRD-ASSET-RELATION-PROJECT-FIND-BY-CUSTOMER-ID*/ * from asset_relation_project where (customer_id = #value#) group by assets_id
    ]]>
    </select>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.deleteByProjectCode -->
    <delete id="MS-ASSET-RELATION-PROJECT-DELETE-BY-PROJECT-CODE">
    <![CDATA[
        delete /*MS-YRD-ASSET-RELATION-PROJECT-DELETE-BY-PROJECT-CODE*/ from asset_relation_project where (project_code = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.deleteById -->
    <delete id="MS-ASSET-RELATION-PROJECT-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-ASSET-RELATION-PROJECT-DELETE-BY-ID*/ from asset_relation_project where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.findByCondition -->
    <select id="MS-ASSET-RELATION-PROJECT-FIND-BY-CONDITION" resultMap="RM-ASSET-RELATION-PROJECT">
        SELECT /*MS-YRD-ASSET-RELATION-PROJECT-FIND-BY-CONDITION*/ * from asset_relation_project where 1=1
	        <dynamic>
	        	<isGreaterThan property="assetRelationProject.id"  compareValue="0" prepend=" and ">
	               id = #assetRelationProject.id#
	            </isGreaterThan>
	       		 <isGreaterThan property="assetRelationProject.assetsId"  compareValue="0" prepend=" and ">
	               assets_id = #assetRelationProject.assetsId#
	            </isGreaterThan>
	            <isGreaterThan property="assetRelationProject.customerId"  compareValue="0" prepend=" and ">
	               customer_id = #assetRelationProject.customerId#
	            </isGreaterThan>
	            
	            <isNotEmpty property="assetRelationProject.projectCode" prepend=" and ">
	               project_code like concat('%',#assetRelationProject.projectCode#,'%')
	            </isNotEmpty>
	            
	             <isNotEmpty property="assetRelationProject.projectName" prepend=" and ">
	               project_name like concat('%',#assetRelationProject.projectName#,'%')
	            </isNotEmpty>	
	              <isNotEmpty property="assetRelationProject.assetsStatus" prepend=" and ">
	               assets_status = #assetRelationProject.assetsStatus#
	            </isNotEmpty>  
	            
	            <isNotEmpty property="assetRelationProject.customerName" prepend=" and ">
	               customer_name = #assetRelationProject.customerName#
	            </isNotEmpty>  
	            <isNotEmpty property="assetRelationProject.busiType" prepend=" and ">
	               busi_type = #assetRelationProject.busiType#
	            </isNotEmpty>  
	            <isNotEmpty property="assetRelationProject.busiTypeName" prepend=" and ">
	               busi_type_name = #assetRelationProject.busiTypeName#
	            </isNotEmpty>
	            <isNotEmpty property="assetRelationProject.assetFirstType" prepend=" and ">
	               asset_first_type = #assetRelationProject.assetFirstType#
	            </isNotEmpty>     
	               
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisAssetRelationProjectDAO.findByConditionCount -->
    <select id="MS-ASSET-RELATION-PROJECT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-ASSET-RELATION-PROJECT-FIND-BY-CONDITION-COUNT*/  count(*)  FROM asset_relation_project  where 1=1
	        <dynamic>
	             <isGreaterThan property="id"  compareValue="0" prepend=" and ">
	               id = #assetRelationProject.id#
	            </isGreaterThan>
	       		 <isGreaterThan property="assetsId"  compareValue="0" prepend=" and ">
	               assets_id = #assetsId#
	            </isGreaterThan>
	            <isGreaterThan property="customerId"  compareValue="0" prepend=" and ">
	               customer_id = #customerId#
	            </isGreaterThan>
	            
	            <isNotEmpty property="projectCode" prepend=" and ">
	               project_code like concat('%',#projectCode#,'%')
	            </isNotEmpty>
	            
	             <isNotEmpty property="projectName" prepend=" and ">
	               project_name like concat('%',#projectName#,'%')
	            </isNotEmpty>	
	              <isNotEmpty property="assetsStatus" prepend=" and ">
	               assets_status = #assetsStatus#
	            </isNotEmpty>  
	            
	            <isNotEmpty property="customerName" prepend=" and ">
	               customer_name = #customerName#
	            </isNotEmpty>  
	            <isNotEmpty property="busiType" prepend=" and ">
	               busi_type = #busiType#
	            </isNotEmpty>  
	            <isNotEmpty property="busiTypeName" prepend=" and ">
	               busi_type_name = #busiTypeName#
	            </isNotEmpty> 
	             <isNotEmpty property="assetFirstType" prepend=" and ">
	               asset_first_type = #assetFirstType#
	            </isNotEmpty>            
	        </dynamic>
    </select>

</sqlMap>
