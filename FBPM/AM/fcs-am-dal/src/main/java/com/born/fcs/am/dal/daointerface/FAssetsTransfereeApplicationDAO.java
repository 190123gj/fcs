/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.am.dal.daointerface;

// auto generated imports
import com.born.fcs.am.dal.dataobject.FAssetsTransfereeApplicationDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>f_assets_transferee_application</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_assets_transferee_application.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface FAssetsTransfereeApplicationDAO {
	/**
	 *  Insert one <tt>FAssetsTransfereeApplicationDO</tt> object to DB table <tt>f_assets_transferee_application</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_assets_transferee_application(form_id,project_code,project_name,transferee_price,transferee_time,transfer_company,is_trustee_liquidate,liquidate_time,liquidater_price,remark,attach,sort_order,is_close_message,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException;

	/**
	 *  Update DB table <tt>f_assets_transferee_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_assets_transferee_application set form_id=?, project_code=?, project_name=?, transferee_price=?, transferee_time=?, transfer_company=?, is_trustee_liquidate=?, liquidate_time=?, liquidater_price=?, remark=?, attach=?, sort_order=?, is_close_message=? where (id = ?)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transferee_application where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FAssetsTransfereeApplicationDO
	 *	@throws DataAccessException
	 */	 
    public FAssetsTransfereeApplicationDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transferee_application where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FAssetsTransfereeApplicationDO
	 *	@throws DataAccessException
	 */	 
    public FAssetsTransfereeApplicationDO findByFormId(long formId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_assets_transferee_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_assets_transferee_application where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_assets_transferee_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_assets_transferee_application where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_assets_transferee_application where ((project_name = ?) AND (project_code IS NULL))</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByOuterProjectNameCount(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transferee_application where (1 = 1)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<FAssetsTransfereeApplicationDO>
	 *	@throws DataAccessException
	 */	 
    public List<FAssetsTransfereeApplicationDO> findByCondition(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_assets_transferee_application where (1 = 1)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException;

}