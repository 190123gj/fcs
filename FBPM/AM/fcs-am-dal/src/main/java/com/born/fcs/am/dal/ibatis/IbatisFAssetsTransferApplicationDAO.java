/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.am.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.am.dal.daointerface.FAssetsTransferApplicationDAO;


// auto generated imports
import com.born.fcs.am.dal.dataobject.FAssetsTransferApplicationDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.am.dal.daointerface.FAssetsTransferApplicationDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_assets_transfer_application.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisFAssetsTransferApplicationDAO extends SqlMapClientDaoSupport implements FAssetsTransferApplicationDAO {
	/**
	 *  Insert one <tt>FAssetsTransferApplicationDO</tt> object to DB table <tt>f_assets_transfer_application</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_assets_transfer_application(form_id,project_code,project_name,transfer_price,transfer_time,transferee_company,is_to_meet,meet_type,is_trustee_liquidate,liquidate_time,liquidater_price,remark,directors_attach,attach,is_close_message,sort_order,council_apply_id,council_status,liquidater_status,is_charge,council_back,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FAssetsTransferApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FAssetsTransferApplicationDO FAssetsTransferApplication) throws DataAccessException {
    	if (FAssetsTransferApplication == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-ASSETS-TRANSFER-APPLICATION-INSERT", FAssetsTransferApplication);

        return FAssetsTransferApplication.getId();
    }

	/**
	 *  Update DB table <tt>f_assets_transfer_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_assets_transfer_application set form_id=?, project_code=?, project_name=?, transfer_price=?, transfer_time=?, transferee_company=?, is_to_meet=?, meet_type=?, is_trustee_liquidate=?, liquidate_time=?, liquidater_price=?, remark=?, directors_attach=?, attach=?, sort_order=?, is_close_message=?, council_apply_id=?, council_status=?, liquidater_status=?, is_charge=?, council_back=? where (id = ?)</tt>
	 *
	 *	@param FAssetsTransferApplication
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FAssetsTransferApplicationDO FAssetsTransferApplication) throws DataAccessException {
    	if (FAssetsTransferApplication == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-ASSETS-TRANSFER-APPLICATION-UPDATE", FAssetsTransferApplication);
    }

	/**
	 *  Query DB table <tt>f_assets_transfer_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transfer_application where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FAssetsTransferApplicationDO
	 *	@throws DataAccessException
	 */	 
    public FAssetsTransferApplicationDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (FAssetsTransferApplicationDO) getSqlMapClientTemplate().queryForObject("MS-F-ASSETS-TRANSFER-APPLICATION-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_assets_transfer_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transfer_application where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FAssetsTransferApplicationDO
	 *	@throws DataAccessException
	 */	 
    public FAssetsTransferApplicationDO findByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return (FAssetsTransferApplicationDO) getSqlMapClientTemplate().queryForObject("MS-F-ASSETS-TRANSFER-APPLICATION-FIND-BY-FORM-ID", param);

    }

	/**
	 *  Query DB table <tt>f_assets_transfer_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transfer_application where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return List<FAssetsTransferApplicationDO>
	 *	@throws DataAccessException
	 */	 
    public List<FAssetsTransferApplicationDO> findByProjectCode(String projectCode) throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-F-ASSETS-TRANSFER-APPLICATION-FIND-BY-PROJECT-CODE", projectCode);

    }

	/**
	 *  Delete records from DB table <tt>f_assets_transfer_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_assets_transfer_application where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-F-ASSETS-TRANSFER-APPLICATION-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_assets_transfer_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_assets_transfer_application where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return getSqlMapClientTemplate().delete("MS-F-ASSETS-TRANSFER-APPLICATION-DELETE-BY-FORM-ID", param);
    }

	/**
	 *  Query DB table <tt>f_assets_transfer_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transfer_application where (1 = 1)</tt>
	 *
	 *	@param FAssetsTransferApplication
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<FAssetsTransferApplicationDO>
	 *	@throws DataAccessException
	 */	 
    public List<FAssetsTransferApplicationDO> findByCondition(FAssetsTransferApplicationDO FAssetsTransferApplication, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException {
    	if (FAssetsTransferApplication == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("FAssetsTransferApplication", FAssetsTransferApplication);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);

        return getSqlMapClientTemplate().queryForList("MS-F-ASSETS-TRANSFER-APPLICATION-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>f_assets_transfer_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_assets_transfer_application where (1 = 1)</tt>
	 *
	 *	@param FAssetsTransferApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FAssetsTransferApplicationDO FAssetsTransferApplication) throws DataAccessException {
    	if (FAssetsTransferApplication == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-F-ASSETS-TRANSFER-APPLICATION-FIND-BY-CONDITION-COUNT", FAssetsTransferApplication);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}