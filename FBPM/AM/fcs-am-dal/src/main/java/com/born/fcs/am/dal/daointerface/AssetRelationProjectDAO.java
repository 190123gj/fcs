/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.am.dal.daointerface;

// auto generated imports
import com.born.fcs.am.dal.dataobject.AssetRelationProjectDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>asset_relation_project</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/asset_relation_project.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface AssetRelationProjectDAO {
	/**
	 *  Insert one <tt>AssetRelationProjectDO</tt> object to DB table <tt>asset_relation_project</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into asset_relation_project(assets_id,assets_status,project_code,project_name,customer_id,customer_name,busi_type,busi_type_name,asset_first_type,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param assetRelationProject
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(AssetRelationProjectDO assetRelationProject) throws DataAccessException;

	/**
	 *  Update DB table <tt>asset_relation_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update asset_relation_project set assets_id=?, assets_status=?, project_code=?, project_name=?, customer_id=?, customer_name=?, busi_type=?, busi_type_name=?, asset_first_type=? where (id = ?)</tt>
	 *
	 *	@param assetRelationProject
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(AssetRelationProjectDO assetRelationProject) throws DataAccessException;

	/**
	 *  Query DB table <tt>asset_relation_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from asset_relation_project where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return AssetRelationProjectDO
	 *	@throws DataAccessException
	 */	 
    public AssetRelationProjectDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>asset_relation_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from asset_relation_project where ((assets_id = ?) AND (project_code = ?) AND (assets_status = ?) AND (asset_first_type = ?))</tt>
	 *
	 *	@param assetsId
	 *	@param projectCode
	 *	@param assetsStatus
	 *	@param assetFirstType
	 *	@return AssetRelationProjectDO
	 *	@throws DataAccessException
	 */	 
    public AssetRelationProjectDO findByAssetsIdAndProjectCodeAndStatusAndFirst(long assetsId, String projectCode, String assetsStatus, String assetFirstType) throws DataAccessException;

	/**
	 *  Query DB table <tt>asset_relation_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from asset_relation_project where ((assets_id = ?) AND (project_code = ?) AND (assets_status = ?))</tt>
	 *
	 *	@param assetsId
	 *	@param projectCode
	 *	@param assetsStatus
	 *	@return List<AssetRelationProjectDO>
	 *	@throws DataAccessException
	 */	 
    public List<AssetRelationProjectDO> findByAssetsIdAndProjectCodeAndStatus(long assetsId, String projectCode, String assetsStatus) throws DataAccessException;

	/**
	 *  Query DB table <tt>asset_relation_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from asset_relation_project where (assets_id = ?)</tt>
	 *
	 *	@param assetsId
	 *	@return List<AssetRelationProjectDO>
	 *	@throws DataAccessException
	 */	 
    public List<AssetRelationProjectDO> findByAssetsId(long assetsId) throws DataAccessException;

	/**
	 *  Query DB table <tt>asset_relation_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from asset_relation_project where (customer_id = ?) group by assets_id</tt>
	 *
	 *	@param customerId
	 *	@return List<AssetRelationProjectDO>
	 *	@throws DataAccessException
	 */	 
    public List<AssetRelationProjectDO> findByCustomerId(long customerId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>asset_relation_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from asset_relation_project where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectCode(String projectCode) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>asset_relation_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from asset_relation_project where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>asset_relation_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from asset_relation_project where (1 = 1)</tt>
	 *
	 *	@param assetRelationProject
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<AssetRelationProjectDO>
	 *	@throws DataAccessException
	 */	 
    public List<AssetRelationProjectDO> findByCondition(AssetRelationProjectDO assetRelationProject, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>asset_relation_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from asset_relation_project where (1 = 1)</tt>
	 *
	 *	@param assetRelationProject
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(AssetRelationProjectDO assetRelationProject) throws DataAccessException;

}