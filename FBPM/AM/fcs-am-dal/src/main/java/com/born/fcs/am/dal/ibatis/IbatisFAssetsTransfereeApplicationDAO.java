/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.am.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.am.dal.daointerface.FAssetsTransfereeApplicationDAO;


// auto generated imports
import com.born.fcs.am.dal.dataobject.FAssetsTransfereeApplicationDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.am.dal.daointerface.FAssetsTransfereeApplicationDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_assets_transferee_application.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisFAssetsTransfereeApplicationDAO extends SqlMapClientDaoSupport implements FAssetsTransfereeApplicationDAO {
	/**
	 *  Insert one <tt>FAssetsTransfereeApplicationDO</tt> object to DB table <tt>f_assets_transferee_application</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_assets_transferee_application(form_id,project_code,project_name,transferee_price,transferee_time,transfer_company,is_trustee_liquidate,liquidate_time,liquidater_price,remark,attach,sort_order,is_close_message,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException {
    	if (FAssetsTransfereeApplication == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-ASSETS-TRANSFEREE-APPLICATION-INSERT", FAssetsTransfereeApplication);

        return FAssetsTransfereeApplication.getId();
    }

	/**
	 *  Update DB table <tt>f_assets_transferee_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_assets_transferee_application set form_id=?, project_code=?, project_name=?, transferee_price=?, transferee_time=?, transfer_company=?, is_trustee_liquidate=?, liquidate_time=?, liquidater_price=?, remark=?, attach=?, sort_order=?, is_close_message=? where (id = ?)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException {
    	if (FAssetsTransfereeApplication == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-ASSETS-TRANSFEREE-APPLICATION-UPDATE", FAssetsTransfereeApplication);
    }

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transferee_application where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FAssetsTransfereeApplicationDO
	 *	@throws DataAccessException
	 */	 
    public FAssetsTransfereeApplicationDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (FAssetsTransfereeApplicationDO) getSqlMapClientTemplate().queryForObject("MS-F-ASSETS-TRANSFEREE-APPLICATION-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transferee_application where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FAssetsTransfereeApplicationDO
	 *	@throws DataAccessException
	 */	 
    public FAssetsTransfereeApplicationDO findByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return (FAssetsTransfereeApplicationDO) getSqlMapClientTemplate().queryForObject("MS-F-ASSETS-TRANSFEREE-APPLICATION-FIND-BY-FORM-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>f_assets_transferee_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_assets_transferee_application where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-F-ASSETS-TRANSFEREE-APPLICATION-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_assets_transferee_application</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_assets_transferee_application where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return getSqlMapClientTemplate().delete("MS-F-ASSETS-TRANSFEREE-APPLICATION-DELETE-BY-FORM-ID", param);
    }

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_assets_transferee_application where ((project_name = ?) AND (project_code IS NULL))</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByOuterProjectNameCount(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException {
    	if (FAssetsTransfereeApplication == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-F-ASSETS-TRANSFEREE-APPLICATION-FIND-BY-OUTER-PROJECT-NAME-COUNT", FAssetsTransfereeApplication);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_assets_transferee_application where (1 = 1)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<FAssetsTransfereeApplicationDO>
	 *	@throws DataAccessException
	 */	 
    public List<FAssetsTransfereeApplicationDO> findByCondition(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException {
    	if (FAssetsTransfereeApplication == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("FAssetsTransfereeApplication", FAssetsTransfereeApplication);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);

        return getSqlMapClientTemplate().queryForList("MS-F-ASSETS-TRANSFEREE-APPLICATION-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>f_assets_transferee_application</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_assets_transferee_application where (1 = 1)</tt>
	 *
	 *	@param FAssetsTransfereeApplication
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FAssetsTransfereeApplicationDO FAssetsTransfereeApplication) throws DataAccessException {
    	if (FAssetsTransfereeApplication == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-F-ASSETS-TRANSFEREE-APPLICATION-FIND-BY-CONDITION-COUNT", FAssetsTransfereeApplication);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}