/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.am.dal.daointerface;

// auto generated imports
import com.born.fcs.am.dal.dataobject.PledgeTypeCommonDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>pledge_type_common</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/pledge_type_common.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface PledgeTypeCommonDAO {
	/**
	 *  Insert one <tt>PledgeTypeCommonDO</tt> object to DB table <tt>pledge_type_common</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into pledge_type_common(assets_id,type_id,pledge_rate,evaluation_company,evaluation_price,mortgage_price,longitude,latitude,asset_remark_info,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param pledgeTypeCommon
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(PledgeTypeCommonDO pledgeTypeCommon) throws DataAccessException;

	/**
	 *  Update DB table <tt>pledge_type_common</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update pledge_type_common set assets_id=?, type_id=?, pledge_rate=?, evaluation_company=?, evaluation_price=?, mortgage_price=?, longitude=?, latitude=?, asset_remark_info=? where (common_id = ?)</tt>
	 *
	 *	@param pledgeTypeCommon
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(PledgeTypeCommonDO pledgeTypeCommon) throws DataAccessException;

	/**
	 *  Query DB table <tt>pledge_type_common</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from pledge_type_common where (assets_id = ?)</tt>
	 *
	 *	@param assetsId
	 *	@return PledgeTypeCommonDO
	 *	@throws DataAccessException
	 */	 
    public PledgeTypeCommonDO findByAssetsId(long assetsId) throws DataAccessException;

	/**
	 *  Query DB table <tt>pledge_type_common</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from pledge_type_common where (common_id = ?)</tt>
	 *
	 *	@param commonId
	 *	@return PledgeTypeCommonDO
	 *	@throws DataAccessException
	 */	 
    public PledgeTypeCommonDO findById(long commonId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>pledge_type_common</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from pledge_type_common where (common_id = ?)</tt>
	 *
	 *	@param commonId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long commonId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>pledge_type_common</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from pledge_type_common where (assets_id = ?)</tt>
	 *
	 *	@param assetsId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByAssetsId(long assetsId) throws DataAccessException;

	/**
	 *  Query DB table <tt>pledge_type_common</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from pledge_type_common where (1 = 1)</tt>
	 *
	 *	@param pledgeTypeCommon
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<PledgeTypeCommonDO>
	 *	@throws DataAccessException
	 */	 
    public List<PledgeTypeCommonDO> findByCondition(PledgeTypeCommonDO pledgeTypeCommon, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>pledge_type_common</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from pledge_type_common where (1 = 1)</tt>
	 *
	 *	@param pledgeTypeCommon
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(PledgeTypeCommonDO pledgeTypeCommon) throws DataAccessException;

}