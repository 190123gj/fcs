/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.rm.dal.daointerface;

// auto generated imports
import com.born.fcs.rm.dal.dataobject.RegularProjectRiskInfoMonthDO;
import org.springframework.dao.DataAccessException;

/**
 * A dao interface provides methods to access database table <tt>regular_project_risk_info_month</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/regular_project_risk_info_month.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */

public interface RegularProjectRiskInfoMonthDAO {
	/**
	 *  Insert one <tt>RegularProjectRiskInfoMonthDO</tt> object to DB table <tt>regular_project_risk_info_month</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into regular_project_risk_info_month(report_date,report_year,report_month,customer_id,customer_name,busi_license_no,project_code,project_name,comp_balance_beginning,comp_balance_ending,comp_amount_this_year,comp_amount_this_month,comp_amount_this_month_detail,comp_back_amount_this_year,comp_back_amount_this_month,comp_back_amount_this_month_detail,loss_amount,risk_level,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param regularProjectRiskInfoMonth
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String insert(RegularProjectRiskInfoMonthDO regularProjectRiskInfoMonth) throws DataAccessException;

	/**
	 *  Update DB table <tt>regular_project_risk_info_month</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update regular_project_risk_info_month set report_year=?, report_month=?, customer_id=?, customer_name=?, busi_license_no=?, project_name=?, comp_balance_beginning=?, comp_balance_ending=?, comp_amount_this_year=?, comp_amount_this_month=?, comp_amount_this_month_detail=?, comp_back_amount_this_year=?, comp_back_amount_this_month=?, comp_back_amount_this_month_detail=?, loss_amount=?, risk_level=? where ((report_date = ?) AND (project_code = ?))</tt>
	 *
	 *	@param regularProjectRiskInfoMonth
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(RegularProjectRiskInfoMonthDO regularProjectRiskInfoMonth) throws DataAccessException;

	/**
	 *  Query DB table <tt>regular_project_risk_info_month</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from regular_project_risk_info_month where ((report_date = ?) AND (project_code = ?))</tt>
	 *
	 *	@param reportDate
	 *	@param projectCode
	 *	@return RegularProjectRiskInfoMonthDO
	 *	@throws DataAccessException
	 */	 
    public RegularProjectRiskInfoMonthDO findByPrimary(String reportDate, String projectCode) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>regular_project_risk_info_month</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from regular_project_risk_info_month where (report_date = ?)</tt>
	 *
	 *	@param reportDate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReportDate(String reportDate) throws DataAccessException;

}