/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.rm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.rm.dal.daointerface.RegularProjectExtraListInfoDAO;


// auto generated imports
import com.born.fcs.rm.dal.dataobject.RegularProjectExtraListInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.Date;

/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.rm.dal.daointerface.RegularProjectExtraListInfoDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/regular_project_extra_list_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 

public class IbatisRegularProjectExtraListInfoDAO extends SqlMapClientDaoSupport implements RegularProjectExtraListInfoDAO {
	/**
	 *  Insert one <tt>RegularProjectExtraListInfoDO</tt> object to DB table <tt>regular_project_extra_list_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into regular_project_extra_list_info(id,report_date,project_code,type,start_date,occur_date,amount,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param regularProjectExtraListInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(RegularProjectExtraListInfoDO regularProjectExtraListInfo) throws DataAccessException {
    	if (regularProjectExtraListInfo == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-REGULAR-PROJECT-EXTRA-LIST-INFO-INSERT", regularProjectExtraListInfo);

        return regularProjectExtraListInfo.getId();
    }

	/**
	 *  Update DB table <tt>regular_project_extra_list_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update regular_project_extra_list_info set report_date=?, project_code=?, type=?, start_date=?, occur_date=?, amount=? where (id = ?)</tt>
	 *
	 *	@param regularProjectExtraListInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(RegularProjectExtraListInfoDO regularProjectExtraListInfo) throws DataAccessException {
    	if (regularProjectExtraListInfo == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-REGULAR-PROJECT-EXTRA-LIST-INFO-UPDATE", regularProjectExtraListInfo);
    }

	/**
	 *  Delete records from DB table <tt>regular_project_extra_list_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from regular_project_extra_list_info where (report_date = ?)</tt>
	 *
	 *	@param reportDate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReportDate(Date reportDate) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-REGULAR-PROJECT-EXTRA-LIST-INFO-DELETE-BY-REPORT-DATE", reportDate);
    }

}