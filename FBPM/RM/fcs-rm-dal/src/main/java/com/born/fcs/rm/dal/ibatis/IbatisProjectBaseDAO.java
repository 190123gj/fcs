/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.rm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.rm.dal.daointerface.ProjectBaseDAO;


// auto generated imports
import com.born.fcs.rm.dal.dataobject.ProjectBaseDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.rm.dal.daointerface.ProjectBaseDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_base.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisProjectBaseDAO extends SqlMapClientDaoSupport implements ProjectBaseDAO {
	/**
	 *  Insert one <tt>ProjectBaseDO</tt> object to DB table <tt>project_base</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_base(report_id,report_year,report_month,project_code,project_name,customer_id,customer_name,customer_type,dept_id,dept_code,dept_name,dept_path,dept_path_name,risk_review_time,project_channel_id,project_channel_name,project_sub_channel_id,project_sub_channel_name,capital_channel_id,capital_channel_name,capital_sub_channel_id,capital_sub_channel_name,busi_type,busi_type_name,amount,time_limit,time_unit,start_time,end_time,new_add,releasable,busi_manager_name,risk_manager_name,legal_manager_name,contract_rate,contract_type,progress,setup_approval_time,investigation_submit_time,investigation_approval_time,council_start_time,council_approval_time,guarantee_fee,guarantee_type,storage,risk_level,busi_sub_type,busi_sub_type_name,industry_code,industry_name,phases,phases_status,status,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectBase
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectBaseDO projectBase) throws DataAccessException {
    	if (projectBase == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PROJECT-BASE-INSERT", projectBase);

        return projectBase.getProjectBaseId();
    }

	/**
	 *  Update DB table <tt>project_base</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_base set report_id=?, report_year=?, report_month=?, project_code=?, project_name=?, customer_id=?, customer_name=?, customer_type=?, dept_id=?, dept_code=?, dept_name=?, dept_path=?, dept_path_name=?, risk_review_time=?, project_channel_id=?, project_channel_name=?, project_sub_channel_id=?, project_sub_channel_name=?, capital_channel_id=?, capital_channel_name=?, capital_sub_channel_id=?, capital_sub_channel_name=?, busi_type=?, busi_type_name=?, amount=?, time_limit=?, time_unit=?, start_time=?, end_time=?, new_add=?, releasable=?, busi_manager_name=?, risk_manager_name=?, legal_manager_name=?, contract_rate=?, contract_type=?, progress=?, setup_approval_time=?, investigation_submit_time=?, investigation_approval_time=?, council_start_time=?, council_approval_time=?, guarantee_fee=?, guarantee_type=?, storage=?, risk_level=?, busi_sub_type=?, busi_sub_type_name=?, industry_code=?, industry_name=?, phases=?, phases_status=?, status=? where (project_base_id = ?)</tt>
	 *
	 *	@param projectBase
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectBaseDO projectBase) throws DataAccessException {
    	if (projectBase == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-PROJECT-BASE-UPDATE", projectBase);
    }

	/**
	 *  Query DB table <tt>project_base</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_base where (project_base_id = ?)</tt>
	 *
	 *	@param projectBaseId
	 *	@return ProjectBaseDO
	 *	@throws DataAccessException
	 */	 
    public ProjectBaseDO findById(long projectBaseId) throws DataAccessException {
        Long param = new Long(projectBaseId);

        return (ProjectBaseDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-BASE-FIND-BY-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>project_base</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_base where (project_base_id = ?)</tt>
	 *
	 *	@param projectBaseId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long projectBaseId) throws DataAccessException {
        Long param = new Long(projectBaseId);

        return getSqlMapClientTemplate().delete("MS-PROJECT-BASE-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>project_base</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from project_base where (1 = 1)</tt>
	 *
	 *	@param projectBase
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ProjectBaseDO projectBase) throws DataAccessException {
    	if (projectBase == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-PROJECT-BASE-FIND-BY-CONDITION-COUNT", projectBase);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>project_base</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_base where (1 = 1)</tt>
	 *
	 *	@param projectBase
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<ProjectBaseDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectBaseDO> findByCondition(ProjectBaseDO projectBase, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException {
    	if (projectBase == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("projectBase", projectBase);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);

        return getSqlMapClientTemplate().queryForList("MS-PROJECT-BASE-FIND-BY-CONDITION", param);

    }

}