<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table customer_base_info -->
    <resultMap id="RM-CUSTOMER-BASE-INFO" class="com.born.fcs.crm.dal.dataobject.CustomerBaseInfoDO">
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerId" column="customer_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contactMobile" column="contact_mobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="resoursFrom" column="resours_from" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certType" column="cert_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiLicenseNo" column="busi_license_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certNo" column="cert_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isDistribution" column="is_distribution" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="customerManager" column="customer_manager" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerManagerId" column="customer_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="director" column="director" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depId" column="dep_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="depName" column="dep_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depPath" column="dep_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="directorId" column="director_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="inputPerson" column="input_person" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="inputPersonId" column="input_person_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerLevel" column="customer_level" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="industryCode" column="industry_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countryCode" column="country_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countryName" column="country_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="provinceCode" column="province_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="provinceName" column="province_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cityCode" column="city_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cityName" column="city_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countyCode" column="county_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countyName" column="county_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="channalId" column="channal_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="channalName" column="channal_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="channalType" column="channal_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="enterpriseType" column="enterprise_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isTemporary" column="is_temporary" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="projectStatus" column="project_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evalueStatus" column="evalue_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="changeStatus" column="change_status" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="customerType" column="customer_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCustomerBaseInfoDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCustomerBaseInfoDAO.insert -->
    <insert id="MS-CUSTOMER-BASE-INFO-INSERT">
        INSERT /*MS-YRD-CUSTOMER-BASE-INFO-INSERT*/ INTO customer_base_info(user_id,customer_id,customer_name,contact_mobile,sex,resours_from,cert_type,busi_license_no,cert_no,is_distribution,customer_manager,customer_manager_id,director,dep_id,dep_name,director_id,input_person,input_person_id,customer_level,industry_code,country_code,country_name,province_code,province_name,city_code,city_name,county_code,county_name,channal_id,channal_name,channal_type,enterprise_type,status,is_temporary,project_status,evalue_status,change_status,customer_type,raw_add_time,dep_path) values (#userId#, #customerId#, #customerName#, #contactMobile#,#sex#, #resoursFrom#, #certType#, #busiLicenseNo#, #certNo#, #isDistribution#, #customerManager#, #customerManagerId#, #director#, #depId#, #depName#, #directorId#, #inputPerson#, #inputPersonId#, #customerLevel#, #industryCode#, #countryCode#, #countryName#, #provinceCode#, #provinceName#, #cityCode#, #cityName#, #countyCode#, #countyName#, #channalId#, #channalName#, #channalType#, #enterpriseType#, #status#, #isTemporary#, #projectStatus#, #evalueStatus#,#changeStatus#,#customerType#, #rawAddTime#,#depPath#)
			<selectKey  resultClass ="long"  keyProperty ="userId" >   
		         SELECT LAST_INSERT_ID() AS ID 
		     </selectKey>
    </insert>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.findByUserId -->
    <select id="MS-CUSTOMER-BASE-INFO-FIND-BY-USER-ID" resultMap="RM-CUSTOMER-BASE-INFO">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-BASE-INFO-FIND-BY-USER-ID*/ user_id, customer_id, customer_name, contact_mobile, sex, resours_from, cert_type, busi_license_no, cert_no, is_distribution, customer_manager, customer_manager_id, director, dep_id, dep_name, director_id, input_person, input_person_id, customer_level, industry_code, country_code, country_name, province_code, province_name, city_code, city_name, county_code, county_name, channal_id, channal_name, channal_type, enterprise_type, status, is_temporary, project_status, evalue_status, change_status, customer_type, raw_add_time, raw_update_time, dep_path from customer_base_info where (user_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.findByCustomerId -->
    <select id="MS-CUSTOMER-BASE-INFO-FIND-BY-CUSTOMER-ID" resultMap="RM-CUSTOMER-BASE-INFO">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-BASE-INFO-FIND-BY-CUSTOMER-ID*/ user_id, customer_id, customer_name, contact_mobile, sex, resours_from, cert_type, busi_license_no, cert_no, is_distribution, customer_manager, customer_manager_id, director, dep_id, dep_name, director_id, input_person, input_person_id, customer_level, industry_code, country_code, country_name, province_code, province_name, city_code, city_name, county_code, county_name, channal_id, channal_name, channal_type, enterprise_type, status, is_temporary, project_status, evalue_status, change_status, customer_type, raw_add_time, raw_update_time, dep_path from customer_base_info where (customer_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.deleteByUserId -->
    <delete id="MS-CUSTOMER-BASE-INFO-DELETE-BY-USER-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-BASE-INFO-DELETE-BY-USER-ID*/ from customer_base_info where (user_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.deleteByCustomerId -->
    <delete id="MS-CUSTOMER-BASE-INFO-DELETE-BY-CUSTOMER-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-BASE-INFO-DELETE-BY-CUSTOMER-ID*/ from customer_base_info where (customer_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.updateByUserId -->
    <update id="MS-CUSTOMER-BASE-INFO-UPDATE-BY-USER-ID">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-BASE-INFO-UPDATE-BY-USER-ID*/ customer_base_info set customer_id=#customerId#, customer_name=#customerName#, contact_mobile=#contactMobile#, sex=#sex#, resours_from=#resoursFrom#, cert_type=#certType#, busi_license_no=#busiLicenseNo#, cert_no=#certNo#, is_distribution=#isDistribution#, customer_manager=#customerManager#, customer_manager_id=#customerManagerId#, director=#director#, dep_id=#depId#, dep_name=#depName#, director_id=#directorId#, input_person=#inputPerson#, input_person_id=#inputPersonId#, customer_level=#customerLevel#, industry_code=#industryCode#, country_code=#countryCode#, country_name=#countryName#, province_code=#provinceCode#, province_name=#provinceName#, city_code=#cityCode#, city_name=#cityName#, county_code=#countyCode#, county_name=#countyName#, channal_id=#channalId#, channal_name=#channalName#, channal_type=#channalType#, enterprise_type=#enterpriseType#, status=#status#, is_temporary=#isTemporary#, project_status=#projectStatus#, evalue_status=#evalueStatus#, change_status=#changeStatus#, customer_type=#customerType#, dep_path=#depPath# where (user_id = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.updateByCustomerId -->
    <update id="MS-CUSTOMER-BASE-INFO-UPDATE-BY-CUSTOMER-ID">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-BASE-INFO-UPDATE-BY-CUSTOMER-ID*/ customer_base_info set customer_id=#customerId#, customer_name=#customerName#, contact_mobile=#contactMobile#, sex=#sex#, resours_from=#resoursFrom#, cert_type=#certType#, busi_license_no=#busiLicenseNo#, cert_no=#certNo#, is_distribution=#isDistribution#, customer_manager=#customerManager#, customer_manager_id=#customerManagerId#, director=#director#, dep_id=#depId#, dep_name=#depName#, director_id=#directorId#, input_person=#inputPerson#, input_person_id=#inputPersonId#, customer_level=#customerLevel#, industry_code=#industryCode#, country_code=#countryCode#, country_name=#countryName#, province_code=#provinceCode#, province_name=#provinceName#, city_code=#cityCode#, city_name=#cityName#, county_code=#countyCode#, county_name=#countyName#, channal_id=#channalId#, channal_name=#channalName#, channal_type=#channalType#, enterprise_type=#enterpriseType#, status=#status#, is_temporary=#isTemporary#, project_status=#projectStatus#, evalue_status=#evalueStatus#, change_status=#changeStatus#, customer_type=#customerType#, dep_path=#depPath# where (customer_id = #customerId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.updateDirector -->
    <update id="MS-CUSTOMER-BASE-INFO-UPDATE-DIRECTOR">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-BASE-INFO-UPDATE-DIRECTOR*/ customer_base_info set director=#director#, director_id=#directorId#, dep_id=#depId#, dep_name=#depName#, dep_path=#depPath# where (user_id = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.updateManager -->
    <update id="MS-CUSTOMER-BASE-INFO-UPDATE-MANAGER">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-BASE-INFO-UPDATE-MANAGER*/ customer_base_info set customer_manager=#customerManager#, customer_manager_id=#customerManagerId#, dep_id=#depId#, dep_name=#depName#, is_distribution=#isDistribution#, dep_path=#depPath# where (user_id = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.updateProjectStatus -->
    <update id="MS-CUSTOMER-BASE-INFO-UPDATE-PROJECT-STATUS">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-BASE-INFO-UPDATE-PROJECT-STATUS*/ customer_base_info set project_status=#projectStatus# where (user_id = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.updateEvalueStatus -->
    <update id="MS-CUSTOMER-BASE-INFO-UPDATE-EVALUE-STATUS">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-BASE-INFO-UPDATE-EVALUE-STATUS*/ customer_base_info set evalue_status=#evalueStatus# where (customer_id = #customerId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.findWithCondition -->
    <select id="MS-CUSTOMER-BASE-INFO-FIND-WITH-CONDITION" resultMap="RM-CUSTOMER-BASE-INFO">
        SELECT /*MS-YRD-CUSTOMER-BASE-INFO-FIND-WITH-CONDITION*/  user_id ,customer_id ,customer_name ,contact_mobile,sex ,resours_from ,cert_type ,busi_license_no ,cert_no ,is_distribution ,customer_manager ,customer_manager_id ,director ,dep_id ,dep_name ,director_id ,input_person ,input_person_id ,customer_level ,industry_code ,country_code ,country_name ,province_code ,province_name ,city_code ,city_name ,county_code ,county_name ,channal_id ,channal_name ,channal_type ,enterprise_type ,status ,is_temporary ,project_status ,evalue_status ,change_status ,customer_type ,raw_add_time ,raw_update_time ,dep_path FROM customer_base_info 				
				<dynamic prepend="where">	
					<isNotEmpty property="customerBaseInfo.channalName" prepend=" and ">
                       channal_name = #customerBaseInfo.channalName#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.channalType" prepend=" and ">
                       channal_type = #customerBaseInfo.channalType#
                   	</isNotEmpty>
                   	<isGreaterThan property="customerBaseInfo.channalId" prepend=" and " compareValue="0">
                       channal_id = #customerBaseInfo.channalId#
                   	</isGreaterThan>
					<isNotEmpty property="customerBaseInfo.customerId" prepend=" and ">
                       customer_id = #customerBaseInfo.customerId#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerType" prepend=" and ">
                       customer_type = #customerBaseInfo.customerType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.status" prepend=" and ">
                       status = #customerBaseInfo.status#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerName" prepend=" and ">
                       customer_name = #customerBaseInfo.customerName#
                   	</isNotEmpty>
                   		<isNotEmpty property="customerBaseInfo.resoursFrom" prepend=" and ">
                       resours_from = #customerBaseInfo.resoursFrom#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certType" prepend=" and ">
                       cert_type = #customerBaseInfo.certType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certNo" prepend=" and ">
                       cert_no = #customerBaseInfo.certNo#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.busiLicenseNo" prepend=" and ">
                       busi_license_no = #customerBaseInfo.busiLicenseNo#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.isDistribution" prepend=" and ">
                       is_distribution = #customerBaseInfo.isDistribution#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerManager" prepend=" and ">
                       customer_manager = #customerBaseInfo.customerManager#
                   	</isNotEmpty>
                   	
                   	<isNotEmpty property="customerBaseInfo.director" prepend=" and ">
                       director = #customerBaseInfo.director#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.depName" prepend=" and ">
                       dep_name = #customerBaseInfo.depName#
                   	</isNotEmpty>
                   <isGreaterThan property="customerBaseInfo.depId" prepend=" and " compareValue="0">
                       dep_id = #customerBaseInfo.depId#
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.customerManagerId" prepend=" and " compareValue="0">
                       customer_manager_id = #customerBaseInfo.customerManagerId#
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.directorId" prepend=" and " compareValue="0">
                       director_id = #customerBaseInfo.directorId#
                   	</isGreaterThan>                   	
                   	<isNotEmpty property="customerBaseInfo.inputPerson" prepend=" and ">
                       input_person = #customerBaseInfo.inputPerson#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerLevel" prepend=" and ">
                       customer_level = #customerBaseInfo.customerLevel#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.sex" prepend=" and ">
                       sex = #customerBaseInfo.sex#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.isTemporary" prepend=" and ">
	              		is_temporary >= #customerBaseInfo.isTemporary#
	           		 </isNotEmpty> 
	           		 <isNotEmpty property="customerBaseInfo.evalueStatus" prepend=" and ">
                       evalue_status = #customerBaseInfo.evalueStatus#
                   	</isNotEmpty>                  	
                   	<isNotEmpty property="customerLevelList" prepend=" and ">
						customer_level in
						<iterate property="customerLevelList" open="(" close=")" conjunction=",">
							#customerLevelList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="industryCodeList" prepend=" and ">
						industry_code in
						<iterate property="industryCodeList" open="(" close=")" conjunction=",">
							#industryCodeList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="cityCodeList" prepend=" and ">
						city_code in
						<iterate property="cityCodeList" open="(" close=")" conjunction=",">
							#cityCodeList[]#
						</iterate>
					</isNotEmpty>
					
					<isNotEmpty property="beginDate" prepend=" and ">
	              		raw_add_time >= #beginDate#
	           		 </isNotEmpty>
					<isNotEmpty property="endDate" prepend=" and ">
		             	#endDate# >=  raw_add_time 
		            </isNotEmpty>
		            <isNotEmpty property="likeCustomerName" prepend=" and ">
		             	customer_name like concat('%',#likeCustomerName#,'%') 
		            </isNotEmpty>

		            <isNotEmpty property="likeNameOrId" prepend=" and ">
		             	customer_name like concat('%',#likeNameOrId#,'%') or  busi_license_no like concat('%',#likeNameOrId#,'%') or cert_no like concat('%',#likeNameOrId#,'%') 
		            </isNotEmpty>		            
		                   
		            <isNotEmpty property="customerBaseInfo.director" prepend=" and ">
		             	director = #customerBaseInfo.director# 
		            </isNotEmpty>
		             <isNotEmpty property="customerBaseInfo.projectStatus" prepend=" and ">
		             	project_status = #customerBaseInfo.projectStatus# 
		            </isNotEmpty>
		            
		            <isGreaterThan property="loginUserId" prepend=" and " compareValue="0">
                      ( (customer_manager_id > '0' and customer_manager_id = #loginUserId# ) or (customer_manager_id = '0') )
                   	</isGreaterThan>
                   	
		            <isNotEmpty property="deptIdList" prepend=" and ">
						(
						<iterate property="deptIdList" open="(" close=")" conjunction="or">
							dep_path like concat('%',#deptIdList[]#,'%')   
						</iterate>
						or dep_id = '0' )
					</isNotEmpty>
		            
				</dynamic>			
				order by raw_update_time DESC
			    LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.countWithCondition -->
    <select id="MS-CUSTOMER-BASE-INFO-COUNT-WITH-CONDITION" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-BASE-INFO-COUNT-WITH-CONDITION*/  count(*) FROM customer_base_info
				<dynamic prepend="where">
					<isNotEmpty property="customerBaseInfo.channalName" prepend=" and ">
                       channal_name = #customerBaseInfo.channalName#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.channalType" prepend=" and ">
                       channal_type = #customerBaseInfo.channalType#
                   	</isNotEmpty>
                   	<isGreaterThan property="customerBaseInfo.channalId" prepend=" and " compareValue="0">
                       channal_id = #customerBaseInfo.channalId#
                   	</isGreaterThan>
					<isNotEmpty property="customerBaseInfo.customerId" prepend=" and ">
                       customer_id = #customerBaseInfo.customerId#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerType" prepend=" and ">
                       customer_type = #customerBaseInfo.customerType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.status" prepend=" and ">
                       status = #customerBaseInfo.status#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerName" prepend=" and ">
                       customer_name = #customerBaseInfo.customerName#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.director" prepend=" and ">
                       director = #customerBaseInfo.director#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.depName" prepend=" and ">
                       dep_name = #customerBaseInfo.depName#
                   	</isNotEmpty>
                   <isGreaterThan property="customerBaseInfo.depId" prepend=" and " compareValue="0">
                       dep_id = #customerBaseInfo.depId#
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.customerManagerId" prepend=" and " compareValue="0">
                       customer_manager_id = #customerBaseInfo.customerManagerId#
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.directorId" prepend=" and " compareValue="0">
                       director_id = #customerBaseInfo.directorId#
                   	</isGreaterThan>
                   	<isNotEmpty property="customerBaseInfo.resoursFrom" prepend=" and ">
                       resours_from = #customerBaseInfo.resoursFrom#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certType" prepend=" and ">
                       cert_type = #customerBaseInfo.certType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certNo" prepend=" and ">
                       cert_no = #customerBaseInfo.certNo#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.busiLicenseNo" prepend=" and ">
                       busi_license_no = #customerBaseInfo.busiLicenseNo#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.isDistribution" prepend=" and ">
                       is_distribution = #customerBaseInfo.isDistribution#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerManager" prepend=" and ">
                       customer_manager = #customerBaseInfo.customerManager#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.inputPerson" prepend=" and ">
                       input_person = #customerBaseInfo.inputPerson#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerLevel" prepend=" and ">
                       customer_level = #customerBaseInfo.customerLevel#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.sex" prepend=" and ">
                       sex = #customerBaseInfo.sex#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.evalueStatus" prepend=" and ">
                       evalue_status = #customerBaseInfo.evalueStatus#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.isTemporary" prepend=" and ">
	              		is_temporary >= #customerBaseInfo.isTemporary#
	           		 </isNotEmpty>                   	
                   	<isNotEmpty property="customerLevelList" prepend=" and ">
						customer_level in
						<iterate property="customerLevelList" open="(" close=")" conjunction=",">
							#customerLevelList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="industryCodeList" prepend=" and ">
						industry_code in
						<iterate property="industryCodeList" open="(" close=")" conjunction=",">
							#industryCodeList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="cityCodeList" prepend=" and ">
						city_code in
						<iterate property="cityCodeList" open="(" close=")" conjunction=",">
							#cityCodeList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="likeCustomerName" prepend=" and ">
		             	customer_name like concat('%',#likeCustomerName#,'%') 
		            </isNotEmpty> 
		            
		            <isNotEmpty property="likeNameOrId" prepend=" and ">
		             	customer_name like concat('%',#likeNameOrId#,'%') or  busi_license_no like concat('%',#likeNameOrId#,'%') or cert_no like concat('%',#likeNameOrId#,'%') 
		            </isNotEmpty>		            
		                    
					<isNotEmpty property="beginDate" prepend=" and ">
	              		raw_add_time >= #beginDate#
	           		 </isNotEmpty>
					<isNotEmpty property="endDate" prepend=" and ">
		             	#endDate# >=  raw_add_time 
		            </isNotEmpty>
		             <isNotEmpty property="director" prepend=" and ">
		             	director = #director# 
		            </isNotEmpty>
		             <isNotEmpty property="customerBaseInfo.projectStatus" prepend=" and ">
		             	project_status = #customerBaseInfo.projectStatus# 
		            </isNotEmpty>
		            
		            
                   	<isGreaterThan property="loginUserId" prepend=" and " compareValue="0">
                      ( (customer_manager_id >0 and customer_manager_id = #loginUserId# ) or (customer_manager_id = '0') )
                   	</isGreaterThan>
                   	
		            <isNotEmpty property="deptIdList" prepend=" and ">
						(
						<iterate property="deptIdList" open="(" close=")" conjunction="or">
							dep_path like concat('%',#deptIdList[]#,'%')   
						</iterate>
						or dep_id = '0' )
					</isNotEmpty>
					
		            
		            
				</dynamic>
    </select>

</sqlMap>
