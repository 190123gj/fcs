<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table evaluating_financial_set -->
    <resultMap id="RM-EVALUATING-FINANCIAL-SET" class="com.born.fcs.crm.dal.dataobject.EvaluatingFinancialSetDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="year" column="year" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string1" column="string1" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string2" column="string2" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string3" column="string3" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string4" column="string4" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string5" column="string5" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string6" column="string6" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string7" column="string7" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string8" column="string8" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string9" column="string9" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string10" column="string10" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string11" column="string11" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string12" column="string12" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string13" column="string13" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string14" column="string14" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string15" column="string15" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string16" column="string16" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string17" column="string17" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string18" column="string18" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string19" column="string19" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string20" column="string20" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="string21" column="string21" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="calculatingFormula" column="calculating_formula" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="typeChild" column="type_child" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rowAddTime" column="row_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisEvaluatingFinancialSetDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisEvaluatingFinancialSetDAO.insert -->
    <insert id="MS-EVALUATING-FINANCIAL-SET-INSERT">
    <![CDATA[
        insert /*MS-YRD-EVALUATING-FINANCIAL-SET-INSERT*/ into evaluating_financial_set(id,year,string1,string2,string3,string4,string5,string6,string7,string8,string9,string10,string11,string12,string13,string14,string15,string16,string17,string18,string19,string20,string21,calculating_formula,type_child,type,row_add_time) values (#id#, #year#, #string1#, #string2#, #string3#, #string4#, #string5#, #string6#, #string7#, #string8#, #string9#, #string10#, #string11#, #string12#, #string13#, #string14#, #string15#, #string16#, #string17#, #string18#, #string19#, #string20#, #string21#, #calculatingFormula#, #typeChild#, #type#, #rowAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisEvaluatingFinancialSetDAO.deleteById -->
    <delete id="MS-EVALUATING-FINANCIAL-SET-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-FINANCIAL-SET-DELETE-BY-ID*/ from evaluating_financial_set where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingFinancialSetDAO.update -->
    <update id="MS-EVALUATING-FINANCIAL-SET-UPDATE">
    <![CDATA[
        update /*MS-YRD-EVALUATING-FINANCIAL-SET-UPDATE*/ evaluating_financial_set set year=#year#, string1=#string1#, string2=#string2#, string3=#string3#, string4=#string4#, string5=#string5#, string6=#string6#, string7=#string7#, string8=#string8#, string9=#string9#, string10=#string10#, string11=#string11#, string12=#string12#, string13=#string13#, string14=#string14#, string15=#string15#, string16=#string16#, string17=#string17#, string18=#string18#, string19=#string19#, string20=#string20#, string21=#string21#, calculating_formula=#calculatingFormula#, type_child=#typeChild#, type=#type#, row_add_time=#rowAddTime# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEvaluatingFinancialSetDAO.findWithCondition -->
    <select id="MS-EVALUATING-FINANCIAL-SET-FIND-WITH-CONDITION" resultMap="RM-EVALUATING-FINANCIAL-SET">
        SELECT /*MS-YRD-EVALUATING-FINANCIAL-SET-FIND-WITH-CONDITION*/  id ,year ,string1 ,string2 ,string3 ,string4 ,string5 ,string6 ,string7 ,string8 ,string9 ,string10 ,string11 ,string12 ,string13 ,string14 ,string15 ,string16 ,string17 ,string18 ,string19 ,string20 ,string21 ,calculating_formula ,type_child ,type ,row_add_time ,raw_update_time  FROM evaluating_financial_set				
			<dynamic prepend="where">
				<isNotEmpty property="year" prepend=" and " >
                     year = #year#
                  	</isNotEmpty>
                  	 <isNotEmpty property="type" prepend=" and " >
                     type = #type#
                  	</isNotEmpty>
                  	<isNotEmpty property="typeChild" prepend=" and ">
                      type_child = #typeChild#
                  	</isNotEmpty>                	
			</dynamic>
    </select>

</sqlMap>
