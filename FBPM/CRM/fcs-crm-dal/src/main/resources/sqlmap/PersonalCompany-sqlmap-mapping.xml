<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table personal_company -->
    <resultMap id="RM-PERSONAL-COMPANY" class="com.born.fcs.crm.dal.dataobject.PersonalCompanyDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerId" column="customer_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perCompany" column="per_company" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perRegistAmount" column="per_regist_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="perRegistDate" column="per_regist_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="perLinkPerson" column="per_link_person" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perAddress" column="per_address" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perLinkMobile" column="per_link_mobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perMemo" column="per_memo" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perStatus" column="per_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perentId" column="perent_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="childId" column="child_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="perIsTemporary" column="per_is_temporary" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPersonalCompanyDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPersonalCompanyDAO.insert -->
    <insert id="MS-PERSONAL-COMPANY-INSERT">
    <![CDATA[
        insert /*MS-YRD-PERSONAL-COMPANY-INSERT*/ into personal_company(id,customer_id,per_company,per_regist_amount,per_regist_date,per_link_person,per_address,per_link_mobile,per_memo,per_status,perent_id,child_id,per_is_temporary,raw_add_time) values (#id#, #customerId#, #perCompany#, #perRegistAmount.cent#, #perRegistDate#, #perLinkPerson#, #perAddress#, #perLinkMobile#, #perMemo#, #perStatus#, #perentId#, #childId#, #perIsTemporary#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisPersonalCompanyDAO.findById -->
    <select id="MS-PERSONAL-COMPANY-FIND-BY-ID" resultMap="RM-PERSONAL-COMPANY">
    <![CDATA[
        select /*MS-YRD-PERSONAL-COMPANY-FIND-BY-ID*/ id, customer_id, per_company, per_regist_amount, per_regist_date, per_link_person, per_address, per_link_mobile, per_memo, per_status, perent_id, child_id, per_is_temporary, raw_add_time, raw_update_time from personal_company where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalCompanyDAO.findByAllIds -->
    <select id="MS-PERSONAL-COMPANY-FIND-BY-ALL-IDS" resultClass="long">
    <![CDATA[
        select /*MS-YRD-PERSONAL-COMPANY-FIND-BY-ALL-IDS*/ id from personal_company where (customer_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalCompanyDAO.deleteById -->
    <delete id="MS-PERSONAL-COMPANY-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PERSONAL-COMPANY-DELETE-BY-ID*/ from personal_company where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPersonalCompanyDAO.deleteByCustomerId -->
    <delete id="MS-PERSONAL-COMPANY-DELETE-BY-CUSTOMER-ID">
    <![CDATA[
        delete /*MS-YRD-PERSONAL-COMPANY-DELETE-BY-CUSTOMER-ID*/ from personal_company where (customer_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPersonalCompanyDAO.update -->
    <update id="MS-PERSONAL-COMPANY-UPDATE">
    <![CDATA[
        update /*MS-YRD-PERSONAL-COMPANY-UPDATE*/ personal_company set customer_id=#customerId#, per_company=#perCompany#, per_regist_amount=#perRegistAmount.cent#, per_regist_date=#perRegistDate#, per_link_person=#perLinkPerson#, per_address=#perAddress#, per_link_mobile=#perLinkMobile#, per_memo=#perMemo#, per_status=#perStatus#, perent_id=#perentId#, child_id=#childId#, per_is_temporary=#perIsTemporary# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPersonalCompanyDAO.findWithCondition -->
    <select id="MS-PERSONAL-COMPANY-FIND-WITH-CONDITION" resultMap="RM-PERSONAL-COMPANY">
        SELECT /*MS-YRD-PERSONAL-COMPANY-FIND-WITH-CONDITION*/  id ,customer_id ,per_company ,per_regist_amount ,per_regist_date ,per_link_person ,per_address ,per_link_mobile ,per_memo ,per_status ,perent_id ,child_id ,per_is_temporary ,raw_add_time ,raw_update_time  FROM personal_company
				<dynamic prepend="where">
					<isNotEmpty property="personalCompany.customerId" prepend=" and ">
                       customer_id = #personalCompany.customerId#
                   	</isNotEmpty>
				</dynamic>			
				order by raw_update_time
			    LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisPersonalCompanyDAO.countWithCondition -->
    <select id="MS-PERSONAL-COMPANY-COUNT-WITH-CONDITION" resultClass="long">
        SELECT /*MS-YRD-PERSONAL-COMPANY-COUNT-WITH-CONDITION*/  count(*) FROM personal_company
				<dynamic prepend="where">
					<isNotEmpty property="customerId" prepend=" and ">
                       customer_id = #customerId#
                   	</isNotEmpty>
				</dynamic>
    </select>

</sqlMap>
