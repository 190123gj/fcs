<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>estate-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>estate-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="yrd">

    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisExtraDAO.getSysdate -->
    <select id="MS-COMMON-GET-SYSDATE" resultClass="java.util.Date">
        <![CDATA[
			select current_timestamp from dual
		]]>
    </select>
    
        <!--驳回的代办任务-->
	<resultMap id="RM-BUSI-BACK-TASK" class="com.born.fcs.crm.dal.dataobject.BackTaskDO">
		<result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
		<result property="formCode" column="form_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result property="subject" column="subject" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result property="taskName" column="taskName" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result property="creator" column="creator" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="taskStartTime" column="taskStartTime" javaType="java.util.Date" jdbcType="DATETIME"/>
	</resultMap>	
	
	<!-- 驳回的代办任务列表 -->
    <select id="MS-BUSI-BACK-TASK" resultMap="RM-BUSI-BACK-TASK">
		 SELECT
		  f.form_id,
		  f.form_code,
		  f.form_name subject,
		  u.task_name taskName,
		  u.user_name creator,
		  f.raw_update_time createTime,
		  u.task_start_time taskStartTime 
		FROM form f
		  JOIN form_related_user u
		    ON f.form_id = u.form_id
		WHERE f.STATUS = 'BACK'
		AND u.user_type = 'FLOW_SUBMIT_MAN'
		AND u.user_id = #value# order by form_id desc
    </select>
    
    		

				
    
    
    <select id="MS-EXTRA-STATISTICS-CUSTOMER-REGION" resultClass="java.util.HashMap">
	(SELECT COUNT(*) 'count',
			  country_name 'region'
			FROM customer_base_info
			WHERE STATUS = 'on'
			AND country_name IS NOT NULL AND  country_name !="" AND country_name!="中国"
			GROUP BY country_name)		
	UNION 		  
	(		SELECT
			  COUNT(*) 		'count',
			  province_name 'region'
			FROM customer_base_info
			WHERE STATUS = 'on'
			AND province_code IS NOT NULL
			AND province_code != ''
			GROUP BY province_code )   	
    </select> 
    
    <select id="MS-EXTRA-STATISTICS-CUSTOMER-DEPT" resultClass="java.util.HashMap">
		SELECT
		  COUNT(*) 'count',
		  cr.dep_name 'dept'
		FROM customer_relation cr LEFT JOIN customer_base_info cb ON cr.user_id=cb.user_id
		WHERE 
		 cb.status = 'on'
		GROUP BY cr.dep_id     	
    </select>
    
    <select id="MS-EXTRA-STATISTICS-ALL-DEPT" resultClass="java.util.HashMap">
		SELECT
		 cr.dep_name 'dept',
		 cr.dep_id 'orgId'
		  
		FROM customer_relation cr LEFT JOIN customer_base_info cb ON cr.user_id=cb.user_id
		WHERE 
		 cb.status = 'on'
		GROUP BY cr.dep_id     	
    </select> 
     
    <resultMap id="RM-CUSTOMER-BASE-INFO_LIST" class="com.born.fcs.crm.dal.dataobject.CustomerBaseInfoDO">
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerId" column="customer_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contactMobile" column="contact_mobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="resoursFrom" column="resours_from" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certType" column="cert_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiLicenseNo" column="busi_license_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certNo" column="cert_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isDistribution" column="is_distribution" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="customerManager" column="customer_manager" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerManagerId" column="customer_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="director" column="director" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depId" column="dep_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="depName" column="dep_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depPath" column="dep_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="directorId" column="director_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="inputPerson" column="input_person" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="inputPersonId" column="input_person_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerLevel" column="customer_level" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="industryCode" column="industry_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countryCode" column="country_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countryName" column="country_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="provinceCode" column="province_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="provinceName" column="province_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cityCode" column="city_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cityName" column="city_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countyCode" column="county_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="countyName" column="county_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="channalId" column="channal_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="channalName" column="channal_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="channalType" column="channal_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="enterpriseType" column="enterprise_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isTemporary" column="is_temporary" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="projectStatus" column="project_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evalueStatus" column="evalue_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="changeStatus" column="change_status" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="customerType" column="customer_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="RM-CUSTOMER-RELATION_LIST" class="com.born.fcs.crm.dal.dataobject.CustomerRelationListDO" extends="RM-CUSTOMER-BASE-INFO_LIST">
        <result property="relationId" column="cr.relation_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerManagerId" column="customer_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerManager" column="customer_manager" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="directorId" column="director_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="director" column="director" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depId" column="dep_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="depName" column="dep_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depPath" column="dep_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="operId" column="oper_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="operName" column="oper_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>
     <select id="MS-CUSTOMER-RELATION_LIST-WITH-CONDITION" resultMap="RM-CUSTOMER-RELATION_LIST">
         SELECT cb.user_id ,cb.customer_id ,cb.customer_name ,cb.contact_mobile,cb.sex ,cb.resours_from ,cb.cert_type ,cb.busi_license_no ,cb.cert_no ,cb.is_distribution ,cr.customer_manager ,cr.customer_manager_id ,cr.director ,cr.dep_id ,cr.dep_name ,cr.director_id ,cb.input_person ,cb.input_person_id ,cb.customer_level ,cb.industry_code ,cb.country_code ,cb.country_name ,cb.province_code ,cb.province_name ,cb.city_code ,cb.city_name ,cb.county_code ,cb.county_name ,cb.channal_id ,cb.channal_name ,cb.channal_type ,cb.enterprise_type ,cb.status ,cb.is_temporary ,cb.project_status ,cb.evalue_status ,cb.change_status ,cb.customer_type ,cb.raw_add_time ,cb.raw_update_time ,cr.dep_path,cr.relation_id,cr.oper_id,cr.oper_name FROM customer_base_info cb left join customer_relation cr on 	cb.user_id=cr.user_id			
				<dynamic prepend="where">	
					<isNotEmpty property="customerBaseInfo.channalName" prepend=" and ">
                       cb.channal_name = #customerBaseInfo.channalName#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.channalType" prepend=" and ">
                        cb.channal_type = #customerBaseInfo.channalType#
                   	</isNotEmpty>
                   	<isGreaterThan property="customerBaseInfo.channalId" prepend=" and " compareValue="0">
                        cb.channal_id = #customerBaseInfo.channalId#
                   	</isGreaterThan>
					<isNotEmpty property="customerBaseInfo.customerId" prepend=" and ">
                        cb.customer_id = #customerBaseInfo.customerId#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerType" prepend=" and ">
                        cb.customer_type = #customerBaseInfo.customerType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.status" prepend=" and ">
                        cb.status = #customerBaseInfo.status#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerName" prepend=" and ">
                        cb.customer_name = #customerBaseInfo.customerName#
                   	</isNotEmpty>
                   		<isNotEmpty property="customerBaseInfo.resoursFrom" prepend=" and ">
                        cb.resours_from = #customerBaseInfo.resoursFrom#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certType" prepend=" and ">
                       cb.cert_type = #customerBaseInfo.certType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certNo" prepend=" and ">
                        cb.cert_no = #customerBaseInfo.certNo#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.busiLicenseNo" prepend=" and ">
                        cb.busi_license_no = #customerBaseInfo.busiLicenseNo#
                   	</isNotEmpty>
                   	
                   	<isEqual property="customerBaseInfo.isDistribution" compareValue="IS" prepend=" and ">
                   		cr.customer_manager_id > '0'
                   	</isEqual>
                   <isEqual property="customerBaseInfo.isDistribution" compareValue="NO" prepend=" and ">
                   		( cr.customer_manager_id = '0' or cr.customer_manager_id is null )
                   	</isEqual>

                   	<isNotEmpty property="customerBaseInfo.customerManager" prepend=" and ">
                        cr.customer_manager = #customerBaseInfo.customerManager#
                   	</isNotEmpty>
                   	
                   	<isNotEmpty property="customerBaseInfo.director" prepend=" and ">
                       cr.director = #customerBaseInfo.director#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.depName" prepend=" and ">
                       cr.dep_name = #customerBaseInfo.depName#
                   	</isNotEmpty>
                   <isGreaterThan property="customerBaseInfo.depId" prepend=" and " compareValue="0">
                       cr.dep_id = #customerBaseInfo.depId#
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.customerManagerId" prepend=" and " compareValue="0">
                      (
                      	cr.customer_manager_id = #customerBaseInfo.customerManagerId#
                   	  	<isEqual property="includePublic" prepend=" or " compareValue="IS">
                   	  		cb.is_distribution = 'NO'
                   	  	</isEqual>
                   	  )
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.directorId" prepend=" and " compareValue="0">
                       cr.director_id = #customerBaseInfo.directorId#
                   	</isGreaterThan>                   	
                   	<isNotEmpty property="customerBaseInfo.inputPerson" prepend=" and ">
                       cb.input_person = #customerBaseInfo.inputPerson#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerLevel" prepend=" and ">
                       cb.customer_level = #customerBaseInfo.customerLevel#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.sex" prepend=" and ">
                       cb.sex = #customerBaseInfo.sex#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.isTemporary" prepend=" and ">
	              		cb.is_temporary >= #customerBaseInfo.isTemporary#
	           		 </isNotEmpty> 
	           		 <isNotEmpty property="customerBaseInfo.evalueStatus" prepend=" and ">
                       cb.evalue_status = #customerBaseInfo.evalueStatus#
                   	</isNotEmpty>                  	
                   	<isNotEmpty property="customerLevelList" prepend=" and ">
						cb.customer_level in
						<iterate property="customerLevelList" open="(" close=")" conjunction=",">
							#customerLevelList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="industryCodeList" prepend=" and ">
						cb.industry_code in
						<iterate property="industryCodeList" open="(" close=")" conjunction=",">
							#industryCodeList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="cityCodeList" prepend=" and ">
						cb.city_code in
						<iterate property="cityCodeList" open="(" close=")" conjunction=",">
							#cityCodeList[]#
						</iterate>
					</isNotEmpty>					
					<isEqual property="mobileQuery" compareValue="IS" prepend=" and ">
                   		(cb.contact_mobile is not null  and cb.contact_mobile!="")
                   	</isEqual>
                   	<isEqual property="mobileQuery" compareValue="NO" prepend=" and ">
                   		(cb.contact_mobile is  null or cb.contact_mobile="")
                   	</isEqual>						
					<isNotEmpty property="beginDate" prepend=" and ">
	              		cb.raw_add_time >= #beginDate#
	           		 </isNotEmpty>
					<isNotEmpty property="endDate" prepend=" and ">
		             	#endDate# >=  cb.raw_add_time 
		            </isNotEmpty>
		            <isNotEmpty property="likeCustomerName" prepend=" and ">
		             	cb.customer_name like concat('%',#likeCustomerName#,'%') 
		            </isNotEmpty>
		            <isNotEmpty property="likeNameOrId" prepend=" and ">
		             	cb.customer_name like concat('%',#likeNameOrId#,'%') or  cb.busi_license_no like concat('%',#likeNameOrId#,'%') or cb.cert_no like concat('%',#likeNameOrId#,'%') 
		            </isNotEmpty>
		            
		            <isNotEmpty property="likeCertNo" prepend=" and ">
		             	cb.cert_no like concat('%',#likeCertNo#,'%') 
		            </isNotEmpty>
		            <isNotEmpty property="likeBusiLicenseNo" prepend=" and ">
		             	cb.busi_license_no like concat('%',#likeBusiLicenseNo#,'%') 
		            </isNotEmpty>
		            	
		            <isNotEmpty property="customerBaseInfo.director" prepend=" and ">
		             	cr.director = #customerBaseInfo.director# 
		            </isNotEmpty>
		             <isNotEmpty property="customerBaseInfo.projectStatus" prepend=" and ">
		             	cb.project_status = #customerBaseInfo.projectStatus# 
		            </isNotEmpty>
		            
		            <isGreaterThan property="loginUserId" prepend=" and " compareValue="0">
                      ( (cr.customer_manager_id > '0' and cr.customer_manager_id = #loginUserId# ) or (cr.customer_manager_id = '0') or (cr.customer_manager_id is null))
                   	</isGreaterThan>
                   	
		            <isNotEmpty property="deptIdList" prepend=" and ">
						(
						<iterate property="deptIdList" open="(" close=")" conjunction="or">
							cr.dep_path like concat('%',#deptIdList[]#,'%')   
						</iterate>
						or cr.dep_id = '0'  or cr.dep_id is null)
					</isNotEmpty>
		            
				</dynamic>			
				order by cb.raw_update_time DESC
			    LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisCustomerBaseInfoDAO.countWithCondition -->
    <select id="MS-RELATION_LIST-COUNT-WITH-CONDITION" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-BASE-INFO-COUNT-WITH-CONDITION*/  count(*) FROM customer_base_info cb left join customer_relation cr on 	cb.user_id=cr.user_id
				<dynamic prepend="where">	
					<isNotEmpty property="customerBaseInfo.channalName" prepend=" and ">
                       cb.channal_name = #customerBaseInfo.channalName#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.channalType" prepend=" and ">
                        cb.channal_type = #customerBaseInfo.channalType#
                   	</isNotEmpty>
                   	<isGreaterThan property="customerBaseInfo.channalId" prepend=" and " compareValue="0">
                        cb.channal_id = #customerBaseInfo.channalId#
                   	</isGreaterThan>
					<isNotEmpty property="customerBaseInfo.customerId" prepend=" and ">
                        cb.customer_id = #customerBaseInfo.customerId#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerType" prepend=" and ">
                        cb.customer_type = #customerBaseInfo.customerType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.status" prepend=" and ">
                        cb.status = #customerBaseInfo.status#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerName" prepend=" and ">
                        cb.customer_name = #customerBaseInfo.customerName#
                   	</isNotEmpty>
                   		<isNotEmpty property="customerBaseInfo.resoursFrom" prepend=" and ">
                        cb.resours_from = #customerBaseInfo.resoursFrom#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certType" prepend=" and ">
                       cb.cert_type = #customerBaseInfo.certType#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.certNo" prepend=" and ">
                        cb.cert_no = #customerBaseInfo.certNo#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.busiLicenseNo" prepend=" and ">
                        cb.busi_license_no = #customerBaseInfo.busiLicenseNo#
                   	</isNotEmpty>
                   	<isEqual property="customerBaseInfo.isDistribution" compareValue="IS" prepend=" and ">
                   		cr.customer_manager_id > '0'
                   	</isEqual>
                   <isEqual property="customerBaseInfo.isDistribution" compareValue="NO" prepend=" and ">
                   		( cr.customer_manager_id = '0' or cr.customer_manager_id is null )
                   	</isEqual>
                   	<isNotEmpty property="customerBaseInfo.customerManager" prepend=" and ">
                        cr.customer_manager = #customerBaseInfo.customerManager#
                   	</isNotEmpty>
                   	
                   	<isNotEmpty property="customerBaseInfo.director" prepend=" and ">
                       cr.director = #customerBaseInfo.director#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.depName" prepend=" and ">
                       cr.dep_name = #customerBaseInfo.depName#
                   	</isNotEmpty>
                   <isGreaterThan property="customerBaseInfo.depId" prepend=" and " compareValue="0">
                       cr.dep_id = #customerBaseInfo.depId#
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.customerManagerId" prepend=" and " compareValue="0">
                      (
                      	cr.customer_manager_id = #customerBaseInfo.customerManagerId#
                   	  	<isEqual property="includePublic" prepend=" or " compareValue="IS">
                   	  		cb.is_distribution = 'NO'
                   	  	</isEqual>
                   	  )
                   	</isGreaterThan>
                   	<isGreaterThan property="customerBaseInfo.directorId" prepend=" and " compareValue="0">
                       cr.director_id = #customerBaseInfo.directorId#
                   	</isGreaterThan>                   	
                   	<isNotEmpty property="customerBaseInfo.inputPerson" prepend=" and ">
                       cb.input_person = #customerBaseInfo.inputPerson#
                   	</isNotEmpty>
                   	<isNotEmpty property="customerBaseInfo.customerLevel" prepend=" and ">
                       cb.customer_level = #customerBaseInfo.customerLevel#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.sex" prepend=" and ">
                       cb.sex = #customerBaseInfo.sex#
                   	</isNotEmpty>
					<isNotEmpty property="customerBaseInfo.isTemporary" prepend=" and ">
	              		cb.is_temporary >= #customerBaseInfo.isTemporary#
	           		 </isNotEmpty> 
	           		 <isNotEmpty property="customerBaseInfo.evalueStatus" prepend=" and ">
                       cb.evalue_status = #customerBaseInfo.evalueStatus#
                   	</isNotEmpty>                  	
                   	<isNotEmpty property="customerLevelList" prepend=" and ">
						cb.customer_level in
						<iterate property="customerLevelList" open="(" close=")" conjunction=",">
							#customerLevelList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="industryCodeList" prepend=" and ">
						cb.industry_code in
						<iterate property="industryCodeList" open="(" close=")" conjunction=",">
							#industryCodeList[]#
						</iterate>
					</isNotEmpty>
					<isNotEmpty property="cityCodeList" prepend=" and ">
						cb.city_code in
						<iterate property="cityCodeList" open="(" close=")" conjunction=",">
							#cityCodeList[]#
						</iterate>
					</isNotEmpty>
					<isEqual property="mobileQuery" compareValue="IS" prepend=" and ">
                   		(cb.contact_mobile is not null and cb.contact_mobile != "")
                   	</isEqual>
                   	<isEqual property="mobileQuery" compareValue="NO" prepend=" and ">
                   		(cb.contact_mobile is  null or cb.contact_mobile = "")
                   	</isEqual>					
					<isNotEmpty property="beginDate" prepend=" and ">
	              		cb.raw_add_time >= #beginDate#
	           		 </isNotEmpty>
					<isNotEmpty property="endDate" prepend=" and ">
		             	#endDate# >=  cb.raw_add_time 
		            </isNotEmpty>
		            <isNotEmpty property="likeCustomerName" prepend=" and ">
		             	cb.customer_name like concat('%',#likeCustomerName#,'%') 
		            </isNotEmpty>
		            <isNotEmpty property="likeNameOrId" prepend=" and ">
		             	cb.customer_name like concat('%',#likeNameOrId#,'%') or  cb.busi_license_no like concat('%',#likeNameOrId#,'%') or cb.cert_no like concat('%',#likeNameOrId#,'%') 
		            </isNotEmpty>
		            <isNotEmpty property="likeCertNo" prepend=" and ">
		             	cb.cert_no like concat('%',#likeCertNo#,'%') 
		            </isNotEmpty>
		            <isNotEmpty property="likeBusiLicenseNo" prepend=" and ">
		             	cb.busi_license_no like concat('%',#likeBusiLicenseNo#,'%') 
		            </isNotEmpty>
		            <isNotEmpty property="customerBaseInfo.director" prepend=" and ">
		             	cr.director = #customerBaseInfo.director# 
		            </isNotEmpty>
		             <isNotEmpty property="customerBaseInfo.projectStatus" prepend=" and ">
		             	cb.project_status = #customerBaseInfo.projectStatus# 
		            </isNotEmpty>
		            
		            <isGreaterThan property="loginUserId" prepend=" and " compareValue="0">
                      ( (cr.customer_manager_id > '0' and cr.customer_manager_id = #loginUserId# ) or (cr.customer_manager_id = '0') or (cr.customer_manager_id is null))
                   	</isGreaterThan>
                   	
		            <isNotEmpty property="deptIdList" prepend=" and ">
						(
						<iterate property="deptIdList" open="(" close=")" conjunction="or">
							cr.dep_path like concat('%',#deptIdList[]#,'%')   
						</iterate>
						or cr.dep_id = '0'   or cr.dep_id is null)
					</isNotEmpty>
		            
				</dynamic>
    </select>
    
    <resultMap id="RM-BUSY-REGION" class="com.born.fcs.crm.dal.dataobject.BusyRegionDO">
        <result property="code" column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>
     <select id="MS-BUSY-REGION-FIND-ALL-BY-DEP-PATH" resultMap="RM-BUSY-REGION">
        SELECT   DISTINCT code ,name FROM busy_region  where dep_path like concat('%',#value#,'%')
    </select>
    
    
</sqlMap>
