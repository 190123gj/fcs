<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table evaluating_base_set -->
    <resultMap id="RM-EVALUATING-BASE-SET" class="com.born.fcs.crm.dal.dataobject.EvaluatingBaseSetDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="level1Id" column="level1_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="level1Name" column="level1_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level1Description" column="level1_description" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level1Score" column="level1_score" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level2Id" column="level2_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="level2Name" column="level2_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level2Description" column="level2_description" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level2Score" column="level2_score" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level3Id" column="level3_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="level3Name" column="level3_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level3Description" column="level3_description" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level3Score" column="level3_score" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level4Id" column="level4_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="level4Name" column="level4_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level4Description" column="level4_description" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level4Score" column="level4_score" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evaluatingContent" column="evaluating_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evaluatingResult" column="evaluating_result" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="score" column="score" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="standardValue" column="standard_value" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="compareMethod" column="compare_method" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="compareMethod2" column="compare_method2" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="compareMethod3" column="compare_method3" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="compareStandardValue" column="compare_standard_value" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evaluatingStandardValue" column="evaluating_standard_value" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="compareEvaluatingStandardValue" column="compare_evaluating_standard_value" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="calculatingFormula" column="calculating_formula" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level" column="level" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="perentLevel" column="perent_level" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="orderNum1" column="order_num1" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="orderNum2" column="order_num2" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="orderNum3" column="order_num3" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="orderNum4" column="order_num4" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="perentId" column="perent_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="childId" column="child_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="isTemporary" column="is_temporary" javaType="java.lang.String" jdbcType="ENUM"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisEvaluatingBaseSetDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.insert -->
    <insert id="MS-EVALUATING-BASE-SET-INSERT">
    
        insert /*MS-YRD-EVALUATING-BASE-SET-INSERT*/ into evaluating_base_set(id,level1_id,level1_name,level1_description,level1_score,level2_id,level2_name,level2_description,level2_score,level3_id,level3_name,level3_description,level3_score,level4_id,level4_name,level4_description,level4_score,evaluating_content,evaluating_result,score,standard_value,compare_method,compare_method2,compare_method3,compare_standard_value,evaluating_standard_value,compare_evaluating_standard_value,calculating_formula,level,perent_level,type,status,order_num1,order_num2,order_num3,order_num4,perent_id,child_id,is_temporary,raw_add_time) values (#id#, #level1Id#, #level1Name#, #level1Description#, #level1Score#, #level2Id#, #level2Name#, #level2Description#, #level2Score#, #level3Id#, #level3Name#, #level3Description#, #level3Score#, #level4Id#, #level4Name#, #level4Description#, #level4Score#, #evaluatingContent#, #evaluatingResult#, #score#, #standardValue#, #compareMethod#, #compareMethod2#, #compareMethod3#, #compareStandardValue#, #evaluatingStandardValue#, #compareEvaluatingStandardValue#, #calculatingFormula#, #level#, #perentLevel#, #type#, #status#, #orderNum1#, #orderNum2#, #orderNum3#, #orderNum4#, #perentId#, #childId#, #isTemporary#, #rawAddTime#)
			<!-- 自动生成后需手动加上以下信息 -->
			<selectKey  resultClass ="long"  keyProperty ="id" >   
		         SELECT LAST_INSERT_ID() AS ID 
		     </selectKey> 
		     <!-- 自动生成后需手动加上以上信息 -->    
    </insert>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.findById -->
    <select id="MS-EVALUATING-BASE-SET-FIND-BY-ID" resultMap="RM-EVALUATING-BASE-SET">
    <![CDATA[
        select /*MS-YRD-EVALUATING-BASE-SET-FIND-BY-ID*/ id, level1_id, level1_name, level1_description, level1_score, level2_id, level2_name, level2_description, level2_score, level3_id, level3_name, level3_description, level3_score, level4_id, level4_name, level4_description, level4_score, evaluating_content, evaluating_result, score, standard_value, compare_method, compare_method2, compare_method3, compare_standard_value, evaluating_standard_value, compare_evaluating_standard_value, calculating_formula, level, perent_level, type, status, order_num1, order_num2, order_num3, order_num4, perent_id, child_id, is_temporary, raw_add_time, raw_update_time from evaluating_base_set where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.deleteById -->
    <delete id="MS-EVALUATING-BASE-SET-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-BASE-SET-DELETE-BY-ID*/ from evaluating_base_set where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.deleteByLevel1Id -->
    <delete id="MS-EVALUATING-BASE-SET-DELETE-BY-LEVEL-1-ID">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-BASE-SET-DELETE-BY-LEVEL-1-ID*/ from evaluating_base_set where (level1_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.deleteByLevel2Id -->
    <delete id="MS-EVALUATING-BASE-SET-DELETE-BY-LEVEL-2-ID">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-BASE-SET-DELETE-BY-LEVEL-2-ID*/ from evaluating_base_set where (level2_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.deleteByLevel3Id -->
    <delete id="MS-EVALUATING-BASE-SET-DELETE-BY-LEVEL-3-ID">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-BASE-SET-DELETE-BY-LEVEL-3-ID*/ from evaluating_base_set where (level3_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.deleteByLevel4Id -->
    <delete id="MS-EVALUATING-BASE-SET-DELETE-BY-LEVEL-4-ID">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-BASE-SET-DELETE-BY-LEVEL-4-ID*/ from evaluating_base_set where (level4_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.updateById -->
    <update id="MS-EVALUATING-BASE-SET-UPDATE-BY-ID">
    <![CDATA[
        update /*MS-YRD-EVALUATING-BASE-SET-UPDATE-BY-ID*/ evaluating_base_set set level1_id=#level1Id#, level1_name=#level1Name#, level1_description=#level1Description#, level1_score=#level1Score#, level2_id=#level2Id#, level2_name=#level2Name#, level2_description=#level2Description#, level2_score=#level2Score#, level3_id=#level3Id#, level3_name=#level3Name#, level3_description=#level3Description#, level3_score=#level3Score#, level4_id=#level4Id#, level4_name=#level4Name#, level4_description=#level4Description#, level4_score=#level4Score#, evaluating_content=#evaluatingContent#, evaluating_result=#evaluatingResult#, score=#score#, standard_value=#standardValue#, compare_method=#compareMethod#, compare_method2=#compareMethod2#, compare_method3=#compareMethod3#, compare_standard_value=#compareStandardValue#, evaluating_standard_value=#evaluatingStandardValue#, compare_evaluating_standard_value=#compareEvaluatingStandardValue#, calculating_formula=#calculatingFormula#, level=#level#, perent_level=#perentLevel#, type=#type#, status=#status#, order_num1=#orderNum1#, order_num2=#orderNum2#, order_num3=#orderNum3#, order_num4=#orderNum4#, perent_id=#perentId#, child_id=#childId#, is_temporary=#isTemporary# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.updateByLevel1Id -->
    <update id="MS-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-1-ID">
    <![CDATA[
        update /*MS-YRD-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-1-ID*/ evaluating_base_set set level1_name=#level1Name#, level1_description=#level1Description#, level1_score=#level1Score#, order_num1=#orderNum1# where (level1_id = #level1Id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.updateByLevel2IdForCtBz -->
    <update id="MS-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-2-ID-FOR-CT-BZ">
    <![CDATA[
        update /*MS-YRD-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-2-ID-FOR-CT-BZ*/ evaluating_base_set set level2_name=#level2Name#, level2_description=#level2Description#, level2_score=#level2Score#, standard_value=#standardValue#, order_num2=#orderNum2# where (level2_id = #level2Id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.updateByLevel2Id -->
    <update id="MS-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-2-ID">
    <![CDATA[
        update /*MS-YRD-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-2-ID*/ evaluating_base_set set level2_name=#level2Name#, level2_description=#level2Description#, level2_score=#level2Score#, order_num2=#orderNum2# where (level2_id = #level2Id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.updateByLevel3Id -->
    <update id="MS-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-3-ID">
    <![CDATA[
        update /*MS-YRD-EVALUATING-BASE-SET-UPDATE-BY-LEVEL-3-ID*/ evaluating_base_set set level3_name=#level3Name#, level3_description=#level3Description#, level3_score=#level3Score#, status=#status#, is_temporary=#isTemporary#, order_num3=#orderNum3# where (level3_id = #level3Id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.findWithCondition -->
    <select id="MS-EVALUATING-BASE-SET-FIND-WITH-CONDITION" resultMap="RM-EVALUATING-BASE-SET">
        SELECT /*MS-YRD-EVALUATING-BASE-SET-FIND-WITH-CONDITION*/  id ,level1_id ,level1_name ,level1_description ,level1_score ,level2_id ,level2_name ,level2_description ,level2_score ,level3_id ,level3_name ,level3_description ,level3_score ,level4_id ,level4_name ,level4_description ,level4_score ,evaluating_content ,evaluating_result ,score ,standard_value ,compare_method ,compare_method2 ,compare_method3 ,compare_standard_value ,evaluating_standard_value ,compare_evaluating_standard_value ,calculating_formula ,level ,perent_level ,type ,status ,order_num1 ,order_num2 ,order_num3 ,order_num4 ,perent_id ,child_id ,is_temporary ,raw_add_time ,raw_update_time  FROM evaluating_base_set				<dynamic prepend="where">
					<isNotEmpty property="evaluatingBaseSet.level" prepend=" and " >
                      level = #evaluatingBaseSet.level#
                   	</isNotEmpty>
                   	<isNotEmpty property="evaluatingBaseSet.status" prepend=" and ">
                       status = #evaluatingBaseSet.status#
                   	</isNotEmpty>
                   	<isGreaterThan property="level1Id" prepend=" and " compareValue="0">
                       level1_id = #level1Id#
                   	</isGreaterThan>
					<isGreaterThan property="level2Id" prepend=" and " compareValue="0">
                       level2_id = #level2Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level3Id" prepend=" and " compareValue="0">
                       level3_id = #level3Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level4Id" prepend=" and " compareValue="0">
                       level4_id = #level4Id#
                   	</isGreaterThan>
                   	<isNotEmpty property="evaluatingBaseSet.type" prepend=" and ">
                       type = #evaluatingBaseSet.type#
                   	</isNotEmpty>
                   	 <isNotEmpty property="evaluatingBaseSet.isTemporary" prepend=" and ">
                       is_temporary = #evaluatingBaseSet.isTemporary#
                   	</isNotEmpty>
                   	<isEqual property="orderBy" compareValue="YB">
                       	order by level1_id ASC ,level2_id ASC , level3_id ASC ,level4_id ASC ,id ASC
                   	</isEqual>
                   	<isEqual property="orderBy" compareValue="YBSM">
                        order by level1_id ASC ,level2_name ASC , level3_id ASC , level3_name ASC ,level4_id ASC ,id ASC
                   	</isEqual>
                   	<isEmpty property="orderBy">
                        order by order_num1 ASC,order_num2 ASC,order_num3 ASC,order_num4 ASC,level1_id ASC ,level2_name ASC , level3_id ASC , level3_name ASC ,level4_id ASC ,id ASC
                   	</isEmpty>                   	
				</dynamic>			
			    LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.countWithCondition -->
    <select id="MS-EVALUATING-BASE-SET-COUNT-WITH-CONDITION" resultClass="long">
        SELECT /*MS-YRD-EVALUATING-BASE-SET-COUNT-WITH-CONDITION*/  count(*) FROM evaluating_base_set
				<dynamic prepend="where">
					<isNotEmpty property="level" prepend=" and " >
                      level = #level#
                   	</isNotEmpty>
                   	<isNotEmpty property="status" prepend=" and ">
                       status = #status#
                   	</isNotEmpty>
                   	<isGreaterThan property="level1Id" prepend=" and " compareValue="0">
                       level1_id = #level1Id#
                   	</isGreaterThan>
					<isGreaterThan property="level2Id" prepend=" and " compareValue="0">
                       level2_id = #level2Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level3Id" prepend=" and " compareValue="0">
                       level3_id = #level3Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level4Id" prepend=" and " compareValue="0">
                       level4_id = #level4Id#
                   	</isGreaterThan>
                   	 <isNotEmpty property="type" prepend=" and ">
                       type = #type#
                   	</isNotEmpty>
                   	 <isNotEmpty property="isTemporary" prepend=" and ">
                       is_temporary = #isTemporary#
                   	</isNotEmpty>                   	
				</dynamic>
    </select>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.findAllIds -->
    <select id="MS-EVALUATING-BASE-SET-FIND-ALL-IDS" resultClass="long">
        SELECT /*MS-YRD-EVALUATING-BASE-SET-FIND-ALL-IDS*/  id FROM evaluating_base_set
				<dynamic prepend="where">
					<isNotEmpty property="level" prepend=" and " >
                      level = #level#
                   	</isNotEmpty>
                   	<isNotEmpty property="status" prepend=" and ">
                       status = #status#
                   	</isNotEmpty>
                   	<isGreaterThan property="level1Id" prepend=" and " compareValue="0">
                       level1_id = #level1Id#
                   	</isGreaterThan>
					<isGreaterThan property="level2Id" prepend=" and " compareValue="0">
                       level2_id = #level2Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level3Id" prepend=" and " compareValue="0">
                       level3_id = #level3Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level4Id" prepend=" and " compareValue="0">
                       level4_id = #level4Id#
                   	</isGreaterThan>
                   	 <isNotEmpty property="type" prepend=" and ">
                       type = #type#
                   	</isNotEmpty>
                   	 <isNotEmpty property="isTemporary" prepend=" and ">
                       is_temporary = #isTemporary#
                   	</isNotEmpty>                   	
				</dynamic>
    </select>

    <!-- mapped statement for IbatisEvaluatingBaseSetDAO.countScoreByType -->
    <select id="MS-EVALUATING-BASE-SET-COUNT-SCORE-BY-TYPE" resultClass="java.lang.String">
        SELECT /*MS-YRD-EVALUATING-BASE-SET-COUNT-SCORE-BY-TYPE*/  sum(level1_score) FROM evaluating_base_set
				<dynamic prepend="where">
					<isNotEmpty property="level" prepend=" and " >
                      level = #level#
                   	</isNotEmpty>
                   	<isNotEmpty property="status" prepend=" and ">
                       status = #status#
                   	</isNotEmpty>
                   	<isGreaterThan property="level1Id" prepend=" and " compareValue="0">
                       level1_id = #level1Id#
                   	</isGreaterThan>
					<isGreaterThan property="level2Id" prepend=" and " compareValue="0">
                       level2_id = #level2Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level3Id" prepend=" and " compareValue="0">
                       level3_id = #level3Id#
                   	</isGreaterThan>
                   	<isGreaterThan property="level4Id" prepend=" and " compareValue="0">
                       level4_id = #level4Id#
                   	</isGreaterThan>
                   	 <isNotEmpty property="type" prepend=" and ">
                       type = #type#
                   	</isNotEmpty>
                   	 <isNotEmpty property="isTemporary" prepend=" and ">
                       is_temporary = #isTemporary#
                   	</isNotEmpty>                   	
				</dynamic>
    </select>

</sqlMap>
