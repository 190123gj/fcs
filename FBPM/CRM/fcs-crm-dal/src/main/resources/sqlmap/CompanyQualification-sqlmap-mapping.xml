<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table company_qualification -->
    <resultMap id="RM-COMPANY-QUALIFICATION" class="com.born.fcs.crm.dal.dataobject.CompanyQualificationDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerId" column="customer_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="qualificationName" column="qualification_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="qualificationCode" column="qualification_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="experDate" column="exper_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCompanyQualificationDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCompanyQualificationDAO.insert -->
    <insert id="MS-COMPANY-QUALIFICATION-INSERT">
    <![CDATA[
        insert /*MS-YRD-COMPANY-QUALIFICATION-INSERT*/ into company_qualification(id,customer_id,qualification_name,qualification_code,exper_date,raw_add_time) values (#id#, #customerId#, #qualificationName#, #qualificationCode#, #experDate#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisCompanyQualificationDAO.findById -->
    <select id="MS-COMPANY-QUALIFICATION-FIND-BY-ID" resultMap="RM-COMPANY-QUALIFICATION">
    <![CDATA[
        select /*MS-YRD-COMPANY-QUALIFICATION-FIND-BY-ID*/ id, customer_id, qualification_name, qualification_code, exper_date, raw_add_time, raw_update_time from company_qualification where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCompanyQualificationDAO.findByAllIds -->
    <select id="MS-COMPANY-QUALIFICATION-FIND-BY-ALL-IDS" resultClass="long">
    <![CDATA[
        select /*MS-YRD-COMPANY-QUALIFICATION-FIND-BY-ALL-IDS*/ id from company_qualification where (customer_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCompanyQualificationDAO.deleteById -->
    <delete id="MS-COMPANY-QUALIFICATION-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-COMPANY-QUALIFICATION-DELETE-BY-ID*/ from company_qualification where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCompanyQualificationDAO.deleteByCustomerId -->
    <delete id="MS-COMPANY-QUALIFICATION-DELETE-BY-CUSTOMER-ID">
    <![CDATA[
        delete /*MS-YRD-COMPANY-QUALIFICATION-DELETE-BY-CUSTOMER-ID*/ from company_qualification where (customer_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCompanyQualificationDAO.updateById -->
    <update id="MS-COMPANY-QUALIFICATION-UPDATE-BY-ID">
    <![CDATA[
        update /*MS-YRD-COMPANY-QUALIFICATION-UPDATE-BY-ID*/ company_qualification set qualification_name=#qualificationName#, qualification_code=#qualificationCode#, exper_date=#experDate# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCompanyQualificationDAO.findWithCondition -->
    <select id="MS-COMPANY-QUALIFICATION-FIND-WITH-CONDITION" resultMap="RM-COMPANY-QUALIFICATION">
        SELECT /*MS-YRD-COMPANY-QUALIFICATION-FIND-WITH-CONDITION*/  id ,customer_id ,qualification_name ,qualification_code ,exper_date ,raw_add_time ,raw_update_time  FROM company_qualification
				<dynamic prepend="where">
					<isNotEmpty property="companyQualification.customerId" prepend=" and ">
                       customer_id = #companyQualification.customerId#
                   	</isNotEmpty>
				</dynamic>		
				order by raw_add_time ASC
			    LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisCompanyQualificationDAO.countWithCondition -->
    <select id="MS-COMPANY-QUALIFICATION-COUNT-WITH-CONDITION" resultClass="long">
        SELECT /*MS-YRD-COMPANY-QUALIFICATION-COUNT-WITH-CONDITION*/  count(*) FROM company_qualification
				<dynamic prepend="where">
					<isNotEmpty property="customerId" prepend=" and ">
                       customer_id = #customerId#
                   	</isNotEmpty>
				</dynamic>
    </select>

</sqlMap>
