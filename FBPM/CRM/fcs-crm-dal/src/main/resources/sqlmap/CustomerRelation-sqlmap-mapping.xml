<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table customer_relation -->
    <resultMap id="RM-CUSTOMER-RELATION" class="com.born.fcs.crm.dal.dataobject.CustomerRelationDO">
        <result property="relationId" column="relation_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerManagerId" column="customer_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerManager" column="customer_manager" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="directorId" column="director_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="director" column="director" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depId" column="dep_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="depName" column="dep_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depPath" column="dep_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="operId" column="oper_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="operName" column="oper_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCustomerRelationDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCustomerRelationDAO.insert -->
    <insert id="MS-CUSTOMER-RELATION-INSERT">
        INSERT /*MS-YRD-CUSTOMER-RELATION-INSERT*/ INTO customer_relation(relation_id,user_id,customer_manager_id,customer_manager,director_id,director,dep_id,dep_name,dep_path,oper_id,oper_name,raw_add_time) VALUES (#relationId#,#userId#,#customerManagerId#,#customerManager#,#directorId#,#director#,#depId#,#depName#,#depPath#,#operId#,#operName#,#rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="relationId" >   
			         SELECT LAST_INSERT_ID() AS relationId 
			    </selectKey>
    </insert>

    <!-- mapped statement for IbatisCustomerRelationDAO.findById -->
    <select id="MS-CUSTOMER-RELATION-FIND-BY-ID" resultMap="RM-CUSTOMER-RELATION">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-RELATION-FIND-BY-ID*/ relation_id, user_id, customer_manager_id, customer_manager, director_id, director, dep_id, dep_name, dep_path, oper_id, oper_name, raw_add_time, raw_update_time from customer_relation where (relation_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerRelationDAO.findByUserId -->
    <select id="MS-CUSTOMER-RELATION-FIND-BY-USER-ID" resultMap="RM-CUSTOMER-RELATION">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-RELATION-FIND-BY-USER-ID*/ relation_id, user_id, customer_manager_id, customer_manager, director_id, director, dep_id, dep_name, dep_path, oper_id, oper_name, raw_add_time, raw_update_time from customer_relation where (user_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerRelationDAO.findByUserAndManagerId -->
    <select id="MS-CUSTOMER-RELATION-FIND-BY-USER-AND-MANAGER-ID" resultMap="RM-CUSTOMER-RELATION">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-RELATION-FIND-BY-USER-AND-MANAGER-ID*/ relation_id, user_id, customer_manager_id, customer_manager, director_id, director, dep_id, dep_name, dep_path, oper_id, oper_name, raw_add_time, raw_update_time from customer_relation where ((user_id = #userId#) AND (customer_manager_id = #customerManagerId#))
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerRelationDAO.deleteById -->
    <delete id="MS-CUSTOMER-RELATION-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-RELATION-DELETE-BY-ID*/ from customer_relation where (relation_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerRelationDAO.deleteByUserId -->
    <delete id="MS-CUSTOMER-RELATION-DELETE-BY-USER-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-RELATION-DELETE-BY-USER-ID*/ from customer_relation where (user_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerRelationDAO.deleteByUserAndManagerId -->
    <delete id="MS-CUSTOMER-RELATION-DELETE-BY-USER-AND-MANAGER-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-RELATION-DELETE-BY-USER-AND-MANAGER-ID*/ from customer_relation where ((user_id = #userId#) AND (customer_manager_id = #customerManagerId#))
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerRelationDAO.updateId -->
    <update id="MS-CUSTOMER-RELATION-UPDATE-ID">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-RELATION-UPDATE-ID*/ customer_relation set user_id=#userId#, customer_manager_id=#customerManagerId#, customer_manager=#customerManager#, director_id=#directorId#, director=#director#, dep_id=#depId#, dep_name=#depName#, dep_path=#depPath#, oper_id=#operId#, oper_name=#operName# where (relation_id = #relationId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerRelationDAO.findWithCondition -->
    <select id="MS-CUSTOMER-RELATION-FIND-WITH-CONDITION" resultMap="RM-CUSTOMER-RELATION">
        SELECT /*MS-YRD-CUSTOMER-RELATION-FIND-WITH-CONDITION*/  relation_id ,user_id ,customer_manager_id ,customer_manager ,director_id ,director ,dep_id ,dep_name ,dep_path,oper_id ,oper_name ,raw_add_time ,raw_update_time  FROM customer_relation				
				<dynamic prepend="where">
					<isGreaterThan property="customerRelation.depId" prepend=" and " compareValue="0">	
                       dep_id = #customerRelation.depId#
                   	</isGreaterThan>  	
                   	<isGreaterThan property="customerRelation.directorId" prepend=" and " compareValue="0">	
                       director_id = #customerRelation.directorId#
                   	</isGreaterThan>                   	
                   	<isGreaterThan property="customerRelation.customerManagerId" prepend=" and " compareValue="0">	
                       customer_manager_id = #customerRelation.customerManagerId#
                   	</isGreaterThan>
                   	<isGreaterThan property="customerRelation.userId" prepend=" and " compareValue="0">	
                       user_id = #customerRelation.userId#
                   	</isGreaterThan>             	     	
				</dynamic>	
				order by raw_update_time DESC
			    LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisCustomerRelationDAO.countWithCondition -->
    <select id="MS-CUSTOMER-RELATION-COUNT-WITH-CONDITION" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-RELATION-COUNT-WITH-CONDITION*/  count(*) FROM customer_relation
				<dynamic prepend="where">
					<isGreaterThan property="depId" prepend=" and " compareValue="0">	
                       dep_id = #depId#
                   	</isGreaterThan>  	
                   	<isGreaterThan property="directorId" prepend=" and " compareValue="0">	
                       director_id = #directorId#
                   	</isGreaterThan>                   	
                   	<isGreaterThan property="customerManagerId" prepend=" and " compareValue="0">	
                       customer_manager_id = #customerManagerId#
                   	</isGreaterThan>
                   	<isGreaterThan property="userId" prepend=" and " compareValue="0">	
                       user_id = #userId#
                   	</isGreaterThan>   	
				</dynamic>
    </select>

</sqlMap>
