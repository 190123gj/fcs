<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table evaluating_base -->
    <resultMap id="RM-EVALUATING-BASE" class="com.born.fcs.crm.dal.dataobject.EvaluatingBaseDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerId" column="customer_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="year" column="year" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evaluetingId" column="evalueting_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="evaluetingKey" column="evalueting_key" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="actualValue" column="actual_value" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="thisScore" column="this_score" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="memo" column="memo" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evalueType" column="evalue_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="evalueTypeChild" column="evalue_type_child" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="inputPerson" column="input_person" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="step" column="step" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisEvaluatingBaseDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisEvaluatingBaseDAO.insert -->
    <insert id="MS-EVALUATING-BASE-INSERT">
    <![CDATA[
        insert /*MS-YRD-EVALUATING-BASE-INSERT*/ into evaluating_base(id,form_id,customer_id,year,evalueting_id,evalueting_key,actual_value,this_score,memo,evalue_type,evalue_type_child,input_person,step,raw_add_time) values (#id#, #formId#, #customerId#, #year#, #evaluetingId#, #evaluetingKey#, #actualValue#, #thisScore#, #memo#, #evalueType#, #evalueTypeChild#, #inputPerson#, #step#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisEvaluatingBaseDAO.deleteById -->
    <delete id="MS-EVALUATING-BASE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-BASE-DELETE-BY-ID*/ from evaluating_base where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseDAO.deleteAuditEvalue -->
    <delete id="MS-EVALUATING-BASE-DELETE-AUDIT-EVALUE">
    <![CDATA[
        delete /*MS-YRD-EVALUATING-BASE-DELETE-AUDIT-EVALUE*/ from evaluating_base where ((step != "0") AND (form_id = #value#))
    ]]>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseDAO.deleteByCondition -->
    <delete id="MS-EVALUATING-BASE-DELETE-BY-CONDITION">
        DELETE /*MS-YRD-EVALUATING-BASE-DELETE-BY-CONDITION*/ FROM evaluating_base
				<dynamic prepend="where">
					<isNotEmpty property="customerId" prepend=" and " >
                     customer_id = #customerId#
                  	</isNotEmpty>          	
                  	 <isNotEmpty property="year" prepend=" and ">
                      year = #year#
                  	</isNotEmpty>
                  	 <isNotEmpty property="evalueType" prepend=" and ">
                      evalue_type = #evalueType#
                  	</isNotEmpty>
                  	<isNotEmpty property="step" prepend=" and ">
                      step = #step#
                  	</isNotEmpty>   
                  	<isNotEmpty property="inputPerson" prepend=" and ">
                      input_person = #inputPerson#
                  	</isNotEmpty>
                  	<isGreaterThan property="formId" prepend=" and " compareValue="0">
                       form_id = #formId#
                   	</isGreaterThan>
                  	             	
			</dynamic>
    </delete>

    <!-- mapped statement for IbatisEvaluatingBaseDAO.updateById -->
    <update id="MS-EVALUATING-BASE-UPDATE-BY-ID">
    <![CDATA[
        update /*MS-YRD-EVALUATING-BASE-UPDATE-BY-ID*/ evaluating_base set form_id=#formId#, customer_id=#customerId#, year=#year#, evalueting_id=#evaluetingId#, evalueting_key=#evaluetingKey#, actual_value=#actualValue#, this_score=#thisScore#, memo=#memo#, evalue_type=#evalueType#, evalue_type_child=#evalueTypeChild#, input_person=#inputPerson#, step=#step# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEvaluatingBaseDAO.findAllWithCondition -->
    <select id="MS-EVALUATING-BASE-FIND-ALL-WITH-CONDITION" resultMap="RM-EVALUATING-BASE">
        SELECT /*MS-YRD-EVALUATING-BASE-FIND-ALL-WITH-CONDITION*/  id ,form_id ,customer_id ,year ,evalueting_id ,evalueting_key ,actual_value ,this_score ,memo ,evalue_type ,evalue_type_child ,input_person ,step ,raw_add_time ,raw_update_time  FROM evaluating_base			<dynamic prepend="where">
				<isNotEmpty property="customerId" prepend=" and " >
                     customer_id = #customerId#
                  	</isNotEmpty>          	
                  	 <isNotEmpty property="year" prepend=" and ">
                      year = #year#
                  	</isNotEmpty>
                  	 <isNotEmpty property="evalueType" prepend=" and ">
                      evalue_type = #evalueType#
                  	</isNotEmpty>
                  	<isNotEmpty property="evalueTypeChild" prepend=" and ">
                      evalue_type_child = #evalueTypeChild#
                  	</isNotEmpty>
                  	<isNotEmpty property="evaluetingKey" prepend=" and ">
                      evalueting_key = #evaluetingKey#
                  	</isNotEmpty>
                  	<isNotEmpty property="step" prepend=" and ">
                      step = #step#
                  	</isNotEmpty>   
                  	<isNotEmpty property="inputPerson" prepend=" and ">
                      input_person = #inputPerson#
                  	</isNotEmpty>
                  	 <isGreaterThan property="formId" prepend=" and " compareValue="0">
                       form_id = #formId#
                   	</isGreaterThan>
                  	             	
			</dynamic>
    </select>

    <!-- mapped statement for IbatisEvaluatingBaseDAO.countScoreWithCondition -->
    <select id="MS-EVALUATING-BASE-COUNT-SCORE-WITH-CONDITION" resultClass="java.lang.String">
        SELECT /*MS-YRD-EVALUATING-BASE-COUNT-SCORE-WITH-CONDITION*/ SUM(this_score) FROM evaluating_base
			<dynamic prepend="where">
				<isNotEmpty property="customerId" prepend=" and " >
                     customer_id = #customerId#
                  	</isNotEmpty>          	
                  	 <isNotEmpty property="year" prepend=" and ">
                      year = #year#
                  	</isNotEmpty>
                  	 <isNotEmpty property="evalueType" prepend=" and ">
                      evalue_type = #evalueType#
                  	</isNotEmpty>
                  	<isNotEmpty property="evalueTypeChild" prepend=" and ">
                      evalue_type_child = #evalueTypeChild#
                  	</isNotEmpty>
                  	<isNotEmpty property="evaluetingKey" prepend=" and ">
                      evalueting_key = #evaluetingKey#
                  	</isNotEmpty>
                  	<isNotEmpty property="step" prepend=" and ">
                      step = #step#
                  	</isNotEmpty>   
                  	<isNotEmpty property="inputPerson" prepend=" and ">
                      input_person = #inputPerson#
                  	</isNotEmpty>
                  	 <isGreaterThan property="formId" prepend=" and " compareValue="0">
                       form_id = #formId#
                   	</isGreaterThan>              	
			</dynamic>
    </select>

</sqlMap>
