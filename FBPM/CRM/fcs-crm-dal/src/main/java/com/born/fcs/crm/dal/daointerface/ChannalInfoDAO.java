/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.crm.dal.daointerface;

// auto generated imports
import com.born.fcs.crm.dal.dataobject.ChannalInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>channal_info</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/channal_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ChannalInfoDAO {
	/**
	 *  Insert one <tt>ChannalInfoDO</tt> object to DB table <tt>channal_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into channal_info(id,channel_code,contract_no,channel_name,channel_type,institutional_attributes,address,contact_person1,contact_mobile1,contact_person2,contact_mobile2,leadings,loss_allocation_rate,bond_rate,credit_amount,credit_amount_used,is_credit_amount,single_limit,is_single_limit,times,is_times,percent,is_percent,credit_start_date,credit_end_date,compensatory_limit,day_type,straddle_year,enclosure_url,status,input_person,is_temporary,is_remind,is_history,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param channalInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>channal_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, channel_code, contract_no, channel_name, channel_type, institutional_attributes, address, contact_person1, contact_mobile1, contact_person2, contact_mobile2, leadings, loss_allocation_rate, bond_rate, credit_amount, credit_amount_used, is_credit_amount, single_limit, is_single_limit, times, is_times, percent, is_percent, credit_start_date, credit_end_date, compensatory_limit, day_type, straddle_year, enclosure_url, status, input_person, is_temporary, is_remind, is_history, raw_add_time, raw_update_time from channal_info where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return ChannalInfoDO
	 *	@throws DataAccessException
	 */	 
    public ChannalInfoDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>channal_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select MAX(channel_code) from channal_info where (channel_type = ?)</tt>
	 *
	 *	@param channelType
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String findMaxCode(String channelType) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from channal_info where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from channal_info where (channel_code = ?)</tt>
	 *
	 *	@param channelCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByChannelCode(String channelCode) throws DataAccessException;

	/**
	 *  Update DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update channal_info set channel_code=?, contract_no=?, channel_name=?, channel_type=?, institutional_attributes=?, address=?, contact_person1=?, contact_mobile1=?, contact_person2=?, contact_mobile2=?, leadings=?, loss_allocation_rate=?, bond_rate=?, credit_amount=?, credit_amount_used=?, is_credit_amount=?, single_limit=?, is_single_limit=?, times=?, is_times=?, percent=?, is_percent=?, credit_start_date=?, credit_end_date=?, compensatory_limit=?, day_type=?, straddle_year=?, enclosure_url=?, status=?, input_person=?, is_temporary=?, is_remind=?, is_history=? where (id = ?)</tt>
	 *
	 *	@param channalInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateById(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update channal_info set credit_amount_used=? where (id = ?)</tt>
	 *
	 *	@param channalInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCreditAmountUsedById(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update channal_info set is_remind=? where (id = ?)</tt>
	 *
	 *	@param channalInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateRemindStatus(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update channal_info set status=? where (id = ?)</tt>
	 *
	 *	@param channalInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateStatusById(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update channal_info set status=? where (channel_code = ?)</tt>
	 *
	 *	@param channalInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateStatusByChannalCode(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>channal_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update channal_info set is_history=? where (channel_code = ?)</tt>
	 *
	 *	@param channalInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateHistoryStatusByChannalCode(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>channal_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, channel_code, contract_no, channel_name, channel_type, institutional_attributes, address, contact_person1, contact_mobile1, contact_person2, contact_mobile2, leadings, loss_allocation_rate, bond_rate, credit_amount, credit_amount_used, is_credit_amount, single_limit, is_single_limit, times, is_times, percent, is_percent, credit_start_date, credit_end_date, compensatory_limit, day_type, straddle_year, enclosure_url, status, input_person, is_temporary, is_remind, is_history, raw_add_time, raw_update_time from channal_info</tt>
	 *
	 *	@param channalInfo
	 *	@return List<ChannalInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<ChannalInfoDO> findAllByChannelCodeOrId(ChannalInfoDO channalInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>channal_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, channel_code, contract_no, channel_name, channel_type, institutional_attributes, address, contact_person1, contact_mobile1, contact_person2, contact_mobile2, leadings, loss_allocation_rate, bond_rate, credit_amount, credit_amount_used, is_credit_amount, single_limit, is_single_limit, times, is_times, percent, is_percent, credit_start_date, credit_end_date, compensatory_limit, day_type, straddle_year, enclosure_url, status, input_person, is_temporary, is_remind, is_history, raw_add_time, raw_update_time from channal_info</tt>
	 *
	 *	@param channalInfo
	 *	@param limitStart
	 *	@param pageSize
	 *	@param likeChannelName
	 *	@param likeChannelCode
	 *	@param likeCodeOrName
	 *	@return List<ChannalInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<ChannalInfoDO> findWithCondition(ChannalInfoDO channalInfo, long limitStart, long pageSize, String likeChannelName, String likeChannelCode, String likeCodeOrName) throws DataAccessException;

	/**
	 *  Query DB table <tt>channal_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from channal_info</tt>
	 *
	 *	@param channalInfo
	 *	@param likeChannelName
	 *	@param likeChannelCode
	 *	@param likeCodeOrName
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long countWithCondition(ChannalInfoDO channalInfo, String likeChannelName, String likeChannelCode, String likeCodeOrName) throws DataAccessException;

}