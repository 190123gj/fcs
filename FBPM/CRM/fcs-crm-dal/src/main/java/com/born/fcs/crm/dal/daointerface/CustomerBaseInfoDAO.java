/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.crm.dal.daointerface;

// auto generated imports
import com.born.fcs.crm.dal.dataobject.CustomerBaseInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Date;

/**
 * A dao interface provides methods to access database table <tt>customer_base_info</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/customer_base_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface CustomerBaseInfoDAO {
	/**
	 *  Insert one <tt>CustomerBaseInfoDO</tt> object to DB table <tt>customer_base_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into customer_base_info(user_id,customer_id,customer_name,contact_mobile,sex,resours_from,cert_type,busi_license_no,cert_no,is_distribution,customer_manager,customer_manager_id,director,dep_id,dep_name,director_id,input_person,input_person_id,customer_level,industry_code,country_code,country_name,province_code,province_name,city_code,city_name,county_code,county_name,channal_id,channal_name,channal_type,enterprise_type,status,is_temporary,project_status,evalue_status,change_status,customer_type,raw_add_time,dep_path) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param customerBaseInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(CustomerBaseInfoDO customerBaseInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_base_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id, customer_id, customer_name, contact_mobile, sex, resours_from, cert_type, busi_license_no, cert_no, is_distribution, customer_manager, customer_manager_id, director, dep_id, dep_name, director_id, input_person, input_person_id, customer_level, industry_code, country_code, country_name, province_code, province_name, city_code, city_name, county_code, county_name, channal_id, channal_name, channal_type, enterprise_type, status, is_temporary, project_status, evalue_status, change_status, customer_type, raw_add_time, raw_update_time, dep_path from customer_base_info where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return CustomerBaseInfoDO
	 *	@throws DataAccessException
	 */	 
    public CustomerBaseInfoDO findByUserId(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_base_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id, customer_id, customer_name, contact_mobile, sex, resours_from, cert_type, busi_license_no, cert_no, is_distribution, customer_manager, customer_manager_id, director, dep_id, dep_name, director_id, input_person, input_person_id, customer_level, industry_code, country_code, country_name, province_code, province_name, city_code, city_name, county_code, county_name, channal_id, channal_name, channal_type, enterprise_type, status, is_temporary, project_status, evalue_status, change_status, customer_type, raw_add_time, raw_update_time, dep_path from customer_base_info where (customer_id = ?)</tt>
	 *
	 *	@param customerId
	 *	@return CustomerBaseInfoDO
	 *	@throws DataAccessException
	 */	 
    public CustomerBaseInfoDO findByCustomerId(String customerId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from customer_base_info where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByUserId(long userId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from customer_base_info where (customer_id = ?)</tt>
	 *
	 *	@param customerId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByCustomerId(String customerId) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_base_info set customer_id=?, customer_name=?, contact_mobile=?, sex=?, resours_from=?, cert_type=?, busi_license_no=?, cert_no=?, is_distribution=?, customer_manager=?, customer_manager_id=?, director=?, dep_id=?, dep_name=?, director_id=?, input_person=?, input_person_id=?, customer_level=?, industry_code=?, country_code=?, country_name=?, province_code=?, province_name=?, city_code=?, city_name=?, county_code=?, county_name=?, channal_id=?, channal_name=?, channal_type=?, enterprise_type=?, status=?, is_temporary=?, project_status=?, evalue_status=?, change_status=?, customer_type=?, dep_path=? where (user_id = ?)</tt>
	 *
	 *	@param customerBaseInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByUserId(CustomerBaseInfoDO customerBaseInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_base_info set customer_id=?, customer_name=?, contact_mobile=?, sex=?, resours_from=?, cert_type=?, busi_license_no=?, cert_no=?, is_distribution=?, customer_manager=?, customer_manager_id=?, director=?, dep_id=?, dep_name=?, director_id=?, input_person=?, input_person_id=?, customer_level=?, industry_code=?, country_code=?, country_name=?, province_code=?, province_name=?, city_code=?, city_name=?, county_code=?, county_name=?, channal_id=?, channal_name=?, channal_type=?, enterprise_type=?, status=?, is_temporary=?, project_status=?, evalue_status=?, change_status=?, customer_type=?, dep_path=? where (customer_id = ?)</tt>
	 *
	 *	@param customerBaseInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByCustomerId(CustomerBaseInfoDO customerBaseInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_base_info set director=?, director_id=?, dep_id=?, dep_name=?, dep_path=? where (user_id = ?)</tt>
	 *
	 *	@param customerBaseInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateDirector(CustomerBaseInfoDO customerBaseInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_base_info set customer_manager=?, customer_manager_id=?, dep_id=?, dep_name=?, is_distribution=?, dep_path=? where (user_id = ?)</tt>
	 *
	 *	@param customerBaseInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateManager(CustomerBaseInfoDO customerBaseInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_base_info set project_status=? where (user_id = ?)</tt>
	 *
	 *	@param customerBaseInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateProjectStatus(CustomerBaseInfoDO customerBaseInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_base_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_base_info set evalue_status=? where (customer_id = ?)</tt>
	 *
	 *	@param customerBaseInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateEvalueStatus(CustomerBaseInfoDO customerBaseInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_base_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id, customer_id, customer_name, contact_mobile, sex, resours_from, cert_type, busi_license_no, cert_no, is_distribution, customer_manager, customer_manager_id, director, dep_id, dep_name, director_id, input_person, input_person_id, customer_level, industry_code, country_code, country_name, province_code, province_name, city_code, city_name, county_code, county_name, channal_id, channal_name, channal_type, enterprise_type, status, is_temporary, project_status, evalue_status, change_status, customer_type, raw_add_time, raw_update_time, dep_path from customer_base_info</tt>
	 *
	 *	@param customerBaseInfo
	 *	@param limitStart
	 *	@param pageSize
	 *	@param customerLevelList
	 *	@param industryCodeList
	 *	@param cityCodeList
	 *	@param beginDate
	 *	@param endDate
	 *	@param likeCustomerName
	 *	@param loginUserId
	 *	@param deptIdList
	 *	@param likeNameOrId
	 *	@return List<CustomerBaseInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<CustomerBaseInfoDO> findWithCondition(CustomerBaseInfoDO customerBaseInfo, long limitStart, long pageSize, List customerLevelList, List industryCodeList, List cityCodeList, Date beginDate, Date endDate, String likeCustomerName, long loginUserId, List deptIdList, String likeNameOrId) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_base_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from customer_base_info</tt>
	 *
	 *	@param customerBaseInfo
	 *	@param customerLevelList
	 *	@param industryCodeList
	 *	@param cityCodeList
	 *	@param beginDate
	 *	@param endDate
	 *	@param likeCustomerName
	 *	@param loginUserId
	 *	@param deptIdList
	 *	@param likeNameOrId
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long countWithCondition(CustomerBaseInfoDO customerBaseInfo, List customerLevelList, List industryCodeList, List cityCodeList, Date beginDate, Date endDate, String likeCustomerName, long loginUserId, List deptIdList, String likeNameOrId) throws DataAccessException;

}