/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.StampConfigureDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>stamp_configure</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/stamp_configure.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface StampConfigureDAO {
	/**
	 *  Insert one <tt>StampConfigureDO</tt> object to DB table <tt>stamp_configure</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into stamp_configure(org_id,org_code,org_name,gz_role_code,frz_role_code,raw_add_time) values (?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param stampConfigure
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(StampConfigureDO stampConfigure) throws DataAccessException;

	/**
	 *  Update DB table <tt>stamp_configure</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update stamp_configure set org_id=?, org_code=?, org_name=?, gz_role_code=?, frz_role_code=? where (id = ?)</tt>
	 *
	 *	@param stampConfigure
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(StampConfigureDO stampConfigure) throws DataAccessException;

	/**
	 *  Query DB table <tt>stamp_configure</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, org_id, org_code, org_name, gz_role_code, frz_role_code, raw_add_time, raw_update_time from stamp_configure</tt>
	 *
	 *	@param stampConfigure
	 *	@return List<StampConfigureDO>
	 *	@throws DataAccessException
	 */	 
    public List<StampConfigureDO> findAll(StampConfigureDO stampConfigure) throws DataAccessException;

	/**
	 *  Query DB table <tt>stamp_configure</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, org_id, org_code, org_name, gz_role_code, frz_role_code, raw_add_time, raw_update_time from stamp_configure where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return StampConfigureDO
	 *	@throws DataAccessException
	 */	 
    public StampConfigureDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>stamp_configure</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, org_id, org_code, org_name, gz_role_code, frz_role_code, raw_add_time, raw_update_time from stamp_configure where (org_id = ?)</tt>
	 *
	 *	@param orgId
	 *	@return StampConfigureDO
	 *	@throws DataAccessException
	 */	 
    public StampConfigureDO findByOrgId(String orgId) throws DataAccessException;

	/**
	 *  Query DB table <tt>stamp_configure</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, org_id, org_code, org_name, gz_role_code, frz_role_code, raw_add_time, raw_update_time from stamp_configure where (org_name = ?)</tt>
	 *
	 *	@param orgName
	 *	@return StampConfigureDO
	 *	@throws DataAccessException
	 */	 
    public StampConfigureDO findByOrgName(String orgName) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>stamp_configure</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from stamp_configure where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

}