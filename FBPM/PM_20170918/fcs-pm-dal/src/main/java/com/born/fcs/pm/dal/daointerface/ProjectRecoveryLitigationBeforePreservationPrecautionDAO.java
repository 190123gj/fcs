/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.ProjectRecoveryLitigationBeforePreservationPrecautionDO;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_recovery_litigation_before_preservation_precaution.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ProjectRecoveryLitigationBeforePreservationPrecautionDAO {
	/**
	 *  Insert one <tt>ProjectRecoveryLitigationBeforePreservationPrecautionDO</tt> object to DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_recovery_litigation_before_preservation_precaution(project_recovery_id,project_recovery_litigation_before_preservation_id,project_recovery_litigation_preservation_id,project_recovery_litigation_type,project_recovery_preservation_type,preservation_content,preservation_time_start,preservation_time_end,memo,end_notice,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectRecoveryLitigationBeforePreservationPrecaution
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectRecoveryLitigationBeforePreservationPrecautionDO projectRecoveryLitigationBeforePreservationPrecaution) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_recovery_litigation_before_preservation_precaution set project_recovery_id=?, project_recovery_litigation_before_preservation_id=?, project_recovery_litigation_preservation_id=?, project_recovery_litigation_type=?, project_recovery_preservation_type=?, preservation_content=?, preservation_time_start=?, preservation_time_end=?, memo=?, end_notice=? where (id = ?)</tt>
	 *
	 *	@param projectRecoveryLitigationBeforePreservationPrecaution
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectRecoveryLitigationBeforePreservationPrecautionDO projectRecoveryLitigationBeforePreservationPrecaution) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_recovery_litigation_before_preservation_precaution set end_notice=? where (id = ?)</tt>
	 *
	 *	@param projectRecoveryLitigationBeforePreservationPrecaution
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateEndNotice(ProjectRecoveryLitigationBeforePreservationPrecautionDO projectRecoveryLitigationBeforePreservationPrecaution) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where (1 = 1)</tt>
	 *
	 *	@param timeStart
	 *	@param timeEnd
	 *	@return ProjectRecoveryLitigationBeforePreservationPrecautionDO
	 *	@throws DataAccessException
	 */	 
    public ProjectRecoveryLitigationBeforePreservationPrecautionDO updateEndNoticeLimit(Date timeStart, Date timeEnd) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return ProjectRecoveryLitigationBeforePreservationPrecautionDO
	 *	@throws DataAccessException
	 */	 
    public ProjectRecoveryLitigationBeforePreservationPrecautionDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where (project_recovery_id = ?)</tt>
	 *
	 *	@param projectRecoveryId
	 *	@return List<ProjectRecoveryLitigationBeforePreservationPrecautionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectRecoveryLitigationBeforePreservationPrecautionDO> findByRecoveryId(long projectRecoveryId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where ((project_recovery_id = ?) AND (project_recovery_litigation_type = ?))</tt>
	 *
	 *	@param projectRecoveryId
	 *	@param projectRecoveryLitigationType
	 *	@return List<ProjectRecoveryLitigationBeforePreservationPrecautionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectRecoveryLitigationBeforePreservationPrecautionDO> findByRecoveryIdAndType(long projectRecoveryId, String projectRecoveryLitigationType) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where (project_recovery_litigation_before_preservation_id = ?)</tt>
	 *
	 *	@param projectRecoveryLitigationBeforePreservationId
	 *	@return List<ProjectRecoveryLitigationBeforePreservationPrecautionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectRecoveryLitigationBeforePreservationPrecautionDO> findByLitigationBeforePreservationId(long projectRecoveryLitigationBeforePreservationId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where (project_recovery_litigation_preservation_id = ?)</tt>
	 *
	 *	@param projectRecoveryLitigationPreservationId
	 *	@return List<ProjectRecoveryLitigationBeforePreservationPrecautionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectRecoveryLitigationBeforePreservationPrecautionDO> findByLitigationPreservationId(long projectRecoveryLitigationPreservationId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where ((project_recovery_litigation_before_preservation_id = ?) AND (project_recovery_litigation_type = ?))</tt>
	 *
	 *	@param projectRecoveryLitigationBeforePreservationId
	 *	@param projectRecoveryLitigationType
	 *	@return List<ProjectRecoveryLitigationBeforePreservationPrecautionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectRecoveryLitigationBeforePreservationPrecautionDO> findByLitigationBeforePreservationIdAndType(long projectRecoveryLitigationBeforePreservationId, String projectRecoveryLitigationType) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where ((project_recovery_litigation_preservation_id = ?) AND (project_recovery_litigation_type = ?))</tt>
	 *
	 *	@param projectRecoveryLitigationPreservationId
	 *	@param projectRecoveryLitigationType
	 *	@return List<ProjectRecoveryLitigationBeforePreservationPrecautionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectRecoveryLitigationBeforePreservationPrecautionDO> findByLitigationPreservationIdAndType(long projectRecoveryLitigationPreservationId, String projectRecoveryLitigationType) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_recovery_litigation_before_preservation_precaution</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_recovery_litigation_before_preservation_precaution where (1 = 1)</tt>
	 *
	 *	@param timeStart
	 *	@param timeEnd
	 *	@return List<ProjectRecoveryLitigationBeforePreservationPrecautionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectRecoveryLitigationBeforePreservationPrecautionDO> findNoticeByEndTime(Date timeStart, Date timeEnd) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_recovery_litigation_before_preservation_precaution where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_recovery_litigation_before_preservation_precaution where (project_recovery_id = ?)</tt>
	 *
	 *	@param projectRecoveryId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByRecoveryId(long projectRecoveryId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_recovery_litigation_before_preservation_precaution where ((project_recovery_id = ?) AND (project_recovery_litigation_type = ?))</tt>
	 *
	 *	@param projectRecoveryId
	 *	@param projectRecoveryLitigationType
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByRecoveryIdAndType(long projectRecoveryId, String projectRecoveryLitigationType) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_recovery_litigation_before_preservation_precaution where (project_recovery_litigation_before_preservation_id = ?)</tt>
	 *
	 *	@param projectRecoveryLitigationBeforePreservationId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByLitigationBeforePreservationId(long projectRecoveryLitigationBeforePreservationId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_recovery_litigation_before_preservation_precaution where ((project_recovery_litigation_before_preservation_id = ?) AND (project_recovery_litigation_type = ?))</tt>
	 *
	 *	@param projectRecoveryLitigationBeforePreservationId
	 *	@param projectRecoveryLitigationType
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByLitigationBeforePreservationIdAndType(long projectRecoveryLitigationBeforePreservationId, String projectRecoveryLitigationType) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_recovery_litigation_before_preservation_precaution</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_recovery_litigation_before_preservation_precaution where ((project_recovery_litigation_preservation_id = ?) AND (project_recovery_litigation_type = ?))</tt>
	 *
	 *	@param projectRecoveryLitigationPreservationId
	 *	@param projectRecoveryLitigationType
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByLitigationPreservationIdAndType(long projectRecoveryLitigationPreservationId, String projectRecoveryLitigationType) throws DataAccessException;

}