/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.FinancialProductDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>financial_product</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/financial_product.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface FinancialProductDAO {
	/**
	 *  Insert one <tt>FinancialProductDO</tt> object to DB table <tt>financial_product</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into financial_product(product_id,product_type,product_name,interest_type,term_type,time_limit,time_unit,issue_institution,interest_rate,rate_range_start,rate_range_end,interest_settlement_way,price,risk_level,sell_status,remark,year_day_num,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param financialProduct
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FinancialProductDO financialProduct) throws DataAccessException;

	/**
	 *  Update DB table <tt>financial_product</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update financial_product set product_type=?, product_name=?, interest_type=?, term_type=?, time_limit=?, time_unit=?, issue_institution=?, interest_rate=?, rate_range_start=?, rate_range_end=?, interest_settlement_way=?, price=?, risk_level=?, sell_status=?, remark=?, year_day_num=? where (product_id = ?)</tt>
	 *
	 *	@param financialProduct
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FinancialProductDO financialProduct) throws DataAccessException;

	/**
	 *  Query DB table <tt>financial_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from financial_product where (product_id = ?)</tt>
	 *
	 *	@param productId
	 *	@return FinancialProductDO
	 *	@throws DataAccessException
	 */	 
    public FinancialProductDO findById(long productId) throws DataAccessException;

	/**
	 *  Query DB table <tt>financial_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from financial_product where (product_name = ?)</tt>
	 *
	 *	@param productName
	 *	@return FinancialProductDO
	 *	@throws DataAccessException
	 */	 
    public FinancialProductDO findByUnique(String productName) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>financial_product</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from financial_product where (product_id = ?)</tt>
	 *
	 *	@param productId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long productId) throws DataAccessException;

	/**
	 *  Query DB table <tt>financial_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from financial_product where (1 = 1)</tt>
	 *
	 *	@param financialProduct
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<FinancialProductDO>
	 *	@throws DataAccessException
	 */	 
    public List<FinancialProductDO> findByCondition(FinancialProductDO financialProduct, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException;

	/**
	 *  Query DB table <tt>financial_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from financial_product where (1 = 1)</tt>
	 *
	 *	@param financialProduct
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FinancialProductDO financialProduct) throws DataAccessException;

}