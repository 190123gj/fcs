/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.FProjectDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.FProjectDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.FProjectDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_project.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisFProjectDAO extends SqlMapClientDaoSupport implements FProjectDAO {
	/**
	 *  Insert one <tt>FProjectDO</tt> object to DB table <tt>f_project</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_project(project_id,project_code,project_name,form_id,customer_id,customer_name,customer_type,busi_type,busi_type_name,industry_code,industry_name,time_limit,time_unit,amount,foreign_amount,foreign_currency_code,foreign_currency_name,exchange_rate,exchange_update_time,other_counter_guarntee,busi_manager_id,busi_manager_account,busi_manager_name,busi_managerb_id,busi_managerb_account,busi_managerb_name,dept_id,dept_code,dept_name,dept_path,dept_path_name,belong_to_nc,remark,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FProject
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FProjectDO FProject) throws DataAccessException {
    	if (FProject == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-PROJECT-INSERT", FProject);

        return FProject.getProjectId();
    }

	/**
	 *  Update DB table <tt>f_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project set project_code=?, project_name=?, form_id=?, customer_id=?, customer_name=?, customer_type=?, busi_type=?, busi_type_name=?, industry_code=?, industry_name=?, time_limit=?, time_unit=?, amount=?, foreign_amount=?, foreign_currency_code=?, foreign_currency_name=?, exchange_rate=?, exchange_update_time=?, other_counter_guarntee=?, busi_manager_id=?, busi_manager_account=?, busi_manager_name=?, busi_managerb_id=?, busi_managerb_account=?, busi_managerb_name=?, dept_id=?, dept_code=?, dept_name=?, dept_path=?, dept_path_name=?, belong_to_nc=?, remark=? where (project_id = ?)</tt>
	 *
	 *	@param FProject
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FProjectDO FProject) throws DataAccessException {
    	if (FProject == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-UPDATE", FProject);
    }

	/**
	 *  Update DB table <tt>f_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project set customer_id=?, customer_name=?, customer_type=?, industry_code=?, industry_name=? where (form_id = ?)</tt>
	 *
	 *	@param FProject
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCustomInfoByFormId(FProjectDO FProject) throws DataAccessException {
    	if (FProject == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-UPDATE-CUSTOM-INFO-BY-FORM-ID", FProject);
    }

	/**
	 *  Update DB table <tt>f_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project set project_name=?, form_id=?, customer_id=?, customer_name=?, customer_type=?, busi_type=?, busi_type_name=?, industry_code=?, industry_name=?, time_limit=?, time_unit=?, amount=?, foreign_amount=?, foreign_currency_code=?, foreign_currency_name=?, exchange_rate=?, exchange_update_time=?, other_counter_guarntee=?, busi_manager_id=?, busi_manager_account=?, busi_manager_name=?, busi_managerb_id=?, busi_managerb_account=?, busi_managerb_name=?, dept_id=?, dept_code=?, dept_name=?, dept_path=?, dept_path_name=?, belong_to_nc=?, remark=? where (project_code = ?)</tt>
	 *
	 *	@param FProject
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByProjectCode(FProjectDO FProject) throws DataAccessException {
    	if (FProject == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-UPDATE-BY-PROJECT-CODE", FProject);
    }

	/**
	 *  Update DB table <tt>f_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project set project_code=?, project_name=?, customer_id=?, customer_name=?, customer_type=?, busi_type=?, busi_type_name=?, industry_code=?, industry_name=?, time_limit=?, time_unit=?, amount=?, foreign_amount=?, foreign_currency_code=?, foreign_currency_name=?, exchange_rate=?, exchange_update_time=?, other_counter_guarntee=?, busi_manager_id=?, busi_manager_account=?, busi_manager_name=?, busi_managerb_id=?, busi_managerb_account=?, busi_managerb_name=?, dept_id=?, dept_code=?, dept_name=?, dept_path=?, dept_path_name=?, belong_to_nc=?, remark=? where (form_id = ?)</tt>
	 *
	 *	@param FProject
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByFormId(FProjectDO FProject) throws DataAccessException {
    	if (FProject == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-UPDATE-BY-FORM-ID", FProject);
    }

	/**
	 *  Query DB table <tt>f_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project where (project_id = ?)</tt>
	 *
	 *	@param projectId
	 *	@return FProjectDO
	 *	@throws DataAccessException
	 */	 
    public FProjectDO findById(long projectId) throws DataAccessException {
        Long param = new Long(projectId);

        return (FProjectDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FProjectDO
	 *	@throws DataAccessException
	 */	 
    public FProjectDO findByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return (FProjectDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-FIND-BY-FORM-ID", param);

    }

	/**
	 *  Query DB table <tt>f_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return FProjectDO
	 *	@throws DataAccessException
	 */	 
    public FProjectDO findByProjectCode(String projectCode) throws DataAccessException {

        return (FProjectDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-FIND-BY-PROJECT-CODE", projectCode);

    }

	/**
	 *  Delete records from DB table <tt>f_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_project where (project_id = ?)</tt>
	 *
	 *	@param projectId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long projectId) throws DataAccessException {
        Long param = new Long(projectId);

        return getSqlMapClientTemplate().delete("MS-F-PROJECT-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_project where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return getSqlMapClientTemplate().delete("MS-F-PROJECT-DELETE-BY-FORM-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_project</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_project where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectCode(String projectCode) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-F-PROJECT-DELETE-BY-PROJECT-CODE", projectCode);
    }

	/**
	 *  Query DB table <tt>f_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project where (1 = 1)</tt>
	 *
	 *	@param FProject
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<FProjectDO>
	 *	@throws DataAccessException
	 */	 
    public List<FProjectDO> findByCondition(FProjectDO FProject, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException {
    	if (FProject == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("FProject", FProject);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);

        return getSqlMapClientTemplate().queryForList("MS-F-PROJECT-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>f_project</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_project where (1 = 1)</tt>
	 *
	 *	@param FProject
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FProjectDO FProject) throws DataAccessException {
    	if (FProject == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-FIND-BY-CONDITION-COUNT", FProject);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}