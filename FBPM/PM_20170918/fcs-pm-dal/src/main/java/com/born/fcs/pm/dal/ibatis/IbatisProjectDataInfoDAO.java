/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.ProjectDataInfoDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.ProjectDataInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.ProjectDataInfoDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_data_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisProjectDataInfoDAO extends SqlMapClientDaoSupport implements ProjectDataInfoDAO {
	/**
	 *  Insert one <tt>ProjectDataInfoDO</tt> object to DB table <tt>project_data_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_data_info(id,project_id,project_code,project_name,customer_id,customer_name,customer_type,customer_add_time,enterprise_type,customer_level,scale,province_code,province_name,city_code,city_name,county_code,county_name,busi_type,busi_type_name,industry_code,industry_name,project_channel_code,project_channel_name,project_channel_type,project_sub_channel_name,capital_channel_id,capital_channel_name,channal_type,capital_sub_channel_name,channal_code,channal_credit_startDate,channal_credit_endDate,channal_loss_allocationRate,channal_bond_rate,channal_single_limit,channal_credit_amount,channal_compensatory_limit,time_limit,time_unit,start_time,end_time,amount,accumulated_issue_amount,loaned_amount,used_amount,repayed_amount,charged_amount,refund_amount,is_maximum_amount,released_amount,releasable_amount,releasing_amount,customer_deposit_amount,self_deposit_amount,comp_principal_amount,comp_interest_amount,guarantee_amount,guarantee_fee_rate,blance,contract_no,contract_time,contract_amount,is_approval,is_approval_del,approval_time,busi_manager_id,busi_manager_account,busi_manager_name,busi_managerb_id,busi_managerb_account,busi_managerb_name,dept_id,dept_code,dept_name,dept_path,dept_path_name,belong_to_nc,phases,phases_status,status,is_continue,is_recouncil,last_recouncil_time,setup_date,set_up_year,set_up_month,set_up_day,apply_date,apply_date_year,apply_date_month,apply_date_day,survey_date,survey_date_year,survey_date_month,survey_date_day,on_will_date,on_will_date_year,on_will_date_month,on_will_date_day,is_on_will_pass,first_lending_date,raw_add_time,custom_amount1,custom_amount2,custom_amount3,custom_name1,custom_name2,custom_name3,fan_guarantee_methord,is_redo,is_redo_project,redo_from,redo_risk_handle_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectDataInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectDataInfoDO projectDataInfo) throws DataAccessException {
    	if (projectDataInfo == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PROJECT-DATA-INFO-INSERT", projectDataInfo);

        return projectDataInfo.getId();
    }

	/**
	 *  Update DB table <tt>project_data_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_data_info set project_id=?, project_code=?, project_name=?, customer_id=?, customer_name=?, customer_type=?, customer_add_time=?, enterprise_type=?, customer_level=?, scale=?, province_code=?, province_name=?, city_code=?, city_name=?, county_code=?, county_name=?, busi_type=?, busi_type_name=?, industry_code=?, industry_name=?, project_channel_code=?, project_channel_name=?, project_channel_type=?, project_sub_channel_name=?, capital_channel_id=?, capital_channel_name=?, channal_type=?, capital_sub_channel_name=?, channal_code=?, channal_credit_startDate=?, channal_credit_endDate=?, channal_loss_allocationRate=?, channal_bond_rate=?, channal_single_limit=?, channal_credit_amount=?, channal_compensatory_limit=?, time_limit=?, time_unit=?, start_time=?, end_time=?, amount=?, accumulated_issue_amount=?, loaned_amount=?, used_amount=?, repayed_amount=?, charged_amount=?, refund_amount=?, is_maximum_amount=?, released_amount=?, releasable_amount=?, releasing_amount=?, customer_deposit_amount=?, self_deposit_amount=?, comp_principal_amount=?, comp_interest_amount=?, guarantee_amount=?, guarantee_fee_rate=?, blance=?, contract_no=?, contract_time=?, contract_amount=?, is_approval=?, is_approval_del=?, approval_time=?, busi_manager_id=?, busi_manager_account=?, busi_manager_name=?, busi_managerb_id=?, busi_managerb_account=?, busi_managerb_name=?, dept_id=?, dept_code=?, dept_name=?, dept_path=?, dept_path_name=?, belong_to_nc=?, phases=?, phases_status=?, status=?, is_continue=?, is_recouncil=?, last_recouncil_time=?, setup_date=?, set_up_year=?, set_up_month=?, set_up_day=?, apply_date=?, apply_date_year=?, apply_date_month=?, apply_date_day=?, survey_date=?, survey_date_year=?, survey_date_month=?, survey_date_day=?, on_will_date=?, on_will_date_year=?, on_will_date_month=?, on_will_date_day=?, is_on_will_pass=?, first_lending_date=?, custom_amount1=?, custom_amount2=?, custom_amount3=?, custom_name1=?, custom_name2=?, custom_name3=?, fan_guarantee_methord=?, is_redo=?, is_redo_project=?, redo_from=?, redo_risk_handle_id=? where (id = ?)</tt>
	 *
	 *	@param projectDataInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectDataInfoDO projectDataInfo) throws DataAccessException {
    	if (projectDataInfo == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-PROJECT-DATA-INFO-UPDATE", projectDataInfo);
    }

	/**
	 *  Update DB table <tt>project_data_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_data_info set project_id=?, project_name=?, customer_id=?, customer_name=?, customer_type=?, customer_add_time=?, enterprise_type=?, customer_level=?, scale=?, province_code=?, province_name=?, city_code=?, city_name=?, county_code=?, county_name=?, busi_type=?, busi_type_name=?, industry_code=?, industry_name=?, project_channel_code=?, project_channel_name=?, project_channel_type=?, project_sub_channel_name=?, capital_channel_id=?, capital_channel_name=?, channal_type=?, capital_sub_channel_name=?, channal_code=?, channal_credit_startDate=?, channal_credit_endDate=?, channal_loss_allocationRate=?, channal_bond_rate=?, channal_single_limit=?, channal_credit_amount=?, channal_compensatory_limit=?, time_limit=?, time_unit=?, start_time=?, end_time=?, amount=?, accumulated_issue_amount=?, loaned_amount=?, used_amount=?, repayed_amount=?, charged_amount=?, refund_amount=?, is_maximum_amount=?, released_amount=?, releasable_amount=?, releasing_amount=?, customer_deposit_amount=?, self_deposit_amount=?, comp_principal_amount=?, comp_interest_amount=?, guarantee_amount=?, guarantee_fee_rate=?, blance=?, contract_no=?, contract_time=?, contract_amount=?, is_approval=?, is_approval_del=?, approval_time=?, busi_manager_id=?, busi_manager_account=?, busi_manager_name=?, busi_managerb_id=?, busi_managerb_account=?, busi_managerb_name=?, dept_id=?, dept_code=?, dept_name=?, dept_path=?, dept_path_name=?, belong_to_nc=?, phases=?, phases_status=?, status=?, is_continue=?, is_recouncil=?, last_recouncil_time=?, setup_date=?, set_up_year=?, set_up_month=?, set_up_day=?, apply_date=?, apply_date_year=?, apply_date_month=?, apply_date_day=?, survey_date=?, survey_date_year=?, survey_date_month=?, survey_date_day=?, on_will_date=?, on_will_date_year=?, on_will_date_month=?, on_will_date_day=?, is_on_will_pass=?, first_lending_date=?, custom_amount1=?, custom_amount2=?, custom_amount3=?, custom_name1=?, custom_name2=?, custom_name3=?, fan_guarantee_methord=?, is_redo=?, is_redo_project=?, redo_from=?, redo_risk_handle_id=? where (project_code = ?)</tt>
	 *
	 *	@param projectDataInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByProjectCode(ProjectDataInfoDO projectDataInfo) throws DataAccessException {
    	if (projectDataInfo == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-PROJECT-DATA-INFO-UPDATE-BY-PROJECT-CODE", projectDataInfo);
    }

	/**
	 *  Query DB table <tt>project_data_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_data_info where (project_id = ?)</tt>
	 *
	 *	@param projectId
	 *	@return ProjectDataInfoDO
	 *	@throws DataAccessException
	 */	 
    public ProjectDataInfoDO findById(long projectId) throws DataAccessException {
        Long param = new Long(projectId);

        return (ProjectDataInfoDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-DATA-INFO-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>project_data_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_data_info where (project_id = ?) for update</tt>
	 *
	 *	@param projectId
	 *	@return ProjectDataInfoDO
	 *	@throws DataAccessException
	 */	 
    public ProjectDataInfoDO findByIdForUpdate(long projectId) throws DataAccessException {
        Long param = new Long(projectId);

        return (ProjectDataInfoDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-DATA-INFO-FIND-BY-ID-FOR-UPDATE", param);

    }

	/**
	 *  Query DB table <tt>project_data_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_data_info where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return ProjectDataInfoDO
	 *	@throws DataAccessException
	 */	 
    public ProjectDataInfoDO findByProjectCode(String projectCode) throws DataAccessException {

        return (ProjectDataInfoDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-DATA-INFO-FIND-BY-PROJECT-CODE", projectCode);

    }

	/**
	 *  Query DB table <tt>project_data_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_data_info where (project_code = ?) for update</tt>
	 *
	 *	@param projectCode
	 *	@return ProjectDataInfoDO
	 *	@throws DataAccessException
	 */	 
    public ProjectDataInfoDO findByProjectCodeForUpdate(String projectCode) throws DataAccessException {

        return (ProjectDataInfoDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-DATA-INFO-FIND-BY-PROJECT-CODE-FOR-UPDATE", projectCode);

    }

	/**
	 *  Delete records from DB table <tt>project_data_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_data_info where (project_id = ?)</tt>
	 *
	 *	@param projectId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long projectId) throws DataAccessException {
        Long param = new Long(projectId);

        return getSqlMapClientTemplate().delete("MS-PROJECT-DATA-INFO-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>project_data_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_data_info where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectCode(String projectCode) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-PROJECT-DATA-INFO-DELETE-BY-PROJECT-CODE", projectCode);
    }

	/**
	 *  Query DB table <tt>project_data_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_data_info where (1 = 1)</tt>
	 *
	 *	@param projectDataInfo
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<ProjectDataInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectDataInfoDO> findByCondition(ProjectDataInfoDO projectDataInfo, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException {
    	if (projectDataInfo == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("projectDataInfo", projectDataInfo);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);

        return getSqlMapClientTemplate().queryForList("MS-PROJECT-DATA-INFO-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>project_data_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from project_data_info where (1 = 1)</tt>
	 *
	 *	@param projectDataInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ProjectDataInfoDO projectDataInfo) throws DataAccessException {
    	if (projectDataInfo == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-PROJECT-DATA-INFO-FIND-BY-CONDITION-COUNT", projectDataInfo);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}