/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.ProjectChannelRelationHiDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.ProjectChannelRelationHiDO;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import java.util.List;

/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.ProjectChannelRelationHiDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_channel_relation_his.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings("unchecked")

public class IbatisProjectChannelRelationHiDAO extends SqlMapClientDaoSupport implements ProjectChannelRelationHiDAO {
	/**
	 *  Insert one <tt>ProjectChannelRelationHiDO</tt> object to DB table <tt>project_channel_relation_his</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_channel_relation_his(id,project_date,biz_no,phases,project_code,busi_type,busi_type_name,channel_relation,channel_id,channel_code,channel_type,channel_name,sub_channel_id,sub_channel_code,sub_channel_type,sub_channel_name,contract_amount,liquidity_loans_amount,financial_amount,acceptance_bill_amount,credit_amount,loaned_amount,loan_liquidity_loans_amount,loan_financial_amount,loan_acceptance_bill_amount,loan_credit_amount,used_amount,comp_amount,comp_liquidity_loans_amount,comp_financial_amount,comp_acceptance_bill_amount,comp_credit_amount,releasable_amount,released_amount,release_liquidity_loans_amount,release_financial_amount,release_acceptance_bill_amount,release_credit_amount,repayed_amount,in_amount,new_customer,new_project,in_cutomer,in_project,latest,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectChannelRelationHi
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectChannelRelationHiDO projectChannelRelationHi) throws DataAccessException {
    	if (projectChannelRelationHi == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PROJECT-CHANNEL-RELATION-HI-INSERT", projectChannelRelationHi);

        return projectChannelRelationHi.getId();
    }

	/**
	 *  Update DB table <tt>project_channel_relation_his</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_channel_relation_his set project_date=?, biz_no=?, phases=?, project_code=?, busi_type=?, busi_type_name=?, channel_relation=?, channel_id=?, channel_code=?, channel_type=?, channel_name=?, sub_channel_id=?, sub_channel_code=?, sub_channel_type=?, sub_channel_name=?, contract_amount=?, liquidity_loans_amount=?, financial_amount=?, acceptance_bill_amount=?, credit_amount=?, loaned_amount=?, loan_liquidity_loans_amount=?, loan_financial_amount=?, loan_acceptance_bill_amount=?, loan_credit_amount=?, used_amount=?, comp_amount=?, comp_liquidity_loans_amount=?, comp_financial_amount=?, comp_acceptance_bill_amount=?, comp_credit_amount=?, releasable_amount=?, released_amount=?, release_liquidity_loans_amount=?, release_financial_amount=?, release_acceptance_bill_amount=?, release_credit_amount=?, repayed_amount=?, in_amount=?, new_customer=?, new_project=?, in_cutomer=?, in_project=?, latest=? where (id = ?)</tt>
	 *
	 *	@param projectChannelRelationHi
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectChannelRelationHiDO projectChannelRelationHi) throws DataAccessException {
    	if (projectChannelRelationHi == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-PROJECT-CHANNEL-RELATION-HI-UPDATE", projectChannelRelationHi);
    }

	/**
	 *  Query DB table <tt>project_channel_relation_his</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, project_date, biz_no, phases, project_code, busi_type, busi_type_name, channel_relation, channel_id, channel_code, channel_type, channel_name, sub_channel_id, sub_channel_code, sub_channel_type, sub_channel_name, contract_amount, loaned_amount, used_amount, comp_amount, releasable_amount, released_amount, repayed_amount, in_amount, new_customer, new_project, in_cutomer, in_project, latest, raw_add_time, raw_update_time from project_channel_relation_his where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return ProjectChannelRelationHiDO
	 *	@throws DataAccessException
	 */	 
    public ProjectChannelRelationHiDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (ProjectChannelRelationHiDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-CHANNEL-RELATION-HI-FIND-BY-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>project_channel_relation_his</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_channel_relation where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-PROJECT-CHANNEL-RELATION-HI-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>project_channel_relation_his</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_channel_relation_his where (project_date = ?)</tt>
	 *
	 *	@param projectDate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectDate(Date projectDate) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-PROJECT-CHANNEL-RELATION-HI-DELETE-BY-PROJECT-DATE", projectDate);
    }

	/**
	 *  Delete records from DB table <tt>project_channel_relation_his</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_channel_relation_his where (1 = 1)</tt>
	 *
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByCondition() throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-PROJECT-CHANNEL-RELATION-HI-DELETE-BY-CONDITION", null);
    }

	/**
	 *  Query DB table <tt>project_channel_relation_his</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, project_date, biz_no, phases, project_code, busi_type, busi_type_name, channel_relation, channel_id, channel_code, channel_type, channel_name, sub_channel_id, sub_channel_code, sub_channel_type, sub_channel_name, contract_amount, loaned_amount, used_amount, comp_amount, releasable_amount, released_amount, repayed_amount, in_amount, new_customer, new_project, in_cutomer, in_project, latest, raw_add_time, raw_update_time from project_channel_relation_his where (1 = 1)</tt>
	 *
	 *	@param projectChannelRelationHi
	 *	@return List<ProjectChannelRelationHiDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectChannelRelationHiDO> findByCondition(ProjectChannelRelationHiDO projectChannelRelationHi) throws DataAccessException {
    	if (projectChannelRelationHi == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


        return getSqlMapClientTemplate().queryForList("MS-PROJECT-CHANNEL-RELATION-HI-FIND-BY-CONDITION", projectChannelRelationHi);

    }

	/**
	 *  Query DB table <tt>project_channel_relation_his</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from project_channel_relation_his where (1 = 1)</tt>
	 *
	 *	@param projectChannelRelationHi
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ProjectChannelRelationHiDO projectChannelRelationHi) throws DataAccessException {
    	if (projectChannelRelationHi == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-PROJECT-CHANNEL-RELATION-HI-FIND-BY-CONDITION-COUNT", projectChannelRelationHi);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}