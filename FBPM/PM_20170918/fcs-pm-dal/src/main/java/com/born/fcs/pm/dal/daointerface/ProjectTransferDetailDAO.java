/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.ProjectTransferDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>project_transfer_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_transfer_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ProjectTransferDetailDAO {
	/**
	 *  Insert one <tt>ProjectTransferDetailDO</tt> object to DB table <tt>project_transfer_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_transfer_detail(id,form_id,project_code,project_name,customer_id,customer_name,busi_type,busi_type_name,project_phase,project_status,project_amount,project_balance,apply_user_id,apply_user_account,apply_user_name,transfer_status,transfer_type,transfer_time,original_user_id,original_user_account,original_user_name,original_user_dept_id,original_user_dept_name,original_userb_id,original_userb_account,original_userb_name,original_userb_dept_id,original_userb_dept_name,accept_user_id,accept_user_account,accept_user_name,accept_user_dept_id,accept_user_dept_name,accept_userb_id,accept_userb_account,accept_userb_name,accept_userb_dept_id,accept_userb_dept_name,transfer_file,form_change,risk_council_summary,project_approval,remark,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectTransferDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectTransferDetailDO projectTransferDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_transfer_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_transfer_detail set form_id=?, project_code=?, project_name=?, customer_id=?, customer_name=?, busi_type=?, busi_type_name=?, project_phase=?, project_status=?, project_amount=?, project_balance=?, apply_user_id=?, apply_user_account=?, apply_user_name=?, transfer_status=?, transfer_type=?, transfer_time=?, original_user_id=?, original_user_account=?, original_user_name=?, original_user_dept_id=?, original_user_dept_name=?, original_userb_id=?, original_userb_account=?, original_userb_name=?, original_userb_dept_id=?, original_userb_dept_name=?, accept_user_id=?, accept_user_account=?, accept_user_name=?, accept_user_dept_id=?, accept_user_dept_name=?, accept_userb_id=?, accept_userb_account=?, accept_userb_name=?, accept_userb_dept_id=?, accept_userb_dept_name=?, transfer_file=?, form_change=?, risk_council_summary=?, project_approval=?, remark=? where (id = ?)</tt>
	 *
	 *	@param projectTransferDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectTransferDetailDO projectTransferDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_transfer_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_transfer_detail set transfer_status=? where (form_id = ?)</tt>
	 *
	 *	@param transferStatus
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateStatusByFormId(String transferStatus, long formId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_transfer_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_transfer_detail where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return ProjectTransferDetailDO
	 *	@throws DataAccessException
	 */	 
    public ProjectTransferDetailDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_transfer_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_transfer_detail where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return List<ProjectTransferDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectTransferDetailDO> findByFormId(long formId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_transfer_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_transfer_detail where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return List<ProjectTransferDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectTransferDetailDO> findByProjectCode(String projectCode) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_transfer_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_transfer_detail where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_transfer_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_transfer_detail where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_transfer_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_transfer_detail where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectCode(String projectCode) throws DataAccessException;

}