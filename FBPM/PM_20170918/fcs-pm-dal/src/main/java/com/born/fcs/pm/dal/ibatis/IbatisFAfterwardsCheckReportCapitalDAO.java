/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.FAfterwardsCheckReportCapitalDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.FAfterwardsCheckReportCapitalDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.FAfterwardsCheckReportCapitalDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_afterwards_check_report_capital.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisFAfterwardsCheckReportCapitalDAO extends SqlMapClientDaoSupport implements FAfterwardsCheckReportCapitalDAO {
	/**
	 *  Insert one <tt>FAfterwardsCheckReportCapitalDO</tt> object to DB table <tt>f_afterwards_check_report_capital</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_afterwards_check_report_capital(form_id,capital_type,capital_item,capital_value1,capital_value2,capital_value3,capital_value4,capital_value5,capital_value6,capital_value7,capital_value8,capital_value9,capital_value10,del_able,sort_order,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FAfterwardsCheckReportCapital
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FAfterwardsCheckReportCapitalDO FAfterwardsCheckReportCapital) throws DataAccessException {
    	if (FAfterwardsCheckReportCapital == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-AFTERWARDS-CHECK-REPORT-CAPITAL-INSERT", FAfterwardsCheckReportCapital);

        return FAfterwardsCheckReportCapital.getCapitalId();
    }

	/**
	 *  Update DB table <tt>f_afterwards_check_report_capital</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_afterwards_check_report_capital set form_id=?, capital_type=?, capital_item=?, capital_value1=?, capital_value2=?, capital_value3=?, capital_value4=?, capital_value5=?, capital_value6=?, capital_value7=?, capital_value8=?, capital_value9=?, capital_value10=?, del_able=?, sort_order=? where (capital_id = ?)</tt>
	 *
	 *	@param FAfterwardsCheckReportCapital
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FAfterwardsCheckReportCapitalDO FAfterwardsCheckReportCapital) throws DataAccessException {
    	if (FAfterwardsCheckReportCapital == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-AFTERWARDS-CHECK-REPORT-CAPITAL-UPDATE", FAfterwardsCheckReportCapital);
    }

	/**
	 *  Query DB table <tt>f_afterwards_check_report_capital</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_afterwards_check_report_capital where (capital_id = ?)</tt>
	 *
	 *	@param capitalId
	 *	@return FAfterwardsCheckReportCapitalDO
	 *	@throws DataAccessException
	 */	 
    public FAfterwardsCheckReportCapitalDO findById(long capitalId) throws DataAccessException {
        Long param = new Long(capitalId);

        return (FAfterwardsCheckReportCapitalDO) getSqlMapClientTemplate().queryForObject("MS-F-AFTERWARDS-CHECK-REPORT-CAPITAL-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_afterwards_check_report_capital</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_afterwards_check_report_capital where (form_id = ?) order by sort_order ASC</tt>
	 *
	 *	@param formId
	 *	@return List<FAfterwardsCheckReportCapitalDO>
	 *	@throws DataAccessException
	 */	 
    public List<FAfterwardsCheckReportCapitalDO> findByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return getSqlMapClientTemplate().queryForList("MS-F-AFTERWARDS-CHECK-REPORT-CAPITAL-FIND-BY-FORM-ID", param);

    }

	/**
	 *  Query DB table <tt>f_afterwards_check_report_capital</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_afterwards_check_report_capital where ((form_id = ?) AND (capital_type = ?)) order by sort_order ASC</tt>
	 *
	 *	@param formId
	 *	@param capitalType
	 *	@return List<FAfterwardsCheckReportCapitalDO>
	 *	@throws DataAccessException
	 */	 
    public List<FAfterwardsCheckReportCapitalDO> findByFormIdAndCapitalType(long formId, String capitalType) throws DataAccessException {
        Map param = new HashMap();

        param.put("formId", new Long(formId));
        param.put("capitalType", capitalType);

        return getSqlMapClientTemplate().queryForList("MS-F-AFTERWARDS-CHECK-REPORT-CAPITAL-FIND-BY-FORM-ID-AND-CAPITAL-TYPE", param);

    }

	/**
	 *  Delete records from DB table <tt>f_afterwards_check_report_capital</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_afterwards_check_report_capital where (capital_id = ?)</tt>
	 *
	 *	@param capitalId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long capitalId) throws DataAccessException {
        Long param = new Long(capitalId);

        return getSqlMapClientTemplate().delete("MS-F-AFTERWARDS-CHECK-REPORT-CAPITAL-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_afterwards_check_report_capital</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_afterwards_check_report_capital where ((form_id = ?) AND (capital_type = ?))</tt>
	 *
	 *	@param formId
	 *	@param capitalType
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormIdAndCapitalType(long formId, String capitalType) throws DataAccessException {
        Map param = new HashMap();

        param.put("formId", new Long(formId));
        param.put("capitalType", capitalType);

        return getSqlMapClientTemplate().delete("MS-F-AFTERWARDS-CHECK-REPORT-CAPITAL-DELETE-BY-FORM-ID-AND-CAPITAL-TYPE", param);
    }

}