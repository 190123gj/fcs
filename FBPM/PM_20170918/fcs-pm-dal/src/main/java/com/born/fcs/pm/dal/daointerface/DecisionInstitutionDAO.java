/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import java.util.List;

import org.springframework.dao.DataAccessException;

import com.born.fcs.pm.dal.dataobject.DecisionInstitutionDO;

/**
 * A dao interface provides methods to access database table
 * <tt>decision_institution</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access
 * Layer) code generation utility specially developed for <tt>paygw</tt>
 * project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be
 * OVERWRITTEN by someone else. To modify the file, you should go to directory
 * <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding
 * configuration file (<tt>tables/decision_institution.xml</tt>). Modify the
 * configuration file according to your needs, then run
 * <tt>specialmer-dalgen</tt> to generate this file.
 *
 * @author peigen
 */
@SuppressWarnings("rawtypes")
public interface DecisionInstitutionDAO {
	/**
	 * Insert one <tt>DecisionInstitutionDO</tt> object to DB table
	 * <tt>decision_institution</tt>, return primary key
	 *
	 * <p>
	 * The sql statement for this operation is <br>
	 * <tt>insert into decision_institution(institution_id,institution_name,institution_members,raw_add_time) values (?, ?, ?, ?)</tt>
	 *
	 * @param decisionInstitution
	 * @return long
	 * @throws DataAccessException
	 */
	public long insert(DecisionInstitutionDO decisionInstitution) throws DataAccessException;
	
	/**
	 * Update DB table <tt>decision_institution</tt>.
	 *
	 * <p>
	 * The sql statement for this operation is <br>
	 * <tt>update decision_institution set institution_name=?, institution_members=? where (institution_id = ?)</tt>
	 *
	 * @param decisionInstitution
	 * @return int
	 * @throws DataAccessException
	 */
	public int update(DecisionInstitutionDO decisionInstitution) throws DataAccessException;
	
	/**
	 * Query DB table <tt>decision_institution</tt> for records.
	 *
	 * <p>
	 * The sql statement for this operation is <br>
	 * <tt>select * from decision_institution where (institution_id = ?)</tt>
	 *
	 * @param institutionId
	 * @return DecisionInstitutionDO
	 * @throws DataAccessException
	 */
	public DecisionInstitutionDO findById(long institutionId) throws DataAccessException;
	
	/**
	 * Delete records from DB table <tt>decision_institution</tt>.
	 *
	 * <p>
	 * The sql statement for this operation is <br>
	 * <tt>delete from decision_institution where (institution_id = ?)</tt>
	 *
	 * @param institutionId
	 * @return int
	 * @throws DataAccessException
	 */
	public int deleteById(long institutionId) throws DataAccessException;
	
	/**
	 * Query DB table <tt>decision_institution</tt> for records.
	 *
	 * <p>
	 * The sql statement for this operation is <br>
	 * <tt>select * from decision_institution where (1 = 1)</tt>
	 *
	 * @param institutionName
	 * @return DecisionInstitutionDO
	 * @throws DataAccessException
	 */
	public DecisionInstitutionDO findDecisionInstitutionByInstitutionName(String institutionName)
																									throws DataAccessException;
	
	/**
	 * Query DB table <tt>decision_institution</tt> for records.
	 *
	 * <p>
	 * The sql statement for this operation is <br>
	 * <tt>select COUNT(*) from decision_institution where (1 = 1)</tt>
	 *
	 * @param decisionInstitution
	 * @return long
	 * @throws DataAccessException
	 */
	public long findByConditionCount(DecisionInstitutionDO decisionInstitution)
																				throws DataAccessException;
	
	/**
	 * Query DB table <tt>decision_institution</tt> for records.
	 *
	 * <p>
	 * The sql statement for this operation is <br>
	 * <tt>select * from decision_institution where (1 = 1)</tt>
	 *
	 * @param decisionInstitution
	 * @param limitStart
	 * @param pageSize
	 * @return List<DecisionInstitutionDO>
	 * @throws DataAccessException
	 */
	public List<DecisionInstitutionDO> findByCondition(DecisionInstitutionDO decisionInstitution,
														long limitStart, long pageSize,
														String sortOrder, String sortCol)
																							throws DataAccessException;
	
}