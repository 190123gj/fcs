/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.ProjectVirtualDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>project_virtual_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_virtual_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ProjectVirtualDetailDAO {
	/**
	 *  Insert one <tt>ProjectVirtualDetailDO</tt> object to DB table <tt>project_virtual_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_virtual_detail(detail_id,virtual_id,virtual_project_code,project_code,project_name,customer_id,customer_name,amount,balance,busi_type,busi_type_name,busi_manager_id,busi_manager_account,busi_manager_name,dept_id,dept_name,remark,attach,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectVirtualDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectVirtualDetailDO projectVirtualDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_virtual_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_virtual_detail set virtual_id=?, virtual_project_code=?, project_code=?, project_name=?, customer_id=?, customer_name=?, amount=?, balance=?, busi_type=?, busi_type_name=?, busi_manager_id=?, busi_manager_account=?, busi_manager_name=?, dept_id=?, dept_name=?, remark=?, attach=? where (detail_id = ?)</tt>
	 *
	 *	@param projectVirtualDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectVirtualDetailDO projectVirtualDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_virtual_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_virtual_detail set virtual_project_code=? where (virtual_id = ?)</tt>
	 *
	 *	@param virtualProjectCode
	 *	@param virtualId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateVirtualProjectCode(String virtualProjectCode, long virtualId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_virtual_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_virtual_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return ProjectVirtualDetailDO
	 *	@throws DataAccessException
	 */	 
    public ProjectVirtualDetailDO findById(long detailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_virtual_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_virtual_detail where (virtual_id = ?)</tt>
	 *
	 *	@param virtualId
	 *	@return List<ProjectVirtualDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectVirtualDetailDO> findByVirtualId(long virtualId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_virtual_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_virtual_detail where (virtual_project_code = ?)</tt>
	 *
	 *	@param virtualProjectCode
	 *	@return List<ProjectVirtualDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectVirtualDetailDO> findByVirtualProjectCode(String virtualProjectCode) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_virtual_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_virtual_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long detailId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_virtual_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_virtual_detail where (virtual_id = ?)</tt>
	 *
	 *	@param virtualId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByVirtualId(long virtualId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_virtual_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_virtual_detail where (virtual_project_code = ?)</tt>
	 *
	 *	@param virtualProjectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByVirtualProjectCode(String virtualProjectCode) throws DataAccessException;

}