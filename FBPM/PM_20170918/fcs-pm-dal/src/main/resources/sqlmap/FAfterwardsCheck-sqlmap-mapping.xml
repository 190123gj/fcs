<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_afterwards_check -->
    <resultMap id="RM-F-AFTERWARDS-CHECK" class="com.born.fcs.pm.dal.dataobject.FAfterwardsCheckDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="checkDate" column="check_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="checkAddress" column="check_address" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="edition" column="edition" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="roundYear" column="round_year" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="roundTime" column="round_time" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="isLastest" column="is_lastest" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="usedAmount" column="used_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="repayedAmount" column="repayed_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="useWay" column="use_way" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFAfterwardsCheckDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFAfterwardsCheckDAO.insert -->
    <insert id="MS-F-AFTERWARDS-CHECK-INSERT">
        INSERT /*MS-YRD-F-AFTERWARDS-CHECK-INSERT*/ INTO f_afterwards_check
					(form_id,
						project_code,
						project_name,
						customer_id,
						customer_name,
						edition,
						check_date,
						check_address,
						round_year,
						round_time,
						is_lastest,
						amount,
						used_amount,
						repayed_amount,
						use_way,
						raw_add_time)  
					values (#formId#, #projectCode#, #projectName#, #customerId#, #customerName#,#edition#, #checkDate#,#checkAddress#,#roundYear#, #roundTime#, #isLastest#, #amount.cent#, #usedAmount.cent#, #repayedAmount.cent#,#useWay#,SYSDATE())
				<selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.update -->
    <update id="MS-F-AFTERWARDS-CHECK-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-AFTERWARDS-CHECK-UPDATE*/ f_afterwards_check set form_id=#formId#, project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, edition=#edition#, check_date=#checkDate#, check_address=#checkAddress#, round_year=#roundYear#, round_time=#roundTime#, is_lastest=#isLastest#, amount=#amount.cent#, used_amount=#usedAmount.cent#, repayed_amount=#repayedAmount.cent#, use_way=#useWay# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.updateByFormId -->
    <update id="MS-F-AFTERWARDS-CHECK-UPDATE-BY-FORM-ID">
    <![CDATA[
        update /*MS-YRD-F-AFTERWARDS-CHECK-UPDATE-BY-FORM-ID*/ f_afterwards_check set project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, edition=#edition#, check_date=#checkDate#, check_address=#checkAddress#, round_year=#roundYear#, round_time=#roundTime#, is_lastest=#isLastest#, amount=#amount.cent#, used_amount=#usedAmount.cent#, repayed_amount=#repayedAmount.cent#, use_way=#useWay# where (form_id = #formId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.updateIsLasetByProjectCode -->
    <update id="MS-F-AFTERWARDS-CHECK-UPDATE-IS-LASET-BY-PROJECT-CODE">
    <![CDATA[
        update /*MS-YRD-F-AFTERWARDS-CHECK-UPDATE-IS-LASET-BY-PROJECT-CODE*/ f_afterwards_check set is_lastest='NO' where ((is_lastest = 'YES') AND (project_code = #projectCode#) AND (edition = #edition#))
    ]]>
    </update>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.findById -->
    <select id="MS-F-AFTERWARDS-CHECK-FIND-BY-ID" resultMap="RM-F-AFTERWARDS-CHECK">
    <![CDATA[
        select /*MS-YRD-F-AFTERWARDS-CHECK-FIND-BY-ID*/ * from f_afterwards_check where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.findByFormId -->
    <select id="MS-F-AFTERWARDS-CHECK-FIND-BY-FORM-ID" resultMap="RM-F-AFTERWARDS-CHECK">
    <![CDATA[
        select /*MS-YRD-F-AFTERWARDS-CHECK-FIND-BY-FORM-ID*/ * from f_afterwards_check where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.deleteById -->
    <delete id="MS-F-AFTERWARDS-CHECK-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-AFTERWARDS-CHECK-DELETE-BY-ID*/ from f_afterwards_check where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.deleteByFormId -->
    <delete id="MS-F-AFTERWARDS-CHECK-DELETE-BY-FORM-ID">
    <![CDATA[
        delete /*MS-YRD-F-AFTERWARDS-CHECK-DELETE-BY-FORM-ID*/ from f_afterwards_check where (form_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.deleteByProjectCode -->
    <delete id="MS-F-AFTERWARDS-CHECK-DELETE-BY-PROJECT-CODE">
    <![CDATA[
        delete /*MS-YRD-F-AFTERWARDS-CHECK-DELETE-BY-PROJECT-CODE*/ from f_afterwards_check where (project_code = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.findByCondition -->
    <select id="MS-F-AFTERWARDS-CHECK-FIND-BY-CONDITION" resultMap="RM-F-AFTERWARDS-CHECK">
        SELECT /*MS-YRD-F-AFTERWARDS-CHECK-FIND-BY-CONDITION*/  *  FROM f_afterwards_check  
			WHERE 1=1 

			<dynamic>
			
			<isGreaterThan property="FAfterwardsCheck.id" compareValue="0" prepend=" and ">
				<![CDATA[ id = #FAfterwardsCheck.id# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="FAfterwardsCheck.formId" compareValue="0" prepend=" and ">
				<![CDATA[ form_id = #FAfterwardsCheck.formId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="FAfterwardsCheck.customerId" compareValue="0" prepend=" and ">
				<![CDATA[ customer_id = #FAfterwardsCheck.customerId# ]]>
			</isGreaterThan>
			
			<isNotEmpty property="FAfterwardsCheck.projectCode"  prepend=" and ">
				<![CDATA[ project_code = #FAfterwardsCheck.projectCode# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FAfterwardsCheck.projectName"  prepend=" and ">
				<![CDATA[ project_name = #FAfterwardsCheck.projectName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FAfterwardsCheck.customerName"  prepend=" and ">
				<![CDATA[ customer_name = #FAfterwardsCheck.customerName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FAfterwardsCheck.checkDate"  prepend=" and ">
				<![CDATA[ check_date = #FAfterwardsCheck.checkDate# ]]>
			</isNotEmpty>
			
			</dynamic>
			order by id desc
			<isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisFAfterwardsCheckDAO.findByConditionCount -->
    <select id="MS-F-AFTERWARDS-CHECK-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-AFTERWARDS-CHECK-FIND-BY-CONDITION-COUNT*/  count(*) totalCount  FROM f_afterwards_check 
			WHERE 1=1
			<dynamic>

			<isGreaterThan property="id" compareValue="0" prepend=" and ">
				<![CDATA[ id = #id# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="formId" compareValue="0" prepend=" and ">
				<![CDATA[ form_id = #formId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="customerId" compareValue="0" prepend=" and ">
				<![CDATA[ customer_id = #customerId# ]]>
			</isGreaterThan>
			
			<isNotEmpty property="projectCode"  prepend=" and ">
				<![CDATA[ project_code = #projectCode# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="projectName"  prepend=" and ">
				<![CDATA[ project_name = #projectName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="customerName"  prepend=" and ">
				<![CDATA[ customer_name = #customerName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="checkDate"  prepend=" and ">
				<![CDATA[ check_date = #checkDate# ]]>
			</isNotEmpty>
			
			</dynamic>
    </select>

</sqlMap>
