<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table enterprise_scale_rule -->
    <resultMap id="RM-ENTERPRISE-SCALE-RULE" class="com.born.fcs.pm.dal.dataobject.EnterpriseScaleRuleDO">
        <result property="ruleId" column="rule_id" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="industryCode" column="industry_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="industryName" column="industry_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="kpiType" column="kpi_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="kpiName" column="kpi_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="kpiUnit" column="kpi_unit" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="kpiVariable" column="kpi_variable" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="scaleHugeScript" column="scale_huge_script" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="scaleBigScript" column="scale_big_script" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="scaleMediumScript" column="scale_medium_script" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="scaleSmallScript" column="scale_small_script" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="scaleTinyScript" column="scale_tiny_script" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="version" column="version" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisEnterpriseScaleRuleDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisEnterpriseScaleRuleDAO.insert -->
    <insert id="MS-ENTERPRISE-SCALE-RULE-INSERT">
    <![CDATA[
        insert /*MS-YRD-ENTERPRISE-SCALE-RULE-INSERT*/ into enterprise_scale_rule(industry_code,industry_name,kpi_type,kpi_name,kpi_unit,kpi_variable,scale_huge_script,scale_big_script,scale_medium_script,scale_small_script,scale_tiny_script,version,raw_add_time) values (#industryCode#, #industryName#, #kpiType#, #kpiName#, #kpiUnit#, #kpiVariable#, #scaleHugeScript#, #scaleBigScript#, #scaleMediumScript#, #scaleSmallScript#, #scaleTinyScript#, #version#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisEnterpriseScaleRuleDAO.update -->
    <update id="MS-ENTERPRISE-SCALE-RULE-UPDATE">
    <![CDATA[
        update /*MS-YRD-ENTERPRISE-SCALE-RULE-UPDATE*/ enterprise_scale_rule set industry_code=#industryCode#, industry_name=#industryName#, kpi_type=#kpiType#, kpi_name=#kpiName#, kpi_unit=#kpiUnit#, kpi_variable=#kpiVariable#, scale_huge_script=#scaleHugeScript#, scale_big_script=#scaleBigScript#, scale_medium_script=#scaleMediumScript#, scale_small_script=#scaleSmallScript#, scale_tiny_script=#scaleTinyScript#, version=#version# where (rule_id = #ruleId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisEnterpriseScaleRuleDAO.findById -->
    <select id="MS-ENTERPRISE-SCALE-RULE-FIND-BY-ID" resultMap="RM-ENTERPRISE-SCALE-RULE">
    <![CDATA[
        select /*MS-YRD-ENTERPRISE-SCALE-RULE-FIND-BY-ID*/ * from enterprise_scale_rule where (rule_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisEnterpriseScaleRuleDAO.findByAll -->
    <select id="MS-ENTERPRISE-SCALE-RULE-FIND-BY-ALL" resultMap="RM-ENTERPRISE-SCALE-RULE">
    <![CDATA[
        select /*MS-YRD-ENTERPRISE-SCALE-RULE-FIND-BY-ALL*/ * from enterprise_scale_rule where (version = 'NOW')
    ]]>
    </select>

    <!-- mapped statement for IbatisEnterpriseScaleRuleDAO.findByDefault -->
    <select id="MS-ENTERPRISE-SCALE-RULE-FIND-BY-DEFAULT" resultMap="RM-ENTERPRISE-SCALE-RULE">
    <![CDATA[
        select /*MS-YRD-ENTERPRISE-SCALE-RULE-FIND-BY-DEFAULT*/ * from enterprise_scale_rule where (industry_code = 'DEFAULT')
    ]]>
    </select>

    <!-- mapped statement for IbatisEnterpriseScaleRuleDAO.deleteById -->
    <delete id="MS-ENTERPRISE-SCALE-RULE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-ENTERPRISE-SCALE-RULE-DELETE-BY-ID*/ from enterprise_scale_rule where (rule_id = #value#)
    ]]>
    </delete>

</sqlMap>
