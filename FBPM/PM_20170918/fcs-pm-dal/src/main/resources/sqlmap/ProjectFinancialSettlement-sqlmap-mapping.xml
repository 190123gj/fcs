<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table project_financial_settlement -->
    <resultMap id="RM-PROJECT-FINANCIAL-SETTLEMENT" class="com.born.fcs.pm.dal.dataobject.ProjectFinancialSettlementDO">
        <result property="settlementId" column="settlement_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="originalCode" column="original_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="productId" column="product_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="productName" column="product_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="settlementAmount" column="settlement_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="settlementTime" column="settlement_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisProjectFinancialSettlementDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisProjectFinancialSettlementDAO.insert -->
    <insert id="MS-PROJECT-FINANCIAL-SETTLEMENT-INSERT">
        INSERT /*MS-YRD-PROJECT-FINANCIAL-SETTLEMENT-INSERT*/ INTO project_financial_settlement(settlement_id,project_code,original_code,product_id,product_name,settlement_amount,settlement_time,raw_add_time) values (#settlementId#, #projectCode#, #originalCode#, #productId#, #productName#, #settlementAmount.cent#, #settlementTime#, #rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="settlementId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisProjectFinancialSettlementDAO.update -->
    <update id="MS-PROJECT-FINANCIAL-SETTLEMENT-UPDATE">
    <![CDATA[
        update /*MS-YRD-PROJECT-FINANCIAL-SETTLEMENT-UPDATE*/ project_financial_settlement set project_code=#projectCode#, original_code=#originalCode#, product_id=#productId#, product_name=#productName#, settlement_amount=#settlementAmount.cent#, settlement_time=#settlementTime# where (settlement_id = #settlementId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisProjectFinancialSettlementDAO.findByCondition -->
    <select id="MS-PROJECT-FINANCIAL-SETTLEMENT-FIND-BY-CONDITION" resultMap="RM-PROJECT-FINANCIAL-SETTLEMENT">
        SELECT /*MS-YRD-PROJECT-FINANCIAL-SETTLEMENT-FIND-BY-CONDITION*/ * from project_financial_settlement where 1=1
	        <dynamic>
	            <isGreaterThan property="projectFinancialSettlement.productId"  compareValue="0" prepend=" and ">
	                product_id = #projectFinancialSettlement.productId#
	            </isGreaterThan>	        
	             <isNotEmpty property="projectFinancialSettlement.projectCode" prepend=" and ">
	               	project_code = #projectFinancialSettlement.projectCode#
	             </isNotEmpty>  
	             <isNotEmpty property="projectFinancialSettlement.originalCode" prepend=" and ">
	               	original_code = #projectFinancialSettlement.originalCode#
	             </isNotEmpty>  
    			<isNotEmpty property="projectFinancialSettlement.productName" prepend=" and ">
	               	product_name like concat('%',#projectFinancialSettlement.productName#,'%')
	             </isNotEmpty>  	             
				 <isNotEmpty property="settlementTimeStart" prepend=" and ">
		               <![CDATA[settlement_time >= #settlementTimeStart#]]>
	             </isNotEmpty>                             				
	 			 <isNotEmpty property="settlementTimeEnd" prepend=" and ">
		               <![CDATA[settlement_time <= #settlementTimeEnd#]]>
	             </isNotEmpty> 
	        </dynamic>                         				
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisProjectFinancialSettlementDAO.findByConditionCount -->
    <select id="MS-PROJECT-FINANCIAL-SETTLEMENT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PROJECT-FINANCIAL-SETTLEMENT-FIND-BY-CONDITION-COUNT*/  count(*)  FROM project_financial_settlement  where 1=1
	        <dynamic>
            	<isGreaterThan property="projectFinancialSettlement.productId"  compareValue="0" prepend=" and ">
	                product_id = #projectFinancialSettlement.productId#
	            </isGreaterThan>	        
	             <isNotEmpty property="projectFinancialSettlement.projectCode" prepend=" and ">
	               	project_code = #projectFinancialSettlement.projectCode#
	             </isNotEmpty>  
	             <isNotEmpty property="projectFinancialSettlement.originalCode" prepend=" and ">
	               	original_code = #projectFinancialSettlement.originalCode#
	             </isNotEmpty>  
    			<isNotEmpty property="projectFinancialSettlement.productName" prepend=" and ">
	               	product_name like concat('%',#projectFinancialSettlement.productName#,'%')
	             </isNotEmpty>  	             
				 <isNotEmpty property="settlementTimeStart" prepend=" and ">
		               <![CDATA[settlement_time >= #settlementTimeStart#]]>
	             </isNotEmpty>                             				
	 			 <isNotEmpty property="settlementTimeEnd" prepend=" and ">
		               <![CDATA[settlement_time <= #settlementTimeEnd#]]>
	             </isNotEmpty> 
	        </dynamic>
    </select>

    <!-- mapped statement for IbatisProjectFinancialSettlementDAO.findByConditionStatistics -->
    <select id="MS-PROJECT-FINANCIAL-SETTLEMENT-FIND-BY-CONDITION-STATISTICS" resultClass="com.yjf.common.lang.util.money.Money">
        SELECT /*MS-YRD-PROJECT-FINANCIAL-SETTLEMENT-FIND-BY-CONDITION-STATISTICS*/  sum(settlement_amount)  FROM project_financial_settlement  where 1=1
	        <dynamic>
           		<isGreaterThan property="projectFinancialSettlement.productId"  compareValue="0" prepend=" and ">
	                product_id = #projectFinancialSettlement.productId#
	            </isGreaterThan>	        
	             <isNotEmpty property="projectFinancialSettlement.projectCode" prepend=" and ">
	               	project_code = #projectFinancialSettlement.projectCode#
	             </isNotEmpty>  
	             <isNotEmpty property="projectFinancialSettlement.originalCode" prepend=" and ">
	               	original_code = #projectFinancialSettlement.originalCode#
	             </isNotEmpty>  
    			<isNotEmpty property="projectFinancialSettlement.productName" prepend=" and ">
	               	product_name like concat('%',#projectFinancialSettlement.productName#,'%')
	             </isNotEmpty>  	             
				 <isNotEmpty property="settlementTimeStart" prepend=" and ">
		               <![CDATA[settlement_time >= #settlementTimeStart#]]>
	             </isNotEmpty>                             				
	 			 <isNotEmpty property="settlementTimeEnd" prepend=" and ">
		               <![CDATA[settlement_time <= #settlementTimeEnd#]]>
	             </isNotEmpty> 
	        </dynamic>
    </select>

</sqlMap>
