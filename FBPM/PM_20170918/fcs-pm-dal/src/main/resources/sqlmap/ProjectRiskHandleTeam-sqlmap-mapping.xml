<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table project_risk_handle_team -->
    <resultMap id="RM-PROJECT-RISK-HANDLE-TEAM" class="com.born.fcs.pm.dal.dataobject.ProjectRiskHandleTeamDO">
        <result property="teamId" column="team_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiManagerId" column="busi_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="busiManagerName" column="busi_manager_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="chiefLeaderId" column="chief_leader_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="chiefLeaderName" column="chief_leader_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="viceLeaderId" column="vice_leader_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="viceLeaderName" column="vice_leader_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="memberIds" column="member_ids" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="memberNames" column="member_names" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createManId" column="create_man_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="createManName" column="create_man_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisProjectRiskHandleTeamDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisProjectRiskHandleTeamDAO.insert -->
    <insert id="MS-PROJECT-RISK-HANDLE-TEAM-INSERT">
        INSERT /*MS-YRD-PROJECT-RISK-HANDLE-TEAM-INSERT*/ INTO project_risk_handle_team(team_id,customer_id,customer_name,project_code,project_name,busi_manager_id,busi_manager_name,chief_leader_id,chief_leader_name,vice_leader_id,vice_leader_name,
			member_ids,member_names,create_man_id,create_man_name,create_time,raw_add_time) VALUES
			(#teamId#,#customerId#,#customerName#,#projectCode#,#projectName#,#busiManagerId#,#busiManagerName#,#chiefLeaderId#,#chiefLeaderName#,#viceLeaderId#,#viceLeaderName#,#memberIds#,#memberNames#,#createManId#,#createManName#,#createTime#,#rawAddTime#)
			<selectKey  resultClass ="long"  keyProperty ="teamId" >
		          		 SELECT LAST_INSERT_ID() AS ID
		    </selectKey>
    </insert>

    <!-- mapped statement for IbatisProjectRiskHandleTeamDAO.update -->
    <update id="MS-PROJECT-RISK-HANDLE-TEAM-UPDATE">
    <![CDATA[
        update /*MS-YRD-PROJECT-RISK-HANDLE-TEAM-UPDATE*/ project_risk_handle_team set customer_id=#customerId#, customer_name=#customerName#, project_code=#projectCode#, project_name=#projectName#, busi_manager_id=#busiManagerId#, busi_manager_name=#busiManagerName#, chief_leader_id=#chiefLeaderId#, chief_leader_name=#chiefLeaderName#, vice_leader_id=#viceLeaderId#, vice_leader_name=#viceLeaderName#, member_ids=#memberIds#, member_names=#memberNames#, create_man_id=#createManId#, create_man_name=#createManName#, create_time=#createTime# where (team_id = #teamId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisProjectRiskHandleTeamDAO.findById -->
    <select id="MS-PROJECT-RISK-HANDLE-TEAM-FIND-BY-ID" resultMap="RM-PROJECT-RISK-HANDLE-TEAM">
    <![CDATA[
        select /*MS-YRD-PROJECT-RISK-HANDLE-TEAM-FIND-BY-ID*/ * from project_risk_handle_team where (team_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectRiskHandleTeamDAO.findByProjectCode -->
    <select id="MS-PROJECT-RISK-HANDLE-TEAM-FIND-BY-PROJECT-CODE" resultMap="RM-PROJECT-RISK-HANDLE-TEAM">
    <![CDATA[
        select /*MS-YRD-PROJECT-RISK-HANDLE-TEAM-FIND-BY-PROJECT-CODE*/ * from project_risk_handle_team where (project_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectRiskHandleTeamDAO.deleteById -->
    <delete id="MS-PROJECT-RISK-HANDLE-TEAM-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PROJECT-RISK-HANDLE-TEAM-DELETE-BY-ID*/ from project_risk_handle_team where (team_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisProjectRiskHandleTeamDAO.findByCondition -->
    <select id="MS-PROJECT-RISK-HANDLE-TEAM-FIND-BY-CONDITION" resultMap="RM-PROJECT-RISK-HANDLE-TEAM">
        SELECT /*MS-YRD-PROJECT-RISK-HANDLE-TEAM-FIND-BY-CONDITION*/  item.*  FROM project_risk_handle_team item

			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = item.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = item.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty>

	        WHERE 1=1
	        <dynamic>
	            <isGreaterThan property="projectRiskHandleTeam.customerId"  compareValue="0" prepend=" and ">
	                item.customer_id = #projectRiskHandleTeam.customerId#
	            </isGreaterThan>
	            <isNotEmpty property="projectRiskHandleTeam.customerName"  prepend=" and ">
	                item.customer_name  like concat('%',#projectRiskHandleTeam.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectRiskHandleTeam.projectCode" prepend=" and ">
	               item.project_code  like concat('%',#projectRiskHandleTeam.projectCode#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectRiskHandleTeam.projectName" prepend=" and ">
	                item.project_name  like concat('%',#projectRiskHandleTeam.projectName#,'%')
	            </isNotEmpty>
	             <isGreaterThan property="projectRiskHandleTeam.busiManagerId"  compareValue="0" prepend=" and ">
	                   item.busi_manager_id = #projectRiskHandleTeam.busiManagerId#
	            </isGreaterThan>
	             <isNotEmpty property="projectRiskHandleTeam.busiManagerName" prepend=" and ">
	                  item.busi_manager_name  like concat('%',#projectRiskHandleTeam.busiManagerName#,'%')
	            </isNotEmpty>

                <isGreaterThan property="projectRiskHandleTeam.chiefLeaderId"  compareValue="0" prepend=" and ">
	                   item.chief_leader_id = #projectRiskHandleTeam.chiefLeaderId#
	            </isGreaterThan>
	             <isNotEmpty property="projectRiskHandleTeam.chiefLeaderName" prepend=" and ">
	               item.chief_leader_name  like concat('%',#projectRiskHandleTeam.chiefLeaderName#,'%')
	             </isNotEmpty>

	            <isGreaterThan property="projectRiskHandleTeam.viceLeaderId"  compareValue="0" prepend=" and ">
	                   item.vice_leader_id = #projectRiskHandleTeam.viceLeaderId#
	            </isGreaterThan>
	             <isNotEmpty property="projectRiskHandleTeam.viceLeaderName" prepend=" and ">
	               item.vice_leader_name = #projectRiskHandleTeam.viceLeaderName#
	            </isNotEmpty>

				 <isGreaterThan property="projectRiskHandleTeam.createManId" compareValue="0"  prepend=" and ">
	               item.create_man_id = #projectRiskHandleTeam.createManId#
	             </isGreaterThan>

                 <isNotEmpty property="projectRiskHandleTeam.createManName" prepend=" and ">
	               item.create_man_name  like concat('%',#projectRiskHandleTeam.createManName#,'%')
	            </isNotEmpty>


	             <isNotEmpty property="startTimeBegin" prepend=" and ">
	            	<![CDATA[ item.raw_add_time >= #startTimeBegin#  ]]>
	             </isNotEmpty>
	             <isNotEmpty property="startTimeEnd" prepend=" and ">
	            	<![CDATA[ item.raw_add_time <= #startTimeEnd#  ]]>
	             </isNotEmpty>


	        </dynamic>

	        <isEmpty property="sortCol" prepend=" order by ">
			    	item.raw_add_time DESC
			</isEmpty>

			 <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>

            <isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisProjectRiskHandleTeamDAO.findByConditionCount -->
    <select id="MS-PROJECT-RISK-HANDLE-TEAM-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PROJECT-RISK-HANDLE-TEAM-FIND-BY-CONDITION-COUNT*/  count(*)  FROM project_risk_handle_team item
			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = item.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = item.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty>
	        WHERE  1=1
	        <dynamic>
	            <isGreaterThan property="projectRiskHandleTeam.customerId"  compareValue="0" prepend=" and ">
	                item.customer_id = #projectRiskHandleTeam.customerId#
	            </isGreaterThan>
	            <isNotEmpty property="projectRiskHandleTeam.customerName"   prepend=" and ">
	                 item.customer_name  like concat('%',#projectRiskHandleTeam.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectRiskHandleTeam.projectCode" prepend=" and ">
	                 item.project_code  like concat('%',#projectRiskHandleTeam.projectCode#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectRiskHandleTeam.projectName" prepend=" and ">
	                 item.project_name  like concat('%',#projectRiskHandleTeam.projectName#,'%')
	            </isNotEmpty>
	             <isGreaterThan property="projectRiskHandleTeam.busiManagerId"  compareValue="0" prepend=" and ">
	                 item.busi_manager_id = #projectRiskHandleTeam.busiManagerId#
	            </isGreaterThan>
	             <isNotEmpty property="projectRiskHandleTeam.busiManagerName" prepend=" and ">
	                 item.busi_manager_name  like concat('%',#projectRiskHandleTeam.busiManagerName#,'%')
	            </isNotEmpty>

                <isGreaterThan property="projectRiskHandleTeam.chiefLeaderId"  compareValue="0" prepend=" and ">
	                   item.chief_leader_id = #projectRiskHandleTeam.chiefLeaderId#
	            </isGreaterThan>
	             <isNotEmpty property="projectRiskHandleTeam.chiefLeaderName" prepend=" and ">
	                item.chief_leader_name  like concat('%',#projectRiskHandleTeam.chiefLeaderName#,'%')
	            </isNotEmpty>

	            <isGreaterThan property="projectRiskHandleTeam.viceLeaderId"  compareValue="0" prepend=" and ">
	                   item.vice_leader_id = #projectRiskHandleTeam.viceLeaderId#
	            </isGreaterThan>
	             <isNotEmpty property="projectRiskHandleTeam.viceLeaderName" prepend=" and ">
	               item.vice_leader_name = #projectRiskHandleTeam.viceLeaderName#
	            </isNotEmpty>

				 <isGreaterThan property="projectRiskHandleTeam.createManId" compareValue="0"  prepend=" and ">
	               item.create_man_id = #projectRiskHandleTeam.createManId#
	             </isGreaterThan>

                 <isNotEmpty property="projectRiskHandleTeam.createManName" prepend=" and ">
                   item.create_man_name  like concat('%',#projectRiskHandleTeam.createManName#,'%')
	            </isNotEmpty>

                  <isNotEmpty property="startTimeBegin" prepend=" and ">
	            	<![CDATA[ item.raw_add_time >= #startTimeBegin#  ]]>
	             </isNotEmpty>
	             <isNotEmpty property="startTimeEnd" prepend=" and ">
	            	<![CDATA[ item.raw_add_time <= #startTimeEnd#  ]]>
	             </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
