<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_project_contract_item_invalid -->
    <resultMap id="RM-F-PROJECT-CONTRACT-ITEM-INVALID" class="com.born.fcs.pm.dal.dataobject.FProjectContractItemInvalidDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contractCode" column="contract_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contractName" column="contract_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="invalidReason" column="invalid_reason" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="withdrawAll" column="withdraw_all" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cnt" column="cnt" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFProjectContractItemInvalidDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.insert -->
    <insert id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-INSERT">
        INSERT /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-INSERT*/ INTO f_project_contract_item_invalid(id,form_id,project_code,project_name,customer_id,customer_name,contract_code,contract_name,invalid_reason,withdraw_all,cnt,remark,raw_add_time)

		   VALUES (#id#,#formId#,#projectCode#,#projectName#,#customerId#,#customerName#,#contractCode#,#contractName#,#invalidReason#,#withdrawAll#,#cnt#,#remark#,#rawAddTime#)
	        <selectKey  resultClass ="long"  keyProperty ="id" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.update -->
    <update id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-UPDATE*/ f_project_contract_item_invalid set form_id=#formId#, project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, contract_code=#contractCode#, contract_name=#contractName#, invalid_reason=#invalidReason#, withdraw_all=#withdrawAll#, cnt=#cnt#, remark=#remark# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.findById -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-ID" resultMap="RM-F-PROJECT-CONTRACT-ITEM-INVALID">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-ID*/ id, form_id, project_code, project_name, customer_id, customer_name, contract_code, contract_name, invalid_reason, withdraw_all, cnt, remark, raw_add_time, raw_update_time from f_project_contract_item_invalid where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.findByFormId -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-FORM-ID" resultMap="RM-F-PROJECT-CONTRACT-ITEM-INVALID">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-FORM-ID*/ id, form_id, project_code, project_name, customer_id, customer_name, contract_code, contract_name, invalid_reason, withdraw_all, cnt, remark, raw_add_time, raw_update_time from f_project_contract_item_invalid where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.findByContractCode -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-CONTRACT-CODE" resultMap="RM-F-PROJECT-CONTRACT-ITEM-INVALID">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-CONTRACT-CODE*/ id, form_id, project_code, project_name, customer_id, customer_name, contract_code, contract_name, invalid_reason, withdraw_all, cnt, remark, raw_add_time, raw_update_time from f_project_contract_item_invalid where (contract_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.deleteById -->
    <delete id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-DELETE-BY-ID*/ from f_project_contract_item_invalid where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.findByCondition -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-CONDITION" resultMap="RM-F-PROJECT-CONTRACT-ITEM-INVALID">
        SELECT /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-CONDITION*/  *  FROM f_project_contract_item_invalid
			WHERE 1=1 

			<dynamic>
			
			<isGreaterThan property="FProjectContractItemInvalid.id" compareValue="0" prepend=" and ">
				<![CDATA[ id = #FProjectContractItemInvalid.id# ]]>
			</isGreaterThan>

			<isNotEmpty property="FProjectContractItemInvalid.contractName"  prepend=" and ">
				<![CDATA[ contract_name = #FProjectContractItemInvalid.contractName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FProjectContractItemInvalid.contractCode"  prepend=" and ">
				<![CDATA[ contract_type = #FProjectContractItemInvalid.contractCode# ]]>
			</isNotEmpty>
			

			</dynamic>
			order by id desc
			<isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemInvalidDAO.findByConditionCount -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INVALID-FIND-BY-CONDITION-COUNT*/  count(*) totalCount  FROM f_project_contract_item_invalid
			WHERE 1=1
			
			<dynamic>
			
			<isGreaterThan property="FProjectContractItemInvalid.id" compareValue="0" prepend=" and ">
				<![CDATA[ id = #FProjectContractItemInvalid.id# ]]>
			</isGreaterThan>

			<isNotEmpty property="FProjectContractItemInvalid.contractName"  prepend=" and ">
				<![CDATA[ contract_name = #FProjectContractItemInvalid.contractName# ]]>
			</isNotEmpty>

			<isNotEmpty property="FProjectContractItemInvalid.contractCode"  prepend=" and ">
				<![CDATA[ contract_type = #FProjectContractItemInvalid.contractCode# ]]>
			</isNotEmpty>
			

			</dynamic>
    </select>

</sqlMap>
