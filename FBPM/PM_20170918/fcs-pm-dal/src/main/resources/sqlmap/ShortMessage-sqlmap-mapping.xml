<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table short_message -->
    <resultMap id="RM-SHORT-MESSAGE" class="com.born.fcs.pm.dal.dataobject.ShortMessageDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="messageSenderId" column="message_sender_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="messageSenderName" column="message_sender_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageSenderAccount" column="message_sender_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageReceiver" column="message_receiver" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageContent" column="message_content" javaType="java.lang.String" jdbcType="LONGTEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisShortMessageDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisShortMessageDAO.insert -->
    <insert id="MS-SHORT-MESSAGE-INSERT">
        INSERT /*MS-YRD-SHORT-MESSAGE-INSERT*/ INTO short_message
					(message_sender_id,
						message_sender_name,
						message_sender_account,
						message_receiver,
						message_content,
						raw_add_time) 
					VALUES (#messageSenderId#, #messageSenderName#, #messageSenderAccount#, #messageReceiver#, #messageContent#,
						#rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisShortMessageDAO.update -->
    <update id="MS-SHORT-MESSAGE-UPDATE">
    <![CDATA[
        update /*MS-YRD-SHORT-MESSAGE-UPDATE*/ short_message set message_sender_id=#messageSenderId#, message_sender_name=#messageSenderName#, message_sender_account=#messageSenderAccount#, message_receiver=#messageReceiver#, message_content=#messageContent# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisShortMessageDAO.findById -->
    <select id="MS-SHORT-MESSAGE-FIND-BY-ID" resultMap="RM-SHORT-MESSAGE">
    <![CDATA[
        select /*MS-YRD-SHORT-MESSAGE-FIND-BY-ID*/ * from short_message where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisShortMessageDAO.deleteById -->
    <delete id="MS-SHORT-MESSAGE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-SHORT-MESSAGE-DELETE-BY-ID*/ from short_message where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisShortMessageDAO.findByCondition -->
    <select id="MS-SHORT-MESSAGE-FIND-BY-CONDITION" resultMap="RM-SHORT-MESSAGE">
        SELECT /*MS-YRD-SHORT-MESSAGE-FIND-BY-CONDITION*/ * from short_message where 1=1
	        <dynamic>
	            <isGreaterThan property="shortMessage.id"  compareValue="0" prepend=" and ">
	                id = #shortMessage.id#
	            </isGreaterThan>
	            <isNotEmpty property="shortMessage.messageSenderName" prepend=" and ">
	               message_sender_name = #shortMessage.messageSenderName#
	            </isNotEmpty>
	         <isNotEmpty property="shortMessage.messageReceiver" prepend=" and ">
	               message_receiver = #shortMessage.messageReceiver#
	            </isNotEmpty>
	        <isNotEmpty property="startTimeBegin" prepend=" and ">
            	<![CDATA[ raw_add_time >= #startTimeBegin#  ]]>
             </isNotEmpty>
             <isNotEmpty property="startTimeEnd" prepend=" and ">
            	<![CDATA[ raw_add_time <= #startTimeEnd#  ]]>
             </isNotEmpty>
            <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
	         </dynamic>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisShortMessageDAO.findByConditionCount -->
    <select id="MS-SHORT-MESSAGE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-SHORT-MESSAGE-FIND-BY-CONDITION-COUNT*/  count(*)  FROM short_message  where 1=1
 	        <dynamic>
	            <isGreaterThan property="shortMessage.id"  compareValue="0" prepend=" and ">
	                id = #shortMessage.id#
	            </isGreaterThan>
	            <isNotEmpty property="shortMessage.messageSenderName" prepend=" and ">
	               message_sender_name = #shortMessage.messageSenderName#
	            </isNotEmpty>
	            
	            <isNotEmpty property="shortMessage.messageReceiver" prepend=" and ">
	               message_receiver = #shortMessage.messageReceiver#
	            </isNotEmpty>
				 <isNotEmpty property="beginMessageSendDate" prepend=" and ">
	            	<![CDATA[ raw_add_time >= #beginMessageSendDate#  ]]>
	             </isNotEmpty>
	             <isNotEmpty property="endMessageSendDate" prepend=" and ">
	            	<![CDATA[ raw_add_time <= #endMessageSendDate#  ]]>
	             </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
