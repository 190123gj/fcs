<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table db_table -->
    <resultMap id="RM-DB-TABLE" class="com.born.fcs.pm.dal.dataobject.DbTableDO">
        <result property="tableId" column="table_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="tableName" column="table_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectPhase" column="project_phase" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="tableForShort" column="table_for_short" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="className" column="class_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisDbTableDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisDbTableDAO.insert -->
    <insert id="MS-DB-TABLE-INSERT">
    <![CDATA[
        insert /*MS-YRD-DB-TABLE-INSERT*/ into db_table(table_id,table_name,project_phase,table_for_short,class_name,remark,is_delete,raw_add_time) values (#tableId#, #tableName#, #projectPhase#, #tableForShort#, #className#, #remark#, #isDelete#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisDbTableDAO.update -->
    <update id="MS-DB-TABLE-UPDATE">
    <![CDATA[
        update /*MS-YRD-DB-TABLE-UPDATE*/ db_table set table_name=#tableName#, project_phase=#projectPhase#, table_for_short=#tableForShort#, class_name=#className#, remark=#remark#, is_delete=#isDelete# where (table_id = #tableId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisDbTableDAO.findById -->
    <select id="MS-DB-TABLE-FIND-BY-ID" resultMap="RM-DB-TABLE">
    <![CDATA[
        select /*MS-YRD-DB-TABLE-FIND-BY-ID*/ * from db_table where ((table_id = #value#) AND (is_delete = "NO"))
    ]]>
    </select>

    <!-- mapped statement for IbatisDbTableDAO.deleteById -->
    <delete id="MS-DB-TABLE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-DB-TABLE-DELETE-BY-ID*/ from db_table where (table_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisDbTableDAO.findByName -->
    <select id="MS-DB-TABLE-FIND-BY-NAME" resultClass="long">
    <![CDATA[
        select /*MS-YRD-DB-TABLE-FIND-BY-NAME*/ COUNT(*) from db_table where ((table_name = #tableName#) AND (is_delete = "NO"))
    ]]>
    </select>

    <!-- mapped statement for IbatisDbTableDAO.findByConditionCount -->
    <select id="MS-DB-TABLE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-DB-TABLE-FIND-BY-CONDITION-COUNT*/  count(*) FROM db_table WHERE  1=1 and is_delete="NO"
	        <dynamic>
	            <isNotEmpty property="tableForShort" prepend=" and ">
	               table_for_short LIKE CONCAT('%',#tableForShort#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="tableName" prepend=" and ">
	               table_name = #tableName#
	            </isNotEmpty>
	            <isNotEmpty property="projectPhase" prepend=" and ">
	               project_phase = #projectPhase#
	            </isNotEmpty>
	        </dynamic>
    </select>

    <!-- mapped statement for IbatisDbTableDAO.findByCondition -->
    <select id="MS-DB-TABLE-FIND-BY-CONDITION" resultMap="RM-DB-TABLE">
        SELECT /*MS-YRD-DB-TABLE-FIND-BY-CONDITION*/ * from db_table where 1=1 and is_delete="NO"
	        <dynamic>
	            <isNotEmpty property="dbTable.tableForShort" prepend=" and ">
	               table_for_short LIKE CONCAT('%',#dbTable.tableForShort#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="dbTable.tableName" prepend=" and ">
	               table_name = #dbTable.tableName#
	            </isNotEmpty>
	            <isNotEmpty property="dbTable.projectPhase" prepend=" and ">
	               project_phase = #dbTable.projectPhase#
	            </isNotEmpty>
	        </dynamic>
	        <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
	         <isEmpty property="sortCol" prepend=" ">
	               ORDER by table_id DESC
	         </isEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

</sqlMap>
