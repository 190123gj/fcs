<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_project_underwriting -->
    <resultMap id="RM-F-PROJECT-UNDERWRITING" class="com.born.fcs.pm.dal.dataobject.FProjectUnderwritingDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectId" column="project_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="coInstitutionId" column="co_institution_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="coInstitutionName" column="co_institution_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="letterInstitutionId" column="letter_institution_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="letterInstitutionName" column="letter_institution_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="repaySource" column="repay_source" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="hasFinancialSupport" column="has_financial_support" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFProjectUnderwritingDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFProjectUnderwritingDAO.insert -->
    <insert id="MS-F-PROJECT-UNDERWRITING-INSERT">
    <![CDATA[
        insert /*MS-YRD-F-PROJECT-UNDERWRITING-INSERT*/ into f_project_underwriting(id,project_id,co_institution_id,co_institution_name,letter_institution_id,letter_institution_name,repay_source,has_financial_support,raw_add_time) values (#id#, #projectId#, #coInstitutionId#, #coInstitutionName#, #letterInstitutionId#, #letterInstitutionName#, #repaySource#, #hasFinancialSupport#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisFProjectUnderwritingDAO.update -->
    <update id="MS-F-PROJECT-UNDERWRITING-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-UNDERWRITING-UPDATE*/ f_project_underwriting set project_id=#projectId#, co_institution_id=#coInstitutionId#, co_institution_name=#coInstitutionName#, letter_institution_id=#letterInstitutionId#, letter_institution_name=#letterInstitutionName#, repay_source=#repaySource#, has_financial_support=#hasFinancialSupport# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectUnderwritingDAO.updateByProjectId -->
    <update id="MS-F-PROJECT-UNDERWRITING-UPDATE-BY-PROJECT-ID">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-UNDERWRITING-UPDATE-BY-PROJECT-ID*/ f_project_underwriting set co_institution_id=#coInstitutionId#, co_institution_name=#coInstitutionName#, letter_institution_id=#letterInstitutionId#, letter_institution_name=#letterInstitutionName#, repay_source=#repaySource#, has_financial_support=#hasFinancialSupport# where (project_id = #projectId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectUnderwritingDAO.findById -->
    <select id="MS-F-PROJECT-UNDERWRITING-FIND-BY-ID" resultMap="RM-F-PROJECT-UNDERWRITING">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-UNDERWRITING-FIND-BY-ID*/ * from f_project_underwriting where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectUnderwritingDAO.findByProjectId -->
    <select id="MS-F-PROJECT-UNDERWRITING-FIND-BY-PROJECT-ID" resultMap="RM-F-PROJECT-UNDERWRITING">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-UNDERWRITING-FIND-BY-PROJECT-ID*/ * from f_project_underwriting where (project_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectUnderwritingDAO.deleteById -->
    <delete id="MS-F-PROJECT-UNDERWRITING-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-UNDERWRITING-DELETE-BY-ID*/ from f_project_underwriting where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectUnderwritingDAO.deleteByProjectId -->
    <delete id="MS-F-PROJECT-UNDERWRITING-DELETE-BY-PROJECT-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-UNDERWRITING-DELETE-BY-PROJECT-ID*/ from f_project_underwriting where (project_id = #value#)
    ]]>
    </delete>

</sqlMap>
