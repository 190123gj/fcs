<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table project_extend_info -->
    <resultMap id="RM-PROJECT-EXTEND-INFO" class="com.born.fcs.pm.dal.dataobject.ProjectExtendInfoDO">
        <result property="extendId" column="extend_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="property" column="property" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="propertyName" column="property_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="propertyValue" column="property_value" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisProjectExtendInfoDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisProjectExtendInfoDAO.insert -->
    <insert id="MS-PROJECT-EXTEND-INFO-INSERT">
    <![CDATA[
        insert /*MS-YRD-PROJECT-EXTEND-INFO-INSERT*/ into project_extend_info(extend_id,form_id,project_code,property,property_name,property_value,remark,raw_add_time) values (#extendId#, #formId#, #projectCode#, #property#, #propertyName#, #propertyValue#, #remark#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.update -->
    <update id="MS-PROJECT-EXTEND-INFO-UPDATE">
    <![CDATA[
        update /*MS-YRD-PROJECT-EXTEND-INFO-UPDATE*/ project_extend_info set form_id=#formId#, project_code=#projectCode#, property=#property#, property_name=#propertyName#, property_value=#propertyValue#, remark=#remark# where (extend_id = #extendId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.findById -->
    <select id="MS-PROJECT-EXTEND-INFO-FIND-BY-ID" resultMap="RM-PROJECT-EXTEND-INFO">
    <![CDATA[
        select /*MS-YRD-PROJECT-EXTEND-INFO-FIND-BY-ID*/ * from project_extend_info where (extend_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.findByProjectCodeAndProperty -->
    <select id="MS-PROJECT-EXTEND-INFO-FIND-BY-PROJECT-CODE-AND-PROPERTY" resultMap="RM-PROJECT-EXTEND-INFO">
    <![CDATA[
        select /*MS-YRD-PROJECT-EXTEND-INFO-FIND-BY-PROJECT-CODE-AND-PROPERTY*/ * from project_extend_info where ((project_code = #projectCode#) AND (property = #property#))
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.findByFormId -->
    <select id="MS-PROJECT-EXTEND-INFO-FIND-BY-FORM-ID" resultMap="RM-PROJECT-EXTEND-INFO">
    <![CDATA[
        select /*MS-YRD-PROJECT-EXTEND-INFO-FIND-BY-FORM-ID*/ * from project_extend_info where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.deleteById -->
    <delete id="MS-PROJECT-EXTEND-INFO-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PROJECT-EXTEND-INFO-DELETE-BY-ID*/ from project_extend_info where (extend_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.deleteByProjectCode -->
    <delete id="MS-PROJECT-EXTEND-INFO-DELETE-BY-PROJECT-CODE">
    <![CDATA[
        delete /*MS-YRD-PROJECT-EXTEND-INFO-DELETE-BY-PROJECT-CODE*/ from project_extend_info where (project_code = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.deleteByProjectCodeAndProperty -->
    <delete id="MS-PROJECT-EXTEND-INFO-DELETE-BY-PROJECT-CODE-AND-PROPERTY">
    <![CDATA[
        delete /*MS-YRD-PROJECT-EXTEND-INFO-DELETE-BY-PROJECT-CODE-AND-PROPERTY*/ from project_extend_info where ((project_code = #projectCode#) AND (property = #property#))
    ]]>
    </delete>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.findByCondition -->
    <select id="MS-PROJECT-EXTEND-INFO-FIND-BY-CONDITION" resultMap="RM-PROJECT-EXTEND-INFO">
        SELECT /*MS-YRD-PROJECT-EXTEND-INFO-FIND-BY-CONDITION*/ * from project_extend_info p 
			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = p.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = p.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty>
	      where 1=1  	        
	        <dynamic>
	            <isGreaterThan property="projectExtendInfo.extendId"  compareValue="0" prepend=" and ">
	                p.extend_id = #projectExtendInfo.extendId#
	            </isGreaterThan>
	            <isGreaterThan property="projectExtendInfo.formId"  compareValue="0" prepend=" and ">
	                p.form_id = #projectExtendInfo.formId#
	            </isGreaterThan>
	             <isNotEmpty property="projectExtendInfo.projectCode" prepend=" and ">
	               p.project_code = #projectExtendInfo.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="projectExtendInfo.property" prepend=" and ">
	               p.property = #projectExtendInfo.property#
	            </isNotEmpty>
	             <isNotEmpty property="projectExtendInfo.propertyName" prepend=" and ">
	               p.property_name like concat('%',#projectExtendInfo.propertyName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectExtendInfo.remark" prepend=" and ">
	               p.remark like concat('%',#projectExtendInfo.remark#,'%')
	            </isNotEmpty>
	        </dynamic>                            				
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisProjectExtendInfoDAO.findByConditionCount -->
    <select id="MS-PROJECT-EXTEND-INFO-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PROJECT-EXTEND-INFO-FIND-BY-CONDITION-COUNT*/  count(*)  FROM project_extend_info p 
			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = p.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = p.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty>
	       where 1=1
	       	<dynamic>  	        
	            <isGreaterThan property="projectExtendInfo.extendId"  compareValue="0" prepend=" and ">
	                p.extend_id = #projectExtendInfo.extendId#
	            </isGreaterThan>
	            <isGreaterThan property="projectExtendInfo.formId"  compareValue="0" prepend=" and ">
	                p.form_id = #projectExtendInfo.formId#
	            </isGreaterThan>	            
	             <isNotEmpty property="projectExtendInfo.projectCode" prepend=" and ">
	               p.project_code = #projectExtendInfo.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="projectExtendInfo.property" prepend=" and ">
	               p.property = #projectExtendInfo.property#
	            </isNotEmpty>
	             <isNotEmpty property="projectExtendInfo.propertyName" prepend=" and ">
	               p.property_name like concat('%',#projectExtendInfo.propertyName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectExtendInfo.remark" prepend=" and ">
	               p.remark like concat('%',#projectExtendInfo.remark#,'%')
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
