<table sqlname="council_risk">
	<operation name="insert" paramtype="object">
		<sql>
			<![CDATA[
		INSERT INTO council_risk(council_id,council_code,council_type,council_place,council_subject,begin_time,customer_id,customer_name,project_code
		,project_name,apply_man_id,apply_man_name,council_status,participant_ids,participant_names,raw_add_time)
		 VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
			]]>
		</sql>

		<sqlmap>
			<![CDATA[
				 INSERT INTO council_risk(council_id,council_code,council_type,council_place,council_subject,begin_time,customer_id,customer_name,project_code
		,project_name,apply_man_id,apply_man_name,council_status,participant_ids,participant_names,raw_add_time)
		 VALUES (#councilId#,#councilCode#,#councilType#,#councilPlace#,#councilSubject#,#beginTime#,#customerId#,#customerName#,#projectCode#,#projectName#,#applyManId#,#applyManName#,#councilStatus#,#participantIds#,#participantNames#,#rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="councilId" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
				]]>
		</sqlmap>
	</operation>
	<operation name="update" paramtype="object">
		<sql>
				<![CDATA[

UPDATE council_risk SET council_code=?,council_type=?,council_place=?,council_subject=?,begin_time=?,customer_id=?,
customer_name=?,project_code=?,project_name=?,apply_man_id=?,apply_man_name=?,council_status=?,participant_ids=?,participant_names=? WHERE council_id=?
				]]>
		</sql>
	</operation>


	<operation name="findById">
		<sql>
			<![CDATA[
				SELECT  * FROM council_risk WHERE council_id=?
			]]>
		</sql>
	</operation>


	<operation name="deleteById">
		<sql>
			<![CDATA[
				DELETE FROM council_risk WHERE council_id=?
			]]>
		</sql>
	</operation>



	<operation name="findByCondition" paramtype="object" multiplicity="many">
		<extraparams>
			<param name="limitStart" javatype="long" />
			<param name="pageSize" javatype="long" />
			<param name="startTimeBegin" javatype="java.util.Date" />
			<param name="startTimeEnd" javatype="java.util.Date" />
			<param name="loginUserId" javatype="long" />
			<param name="deptIdList" javatype="java.util.List" />
			<param name="relatedRoleList" javatype="java.util.List" />
			<param name="sortCol" javatype="java.lang.String" />
			<param name="sortOrder" javatype="java.lang.String" />
		</extraparams>
		<sql>
			<![CDATA[
    SELECT  council_id ,council_code ,council_type ,council_place ,council_subject ,begin_time ,customer_id ,customer_name ,project_code ,project_name
            ,apply_man_id ,apply_man_name ,council_status ,participant_ids ,participant_names ,raw_add_time ,raw_update_time  FROM council_risk  risk WHERE 1=1
	        ]]>
		</sql>
		<sqlmap>
			<![CDATA[
	        SELECT  risk.*  FROM council_risk  risk
             	<isGreaterThan property="loginUserId"  compareValue="0">
					JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
						   WHERE user_id = #loginUserId# AND is_del = 'NO'
							<isNotEmpty property="relatedRoleList" prepend=" and " >
								user_type in
								<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
									#relatedRoleList[]#
								</iterate>
							</isNotEmpty>
						   GROUP BY project_code) r
					  ON r.project_code = risk.project_code AND r.rnum > 0
	      	</isGreaterThan>

	      	<isNotEmpty property="deptIdList">
	            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
	            	   WHERE is_del = 'NO' AND dept_id in
	            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
								#deptIdList[]#
							</iterate>
					   GROUP BY project_code) rl
    			  ON rl.project_code = risk.project_code AND rl.rnum > 0
	           </isNotEmpty>


             WHERE 1=1


	        <dynamic>



	            <isNotEmpty property="councilRisk.councilType"   prepend=" and ">
	                risk.council_type = #councilRisk.councilType#
	            </isNotEmpty>

	             <isNotEmpty property="councilRisk.councilStatus" prepend=" and ">
	               risk.council_status = #councilRisk.councilStatus#
	            </isNotEmpty>

	             <isNotEmpty property="councilRisk.projectCode" prepend=" and ">
	               risk.project_code = #councilRisk.projectCode#
	            </isNotEmpty>

	            <isNotEmpty property="startTimeBegin" prepend=" and ">
	            	${cdata-start} risk.begin_time >= #startTimeBegin#  ${cdata-end}
	             </isNotEmpty>
	             <isNotEmpty property="startTimeEnd" prepend=" and ">
	            	${cdata-start} risk.begin_time <= #startTimeEnd#  ${cdata-end}
	             </isNotEmpty>



	        </dynamic>

             <isEmpty property="sortCol" prepend=" order by ">
			    	risk.begin_time DESC
			</isEmpty>

			 <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>

            <isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>

	        ]]>
		</sqlmap>
	</operation>
	<operation name="findByConditionCount" paramtype="object" >
		<extraparams>
			<param name="startTimeBegin" javatype="java.util.Date" />
			<param name="startTimeEnd" javatype="java.util.Date" />
			<param name="loginUserId" javatype="long" />
			<param name="deptIdList" javatype="java.util.List" />
			<param name="relatedRoleList" javatype="java.util.List" />
		</extraparams>

		<sql>
			<![CDATA[
	       SELECT  count(*)  FROM council_risk risk WHERE  1=1
	        ]]>
		</sql>
		<sqlmap>
			<![CDATA[
            SELECT  count(*)  FROM council_risk risk
             <isGreaterThan property="loginUserId"  compareValue="0">
					JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
						   WHERE user_id = #loginUserId# AND is_del = 'NO'
							<isNotEmpty property="relatedRoleList" prepend=" and " >
								user_type in
								<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
									#relatedRoleList[]#
								</iterate>
							</isNotEmpty>
						   GROUP BY project_code) r
					  ON r.project_code = risk.project_code AND r.rnum > 0
	      	</isGreaterThan>

	      	<isNotEmpty property="deptIdList">
	            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
	            	   WHERE is_del = 'NO' AND dept_id in
	            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
								#deptIdList[]#
							</iterate>
					   GROUP BY project_code) rl
    			  ON rl.project_code = risk.project_code AND rl.rnum > 0
	           </isNotEmpty>

          WHERE   1=1
	        <dynamic>

	           <isNotEmpty property="councilRisk.councilType"   prepend=" and ">
	                risk.council_type = #councilRisk.councilType#
	            </isNotEmpty>

	             <isNotEmpty property="councilRisk.councilStatus" prepend=" and ">
	               risk.council_status = #councilRisk.councilStatus#
	            </isNotEmpty>

	            <isNotEmpty property="councilRisk.projectCode" prepend=" and ">
	               risk.project_code = #councilRisk.projectCode#
	            </isNotEmpty>

	             <isNotEmpty property="startTimeBegin" prepend=" and ">
	            	${cdata-start} risk.begin_time >= #startTimeBegin#  ${cdata-end}
	             </isNotEmpty>
	             <isNotEmpty property="startTimeEnd" prepend=" and ">
	            	${cdata-start} risk.begin_time <= #startTimeEnd#  ${cdata-end}
	             </isNotEmpty>


	        </dynamic>
	        ]]>
		</sqlmap>
	</operation>


</table>
