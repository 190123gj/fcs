<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table bank_trade -->
    <resultMap id="RM-BANK-TRADE" class="com.born.fcs.fm.dal.dataobject.BankTradeDO">
        <result property="tradeId" column="trade_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="tradeNo" column="trade_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="accountNo" column="account_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="outBizNo" column="out_biz_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="outBizDetailNo" column="out_biz_detail_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="fundDirection" column="fund_direction" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="tradeTime" column="trade_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisBankTradeDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisBankTradeDAO.insert -->
    <insert id="MS-BANK-TRADE-INSERT">
    <![CDATA[
        insert /*MS-YRD-BANK-TRADE-INSERT*/ into bank_trade(trade_id,trade_no,account_no,out_biz_no,out_biz_detail_no,fund_direction,amount,remark,trade_time,raw_add_time) values (#tradeId#, #tradeNo#, #accountNo#, #outBizNo#, #outBizDetailNo#, #fundDirection#, #amount.cent#, #remark#, #tradeTime#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisBankTradeDAO.update -->
    <update id="MS-BANK-TRADE-UPDATE">
    <![CDATA[
        update /*MS-YRD-BANK-TRADE-UPDATE*/ bank_trade set trade_no=#tradeNo#, account_no=#accountNo#, out_biz_no=#outBizNo#, out_biz_detail_no=#outBizDetailNo#, fund_direction=#fundDirection#, amount=#amount.cent#, remark=#remark#, trade_time=#tradeTime# where (trade_id = #tradeId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankTradeDAO.findById -->
    <select id="MS-BANK-TRADE-FIND-BY-ID" resultMap="RM-BANK-TRADE">
    <![CDATA[
        select /*MS-YRD-BANK-TRADE-FIND-BY-ID*/ * from bank_trade where (trade_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisBankTradeDAO.deleteById -->
    <delete id="MS-BANK-TRADE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-BANK-TRADE-DELETE-BY-ID*/ from bank_trade where (trade_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisBankTradeDAO.findByCondition -->
    <select id="MS-BANK-TRADE-FIND-BY-CONDITION" resultMap="RM-BANK-TRADE">
        SELECT /*MS-YRD-BANK-TRADE-FIND-BY-CONDITION*/ * from bank_trade where 1=1
	        <dynamic>
	            <isGreaterThan property="bankTrade.tradeId"  compareValue="0" prepend=" and ">
	                trade_id = #bankTrade.tradeId#
	            </isGreaterThan>	        
	            <isNotEmpty property="bankTrade.tradeNo" prepend=" and ">
	              	trade_no = #bankTrade.tradeNo#
	            </isNotEmpty>
	            <isNotEmpty property="bankTrade.accountNo" prepend=" and ">
	              	account_no = #bankTrade.accountNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankTrade.outBizNo" prepend=" and ">
	              	out_biz_no = #bankTrade.outBizNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankTrade.outBizDetailNo" prepend=" and ">
	              	out_biz_detail_no = #bankTrade.outBizDetailNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankTrade.fundDirection" prepend=" and ">
	              	fund_direction = #bankTrade.fundDirection#
	            </isNotEmpty>
			   <isNotEmpty property="tradeTimeStart" prepend=" and ">
	               <![CDATA[ trade_time >= #tradeTimeStart#]]>
               </isNotEmpty>                             				
 			   <isNotEmpty property="tradeTimeEnd" prepend=" and ">
	               <![CDATA[ trade_time <= #tradeTimeEnd#]]>
               </isNotEmpty>  	            
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisBankTradeDAO.findByConditionCount -->
    <select id="MS-BANK-TRADE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-BANK-TRADE-FIND-BY-CONDITION-COUNT*/  count(*)  FROM bank_trade WHERE  1=1 
	        <dynamic>
	            <isGreaterThan property="bankTrade.tradeId"  compareValue="0" prepend=" and ">
	                trade_id = #bankTrade.tradeId#
	            </isGreaterThan>	        
	            <isNotEmpty property="bankTrade.tradeNo" prepend=" and ">
	              	trade_no = #bankTrade.tradeNo#
	            </isNotEmpty>
	            <isNotEmpty property="bankTrade.accountNo" prepend=" and ">
	              	account_no = #bankTrade.accountNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankTrade.outBizNo" prepend=" and ">
	              	out_biz_no = #bankTrade.outBizNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankTrade.outBizDetailNo" prepend=" and ">
	              	out_biz_detail_no = #bankTrade.outBizDetailNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankTrade.fundDirection" prepend=" and ">
	              	fund_direction = #bankTrade.fundDirection#
	            </isNotEmpty>
			   <isNotEmpty property="tradeTimeStart" prepend=" and ">
	               <![CDATA[ trade_time >= #tradeTimeStart#]]>
               </isNotEmpty>                             				
 			   <isNotEmpty property="tradeTimeEnd" prepend=" and ">
	               <![CDATA[ trade_time <= #tradeTimeEnd#]]>
               </isNotEmpty>  	            
	        </dynamic>
    </select>

</sqlMap>
