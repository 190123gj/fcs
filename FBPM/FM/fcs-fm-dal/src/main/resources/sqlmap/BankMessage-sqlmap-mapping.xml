<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table bank_message -->
    <resultMap id="RM-BANK-MESSAGE" class="com.born.fcs.fm.dal.dataobject.BankMessageDO">
        <result property="bankId" column="bank_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="bankCode" column="bank_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankName" column="bank_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="accountType" column="account_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="accountNo" column="account_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="defaultCompanyAccount" column="default_company_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="defaultPersonalAccount" column="default_personal_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="depositAccount" column="deposit_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="accountName" column="account_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="atCode" column="at_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="atName" column="at_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="cashDepositCode" column="cash_deposit_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="deptId" column="dept_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="deptName" column="dept_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisBankMessageDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisBankMessageDAO.insert -->
    <insert id="MS-BANK-MESSAGE-INSERT">
    <![CDATA[
        insert /*MS-YRD-BANK-MESSAGE-INSERT*/ into bank_message(bank_id,bank_code,bank_name,account_type,account_no,default_company_account,default_personal_account,deposit_account,account_name,at_code,at_name,amount,cash_deposit_code,status,dept_id,dept_name,raw_add_time) values (#bankId#, #bankCode#, #bankName#, #accountType#, #accountNo#, #defaultCompanyAccount#, #defaultPersonalAccount#, #depositAccount#, #accountName#, #atCode#, #atName#, #amount.cent#, #cashDepositCode#, #status#, #deptId#, #deptName#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisBankMessageDAO.update -->
    <update id="MS-BANK-MESSAGE-UPDATE">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE*/ bank_message set bank_code=#bankCode#, bank_name=#bankName#, account_type=#accountType#, account_no=#accountNo#, default_company_account=#defaultCompanyAccount#, default_personal_account=#defaultPersonalAccount#, deposit_account=#depositAccount#, account_name=#accountName#, at_code=#atCode#, at_name=#atName#, amount=#amount.cent#, cash_deposit_code=#cashDepositCode#, status=#status#, dept_id=#deptId#, dept_name=#deptName# where (bank_id = #bankId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.updateByAccount -->
    <update id="MS-BANK-MESSAGE-UPDATE-BY-ACCOUNT">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE-BY-ACCOUNT*/ bank_message set bank_code=#bankCode#, bank_name=#bankName#, account_type=#accountType#, default_company_account=#defaultCompanyAccount#, default_personal_account=#defaultPersonalAccount#, deposit_account=#depositAccount#, account_name=#accountName#, at_code=#atCode#, at_name=#atName#, amount=#amount.cent#, cash_deposit_code=#cashDepositCode#, status=#status#, dept_id=#deptId#, dept_name=#deptName# where (account_no = #accountNo#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.updateStatus -->
    <update id="MS-BANK-MESSAGE-UPDATE-STATUS">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE-STATUS*/ bank_message set status=#status# where (bank_id = #bankId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.updateStatusByAccount -->
    <update id="MS-BANK-MESSAGE-UPDATE-STATUS-BY-ACCOUNT">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE-STATUS-BY-ACCOUNT*/ bank_message set status=#status# where (account_no = #accountNo#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.updateDefaultCompanyAccountByDeptId -->
    <update id="MS-BANK-MESSAGE-UPDATE-DEFAULT-COMPANY-ACCOUNT-BY-DEPT-ID">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE-DEFAULT-COMPANY-ACCOUNT-BY-DEPT-ID*/ bank_message set default_company_account=#defaultCompanyAccount# where (dept_id = #deptId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.updateDefaultPersonalAccountByDeptId -->
    <update id="MS-BANK-MESSAGE-UPDATE-DEFAULT-PERSONAL-ACCOUNT-BY-DEPT-ID">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE-DEFAULT-PERSONAL-ACCOUNT-BY-DEPT-ID*/ bank_message set default_personal_account=#defaultPersonalAccount# where (dept_id = #deptId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.updateDefaultCompanyAccount -->
    <update id="MS-BANK-MESSAGE-UPDATE-DEFAULT-COMPANY-ACCOUNT">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE-DEFAULT-COMPANY-ACCOUNT*/ bank_message set default_company_account=#value# where (1 = 1)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.updateDefaultPersonalAccount -->
    <update id="MS-BANK-MESSAGE-UPDATE-DEFAULT-PERSONAL-ACCOUNT">
    <![CDATA[
        update /*MS-YRD-BANK-MESSAGE-UPDATE-DEFAULT-PERSONAL-ACCOUNT*/ bank_message set default_personal_account=#value# where (1 = 1)
    ]]>
    </update>

    <!-- mapped statement for IbatisBankMessageDAO.findById -->
    <select id="MS-BANK-MESSAGE-FIND-BY-ID" resultMap="RM-BANK-MESSAGE">
    <![CDATA[
        select /*MS-YRD-BANK-MESSAGE-FIND-BY-ID*/ * from bank_message where (bank_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisBankMessageDAO.findByAccount -->
    <select id="MS-BANK-MESSAGE-FIND-BY-ACCOUNT" resultMap="RM-BANK-MESSAGE">
    <![CDATA[
        select /*MS-YRD-BANK-MESSAGE-FIND-BY-ACCOUNT*/ * from bank_message where (account_no = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisBankMessageDAO.findByAccountForUpdate -->
    <select id="MS-BANK-MESSAGE-FIND-BY-ACCOUNT-FOR-UPDATE" resultMap="RM-BANK-MESSAGE">
    <![CDATA[
        select /*MS-YRD-BANK-MESSAGE-FIND-BY-ACCOUNT-FOR-UPDATE*/ * from bank_message where (account_no = #value#) for update
    ]]>
    </select>

    <!-- mapped statement for IbatisBankMessageDAO.deleteById -->
    <delete id="MS-BANK-MESSAGE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-BANK-MESSAGE-DELETE-BY-ID*/ from bank_message where (bank_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisBankMessageDAO.deleteByAccount -->
    <delete id="MS-BANK-MESSAGE-DELETE-BY-ACCOUNT">
    <![CDATA[
        delete /*MS-YRD-BANK-MESSAGE-DELETE-BY-ACCOUNT*/ from bank_message where (account_no = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisBankMessageDAO.findByCondition -->
    <select id="MS-BANK-MESSAGE-FIND-BY-CONDITION" resultMap="RM-BANK-MESSAGE">
        SELECT /*MS-YRD-BANK-MESSAGE-FIND-BY-CONDITION*/ * from bank_message where 1=1
	        <dynamic>
	            <isGreaterThan property="bankMessage.bankId"  compareValue="0" prepend=" and ">
	                bank_id = #bankMessage.bankId#
	            </isGreaterThan>	      
	            
           <isGreaterThan property="bankMessage.deptId"  compareValue="0" prepend=" and ">
              dept_id = #bankMessage.deptId#
           </isGreaterThan>
	              	
	            <isNotEmpty property="bankMessage.accountNo" prepend=" and ">
	              	account_no = #bankMessage.accountNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.accountName" prepend=" and ">
	              	account_name like concat('%',#bankMessage.accountName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.bankName" prepend=" and ">
	              	bank_name like concat('%',#bankMessage.bankName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.accountType" prepend=" and ">
	              	account_type = #bankMessage.accountType#
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.status" prepend=" and ">
	              	status = #bankMessage.status#
	            </isNotEmpty>
	            
	             <isNotEmpty property="bankMessage.defaultCompanyAccount" prepend=" and ">
	              	default_company_account = #bankMessage.defaultCompanyAccount#
	            </isNotEmpty>
	            
	             <isNotEmpty property="bankMessage.defaultPersonalAccount" prepend=" and ">
	              	default_personal_account = #bankMessage.defaultPersonalAccount#
	            </isNotEmpty>
	            
	             <isNotEmpty property="bankMessage.depositAccount" prepend=" and ">
	              	deposit_account = #bankMessage.depositAccount#
	            </isNotEmpty>
	            
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisBankMessageDAO.findByConditionCount -->
    <select id="MS-BANK-MESSAGE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-BANK-MESSAGE-FIND-BY-CONDITION-COUNT*/  count(*)  FROM bank_message WHERE  1=1 
	        <dynamic>
	            <isGreaterThan property="bankMessage.bankId"  compareValue="0" prepend=" and ">
	                bank_id = #bankMessage.bankId#
	            </isGreaterThan>	              
	            
           <isGreaterThan property="bankMessage.deptId"  compareValue="0" prepend=" and ">
              dept_id = #bankMessage.deptId#
           </isGreaterThan>
	              		
	            <isNotEmpty property="bankMessage.accountNo" prepend=" and ">
	              	account_no = #bankMessage.accountNo#
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.accountName" prepend=" and ">
	              	account_name like concat('%',#bankMessage.accountName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.bankName" prepend=" and ">
	              	bank_name like concat('%',#bankMessage.bankName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.accountType" prepend=" and ">
	              	account_type = #bankMessage.accountType#
	            </isNotEmpty>
	             <isNotEmpty property="bankMessage.status" prepend=" and ">
	              	status = #bankMessage.status#
	            </isNotEmpty>
	            
	             <isNotEmpty property="bankMessage.defaultCompanyAccount" prepend=" and ">
	              	default_company_account = #bankMessage.defaultCompanyAccount#
	            </isNotEmpty>
	            
	             <isNotEmpty property="bankMessage.defaultPersonalAccount" prepend=" and ">
	              	default_personal_account = #bankMessage.defaultPersonalAccount#
	            </isNotEmpty>
	            
	              <isNotEmpty property="bankMessage.depositAccount" prepend=" and ">
	              	deposit_account = #bankMessage.depositAccount#
	            </isNotEmpty>
	                	            
	        </dynamic>
    </select>

</sqlMap>
