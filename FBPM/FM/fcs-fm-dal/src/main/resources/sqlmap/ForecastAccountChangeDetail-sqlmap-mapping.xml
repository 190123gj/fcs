<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table forecast_account_change_detail -->
    <resultMap id="RM-FORECAST-ACCOUNT-CHANGE-DETAIL" class="com.born.fcs.fm.dal.dataobject.ForecastAccountChangeDetailDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="forecastId" column="forecast_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userAccount" column="user_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="forecastMemo" column="forecast_memo" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="orignalDate" column="orignal_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="newDate" column="new_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="occurAmount" column="occur_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="originalAmount" column="original_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="amount" column="amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="isManual" column="is_manual" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisForecastAccountChangeDetailDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisForecastAccountChangeDetailDAO.insert -->
    <insert id="MS-FORECAST-ACCOUNT-CHANGE-DETAIL-INSERT">
    <![CDATA[
        insert /*MS-YRD-FORECAST-ACCOUNT-CHANGE-DETAIL-INSERT*/ into forecast_account_change_detail(id,forecast_id,user_id,user_account,user_name,forecast_memo,orignal_date,new_date,occur_amount,original_amount,amount,is_manual,raw_add_time) values (#id#, #forecastId#, #userId#, #userAccount#, #userName#, #forecastMemo#, #orignalDate#, #newDate#, #occurAmount.cent#, #originalAmount.cent#, #amount.cent#, #isManual#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisForecastAccountChangeDetailDAO.update -->
    <update id="MS-FORECAST-ACCOUNT-CHANGE-DETAIL-UPDATE">
    <![CDATA[
        update /*MS-YRD-FORECAST-ACCOUNT-CHANGE-DETAIL-UPDATE*/ forecast_account_change_detail set forecast_id=#forecastId#, user_id=#userId#, user_account=#userAccount#, user_name=#userName#, forecast_memo=#forecastMemo#, orignal_date=#orignalDate#, new_date=#newDate#, occur_amount=#occurAmount.cent#, original_amount=#originalAmount.cent#, amount=#amount.cent#, is_manual=#isManual# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisForecastAccountChangeDetailDAO.findById -->
    <select id="MS-FORECAST-ACCOUNT-CHANGE-DETAIL-FIND-BY-ID" resultMap="RM-FORECAST-ACCOUNT-CHANGE-DETAIL">
    <![CDATA[
        select /*MS-YRD-FORECAST-ACCOUNT-CHANGE-DETAIL-FIND-BY-ID*/ * from forecast_account_change_detail where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisForecastAccountChangeDetailDAO.findByForecastId -->
    <select id="MS-FORECAST-ACCOUNT-CHANGE-DETAIL-FIND-BY-FORECAST-ID" resultMap="RM-FORECAST-ACCOUNT-CHANGE-DETAIL">
    <![CDATA[
        select /*MS-YRD-FORECAST-ACCOUNT-CHANGE-DETAIL-FIND-BY-FORECAST-ID*/ * from forecast_account_change_detail where (forecast_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisForecastAccountChangeDetailDAO.deleteById -->
    <delete id="MS-FORECAST-ACCOUNT-CHANGE-DETAIL-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-FORECAST-ACCOUNT-CHANGE-DETAIL-DELETE-BY-ID*/ from forecast_account_change_detail where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisForecastAccountChangeDetailDAO.deleteByForecastId -->
    <delete id="MS-FORECAST-ACCOUNT-CHANGE-DETAIL-DELETE-BY-FORECAST-ID">
    <![CDATA[
        delete /*MS-YRD-FORECAST-ACCOUNT-CHANGE-DETAIL-DELETE-BY-FORECAST-ID*/ from forecast_account_change_detail where (forecast_id = #value#)
    ]]>
    </delete>

</sqlMap>
