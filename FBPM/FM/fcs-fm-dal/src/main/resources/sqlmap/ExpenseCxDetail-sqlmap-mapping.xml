<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table expense_cx_detail -->
    <resultMap id="RM-EXPENSE-CX-DETAIL" class="com.born.fcs.fm.dal.dataobject.ExpenseCxDetailDO">
        <result property="detailId" column="detail_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="expenseApplicationId" column="expense_application_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="fromApplicationId" column="from_application_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="fromDetailId" column="from_detail_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="categoryId" column="category_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="category" column="category" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="accountCode" column="account_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="accountName" column="account_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bank" column="bank" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankAccount" column="bank_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bxAmount" column="bx_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="fyAmount" column="fy_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="fpAmount" column="fp_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="xjAmount" column="xj_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="fromType" column="from_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def1" column="def1" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def2" column="def2" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def3" column="def3" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisExpenseCxDetailDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisExpenseCxDetailDAO.insert -->
    <insert id="MS-EXPENSE-CX-DETAIL-INSERT">
    <![CDATA[
        insert /*MS-YRD-EXPENSE-CX-DETAIL-INSERT*/ into expense_cx_detail(detail_id,expense_application_id,from_application_id,from_detail_id,category_id,category,account_code,account_name,bank,bank_account,bx_amount,fy_amount,fp_amount,xj_amount,from_type,def1,def2,def3,raw_add_time) values (#detailId#, #expenseApplicationId#, #fromApplicationId#, #fromDetailId#, #categoryId#, #category#, #accountCode#, #accountName#, #bank#, #bankAccount#, #bxAmount.cent#, #fyAmount.cent#, #fpAmount.cent#, #xjAmount.cent#, #fromType#, #def1#, #def2#, #def3#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisExpenseCxDetailDAO.update -->
    <update id="MS-EXPENSE-CX-DETAIL-UPDATE">
    <![CDATA[
        update /*MS-YRD-EXPENSE-CX-DETAIL-UPDATE*/ expense_cx_detail set expense_application_id=#expenseApplicationId#, from_application_id=#fromApplicationId#, from_detail_id=#fromDetailId#, category_id=#categoryId#, category=#category#, account_code=#accountCode#, account_name=#accountName#, bank=#bank#, bank_account=#bankAccount#, bx_amount=#bxAmount.cent#, fy_amount=#fyAmount.cent#, fp_amount=#fpAmount.cent#, xj_amount=#xjAmount.cent#, from_type=#fromType#, def1=#def1#, def2=#def2#, def3=#def3# where (detail_id = #detailId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisExpenseCxDetailDAO.findById -->
    <select id="MS-EXPENSE-CX-DETAIL-FIND-BY-ID" resultMap="RM-EXPENSE-CX-DETAIL">
    <![CDATA[
        select /*MS-YRD-EXPENSE-CX-DETAIL-FIND-BY-ID*/ detail_id, expense_application_id, from_application_id, from_detail_id, category_id, category, account_code, account_name, bank, bank_account, bx_amount, fy_amount, fp_amount, xj_amount, from_type, def1, def2, def3, raw_add_time, raw_update_time from expense_cx_detail where (detail_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisExpenseCxDetailDAO.deleteById -->
    <delete id="MS-EXPENSE-CX-DETAIL-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-EXPENSE-CX-DETAIL-DELETE-BY-ID*/ from expense_cx_detail where (detail_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisExpenseCxDetailDAO.findByExpenseId -->
    <select id="MS-EXPENSE-CX-DETAIL-FIND-BY-EXPENSE-ID" resultMap="RM-EXPENSE-CX-DETAIL">
        SELECT /*MS-YRD-EXPENSE-CX-DETAIL-FIND-BY-EXPENSE-ID*/  *  FROM expense_cx_detail WHERE 1=1 
	        <dynamic>
	            <isNotEmpty property="expenseId" prepend=" and ">
	              	expense_application_id = #expenseId#
	            </isNotEmpty>
	            <isNotEmpty property="fromApplicationId" prepend=" and ">
	              	from_application_id = #fromApplicationId#
	            </isNotEmpty>
	            <isNotEmpty property="fromDetailId" prepend=" and ">
	              	from_detail_id = #fromDetailId#
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
