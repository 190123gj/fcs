<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table account_amount_detail -->
    <resultMap id="RM-ACCOUNT-AMOUNT-DETAIL" class="com.born.fcs.fm.dal.dataobject.AccountAmountDetailDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="time" column="time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="startAmount" column="start_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="DECIMAL"/>
        <result property="forecastInAmount" column="forecast_in_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="DECIMAL"/>
        <result property="forecastOutAmount" column="forecast_out_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="DECIMAL"/>
        <result property="forecastLastAmount" column="forecast_last_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="DECIMAL"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisAccountAmountDetailDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisAccountAmountDetailDAO.insert -->
    <insert id="MS-ACCOUNT-AMOUNT-DETAIL-INSERT">
    <![CDATA[
        insert /*MS-YRD-ACCOUNT-AMOUNT-DETAIL-INSERT*/ into account_amount_detail(id,time,start_amount,forecast_in_amount,forecast_out_amount,forecast_last_amount,raw_add_time) values (#id#, #time#, #startAmount.cent#, #forecastInAmount.cent#, #forecastOutAmount.cent#, #forecastLastAmount.cent#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisAccountAmountDetailDAO.update -->
    <update id="MS-ACCOUNT-AMOUNT-DETAIL-UPDATE">
    <![CDATA[
        update /*MS-YRD-ACCOUNT-AMOUNT-DETAIL-UPDATE*/ account_amount_detail set time=#time#, start_amount=#startAmount.cent#, forecast_in_amount=#forecastInAmount.cent#, forecast_out_amount=#forecastOutAmount.cent#, forecast_last_amount=#forecastLastAmount.cent# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisAccountAmountDetailDAO.findById -->
    <select id="MS-ACCOUNT-AMOUNT-DETAIL-FIND-BY-ID" resultMap="RM-ACCOUNT-AMOUNT-DETAIL">
    <![CDATA[
        select /*MS-YRD-ACCOUNT-AMOUNT-DETAIL-FIND-BY-ID*/ * from account_amount_detail where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAccountAmountDetailDAO.deleteById -->
    <delete id="MS-ACCOUNT-AMOUNT-DETAIL-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-ACCOUNT-AMOUNT-DETAIL-DELETE-BY-ID*/ from account_amount_detail where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAccountAmountDetailDAO.deleteAll -->
    <delete id="MS-ACCOUNT-AMOUNT-DETAIL-DELETE-ALL">
    <![CDATA[
        delete /*MS-YRD-ACCOUNT-AMOUNT-DETAIL-DELETE-ALL*/ from account_amount_detail where (1 = 1)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAccountAmountDetailDAO.findByCondition -->
    <select id="MS-ACCOUNT-AMOUNT-DETAIL-FIND-BY-CONDITION" resultMap="RM-ACCOUNT-AMOUNT-DETAIL">
        SELECT /*MS-YRD-ACCOUNT-AMOUNT-DETAIL-FIND-BY-CONDITION*/ * from account_amount_detail where 1=1
	        <dynamic>
	             <isNotEmpty property="forecastTimeStart" prepend=" and ">
		               <![CDATA[ time >= #forecastTimeStart#]]>
	               </isNotEmpty>                             				
	 			   <isNotEmpty property="forecastTimeEnd" prepend=" and ">
		               <![CDATA[ time <= #forecastTimeEnd#]]>
	               </isNotEmpty>   
	            
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisAccountAmountDetailDAO.findByConditionCount -->
    <select id="MS-ACCOUNT-AMOUNT-DETAIL-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-ACCOUNT-AMOUNT-DETAIL-FIND-BY-CONDITION-COUNT*/  count(*)  FROM account_amount_detail WHERE  1=1 
	        <dynamic>
	             <isNotEmpty property="forecastTimeStart" prepend=" and ">
		               <![CDATA[ time >= #forecastTimeStart#]]>
	               </isNotEmpty>                             				
	 			   <isNotEmpty property="forecastTimeEnd" prepend=" and ">
		               <![CDATA[ time <= #forecastTimeEnd#]]>
	               </isNotEmpty>   
	                	            
	        </dynamic>
    </select>

</sqlMap>
