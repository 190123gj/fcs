<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table budget -->
    <resultMap id="RM-BUDGET" class="com.born.fcs.fm.dal.dataobject.BudgetDO">
        <result property="budgetId" column="budget_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="startTime" column="start_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="endTime" column="end_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="period" column="period" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="periodValue" column="period_value" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="budgetDeptId" column="budget_dept_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="budgetDeptName" column="budget_dept_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisBudgetDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisBudgetDAO.insert -->
    <insert id="MS-BUDGET-INSERT">
        insert /*MS-YRD-BUDGET-INSERT*/ into budget(budget_id,start_time,end_time,period,period_value,budget_dept_id,budget_dept_name,raw_add_time) values (#budgetId#, #startTime#, #endTime#, #period#, #periodValue#,#budgetDeptId#, #budgetDeptName#, #rawAddTime#)
   				<selectKey  resultClass ="long"  keyProperty ="budgetId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisBudgetDAO.update -->
    <update id="MS-BUDGET-UPDATE">
    <![CDATA[
        update /*MS-YRD-BUDGET-UPDATE*/ budget set start_time=#startTime#, end_time=#endTime#, period=#period#, period_value=#periodValue#, budget_dept_id=#budgetDeptId#, budget_dept_name=#budgetDeptName# where (budget_id = #budgetId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBudgetDAO.findById -->
    <select id="MS-BUDGET-FIND-BY-ID" resultMap="RM-BUDGET">
    <![CDATA[
        select /*MS-YRD-BUDGET-FIND-BY-ID*/ budget_id, start_time, end_time, period, period_value, budget_dept_id, budget_dept_name, raw_add_time, raw_update_time from budget where (budget_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisBudgetDAO.deleteById -->
    <delete id="MS-BUDGET-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-BUDGET-DELETE-BY-ID*/ from budget where (budget_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisBudgetDAO.findByCondition -->
    <select id="MS-BUDGET-FIND-BY-CONDITION" resultMap="RM-BUDGET">
        SELECT /*MS-YRD-BUDGET-FIND-BY-CONDITION*/ * FROM budget WHERE 1=1
	        <dynamic>
	            <isNotEmpty property="budgetDeptId" prepend=" and ">
	              	budget_dept_id = #budgetDeptId#
	            </isNotEmpty>
	            <isNotEmpty property="budgetDeptList" prepend=" and ">
				   	budget_dept_id in 
					<iterate property="budgetDeptList" open="(" close=")" conjunction=",">
						#budgetDeptList[]#
					</iterate>
				</isNotEmpty>
	            <isNotEmpty property="startTime" prepend=" and ">
	              	start_time >= #startTime#
	            </isNotEmpty>
	            <isNotEmpty property="endTime" prepend=" and ">
	              	#endTime# >= end_time
	            </isNotEmpty>
	            <isNotEmpty property="period" prepend=" and ">
	              	period = #period#
	            </isNotEmpty>
	            <isNotEmpty property="periodValue" prepend=" and ">
	              	period_value = #periodValue#
	            </isNotEmpty>
	        </dynamic>
	        <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisBudgetDAO.findByConditionCount -->
    <select id="MS-BUDGET-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-BUDGET-FIND-BY-CONDITION-COUNT*/ count(*) FROM budget WHERE 1=1
	        <dynamic>
	            <isNotEmpty property="budgetDeptId" prepend=" and ">
	              	budget_dept_id = #budgetDeptId#
	            </isNotEmpty>
	            <isNotEmpty property="budgetDeptList" prepend=" and ">
				   	budget_dept_id in 
					<iterate property="budgetDeptList" open="(" close=")" conjunction=",">
						#budgetDeptList[]#
					</iterate>
				</isNotEmpty>
	            <isNotEmpty property="startTime" prepend=" and ">
	              	start_time >= #startTime#
	            </isNotEmpty>
	            <isNotEmpty property="endTime" prepend=" and ">
	              	#endTime# >= end_time
	            </isNotEmpty>
	            <isNotEmpty property="period" prepend=" and ">
	              	period = #period#
	            </isNotEmpty>
	            <isNotEmpty property="periodValue" prepend=" and ">
	              	period_value = #periodValue#
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
