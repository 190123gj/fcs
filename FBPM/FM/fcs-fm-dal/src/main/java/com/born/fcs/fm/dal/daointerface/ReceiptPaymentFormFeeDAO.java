/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.fm.dal.daointerface;

// auto generated imports
import com.born.fcs.fm.dal.dataobject.ReceiptPaymentFormFeeDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>receipt_payment_form_fee</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/receipt_payment_form_fee.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ReceiptPaymentFormFeeDAO {
	/**
	 *  Insert one <tt>ReceiptPaymentFormFeeDO</tt> object to DB table <tt>receipt_payment_form_fee</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into receipt_payment_form_fee(id,source_id,fee_type,amount,account,occur_time,deposit_account,deposit_rate,deposit_time,deposit_period,period_unit,attach,remark,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param receiptPaymentFormFee
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ReceiptPaymentFormFeeDO receiptPaymentFormFee) throws DataAccessException;

	/**
	 *  Update DB table <tt>receipt_payment_form_fee</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update receipt_payment_form_fee set source_id=?, fee_type=?, amount=?, account=?, occur_time=?, deposit_account=?, deposit_rate=?, deposit_time=?, deposit_period=?, period_unit=?, attach=?, remark=? where (id = ?)</tt>
	 *
	 *	@param receiptPaymentFormFee
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ReceiptPaymentFormFeeDO receiptPaymentFormFee) throws DataAccessException;

	/**
	 *  Query DB table <tt>receipt_payment_form_fee</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from receipt_payment_form_fee t where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return ReceiptPaymentFormFeeDO
	 *	@throws DataAccessException
	 */	 
    public ReceiptPaymentFormFeeDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>receipt_payment_form_fee</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from receipt_payment_form_fee t where (source_id = ?)</tt>
	 *
	 *	@param sourceId
	 *	@return List<ReceiptPaymentFormFeeDO>
	 *	@throws DataAccessException
	 */	 
    public List<ReceiptPaymentFormFeeDO> findBySourceId(long sourceId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>receipt_payment_form_fee</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from receipt_payment_form_fee where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>receipt_payment_form_fee</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from receipt_payment_form_fee where (source_id = ?)</tt>
	 *
	 *	@param sourceId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteBySourceId(long sourceId) throws DataAccessException;

}