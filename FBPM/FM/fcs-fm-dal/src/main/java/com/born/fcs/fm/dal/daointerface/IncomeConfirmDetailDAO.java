/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.fm.dal.daointerface;

// auto generated imports
import com.born.fcs.fm.dal.dataobject.IncomeConfirmDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>income_confirm_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/income_confirm_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface IncomeConfirmDetailDAO {
	/**
	 *  Insert one <tt>IncomeConfirmDetailDO</tt> object to DB table <tt>income_confirm_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into income_confirm_detail(income_id,income_period,confirm_status,system_estimated_amount,income_confirmed_amount,is_confirmed,raw_add_time) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param incomeConfirmDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(IncomeConfirmDetailDO incomeConfirmDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>income_confirm_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update income_confirm_detail set income_id=?, income_period=?, confirm_status=?, system_estimated_amount=?, income_confirmed_amount=?, is_confirmed=? where (id = ?)</tt>
	 *
	 *	@param incomeConfirmDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(IncomeConfirmDetailDO incomeConfirmDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>income_confirm_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from income_confirm_detail where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return IncomeConfirmDetailDO
	 *	@throws DataAccessException
	 */	 
    public IncomeConfirmDetailDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>income_confirm_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from income_confirm_detail where (income_id = ?)</tt>
	 *
	 *	@param incomeId
	 *	@return List<IncomeConfirmDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<IncomeConfirmDetailDO> findByIncomeId(long incomeId) throws DataAccessException;

	/**
	 *  Query DB table <tt>income_confirm_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from income_confirm_detail where ((income_id = ?) AND (income_period = ?))</tt>
	 *
	 *	@param incomeId
	 *	@param incomePeriod
	 *	@return IncomeConfirmDetailDO
	 *	@throws DataAccessException
	 */	 
    public IncomeConfirmDetailDO findByIncomeIdAndIncomePeriod(long incomeId, String incomePeriod) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>income_confirm_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from income_confirm_detail where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>income_confirm_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from income_confirm_detail where (income_id = ?)</tt>
	 *
	 *	@param incomeId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByIncomeId(long incomeId) throws DataAccessException;

	/**
	 *  Query DB table <tt>income_confirm_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from income_confirm_detail where (1 = 1)</tt>
	 *
	 *	@param incomeConfirmDetail
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<IncomeConfirmDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<IncomeConfirmDetailDO> findByCondition(IncomeConfirmDetailDO incomeConfirmDetail, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException;

	/**
	 *  Query DB table <tt>income_confirm_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from income_confirm_detail where (1 = 1)</tt>
	 *
	 *	@param incomeConfirmDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(IncomeConfirmDetailDO incomeConfirmDetail) throws DataAccessException;

}