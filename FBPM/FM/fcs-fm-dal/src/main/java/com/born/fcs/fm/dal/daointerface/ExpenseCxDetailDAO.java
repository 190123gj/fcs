/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.fm.dal.daointerface;

// auto generated imports
import com.born.fcs.fm.dal.dataobject.ExpenseCxDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>expense_cx_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/expense_cx_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ExpenseCxDetailDAO {
	/**
	 *  Insert one <tt>ExpenseCxDetailDO</tt> object to DB table <tt>expense_cx_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into expense_cx_detail(detail_id,expense_application_id,from_application_id,from_detail_id,category_id,category,account_code,account_name,bank,bank_account,bx_amount,fy_amount,fp_amount,xj_amount,from_type,def1,def2,def3,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param expenseCxDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ExpenseCxDetailDO expenseCxDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>expense_cx_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update expense_cx_detail set expense_application_id=?, from_application_id=?, from_detail_id=?, category_id=?, category=?, account_code=?, account_name=?, bank=?, bank_account=?, bx_amount=?, fy_amount=?, fp_amount=?, xj_amount=?, from_type=?, def1=?, def2=?, def3=? where (detail_id = ?)</tt>
	 *
	 *	@param expenseCxDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ExpenseCxDetailDO expenseCxDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>expense_cx_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, expense_application_id, from_application_id, from_detail_id, category_id, category, account_code, account_name, bank, bank_account, bx_amount, fy_amount, fp_amount, xj_amount, from_type, def1, def2, def3, raw_add_time, raw_update_time from expense_cx_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return ExpenseCxDetailDO
	 *	@throws DataAccessException
	 */	 
    public ExpenseCxDetailDO findById(long detailId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>expense_cx_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from expense_cx_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long detailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>expense_cx_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from expense_cx_detail where (1 = 1)</tt>
	 *
	 *	@param expenseId
	 *	@param fromApplicationId
	 *	@param fromDetailId
	 *	@return List<ExpenseCxDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<ExpenseCxDetailDO> findByExpenseId(Long expenseId, Long fromApplicationId, Long fromDetailId) throws DataAccessException;

}