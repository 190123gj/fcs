<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table account_balance_data -->
    <resultMap id="RM-ACCOUNT-BALANCE-DATA" class="com.born.fcs.rm.dal.dataobject.AccountBalanceDataDO">
        <result property="accountBalanceDataId" column="account_balance_data_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="accountBalanceId" column="account_balance_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="code" column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="currency" column="currency" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="initialDebitBalance" column="initial_debit_balance" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="initialCreditBalance" column="initial_credit_balance" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="currentDebitAmount" column="current_debit_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="currentCreditAmount" column="current_credit_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="yearDebitAmount" column="year_debit_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="yearCreditAmount" column="year_credit_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="endingDebitBalance" column="ending_debit_balance" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="endingCreditBalance" column="ending_credit_balance" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="sortOrder" column="sort_order" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisAccountBalanceDataDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisAccountBalanceDataDAO.insert -->
    <insert id="MS-ACCOUNT-BALANCE-DATA-INSERT">
    <![CDATA[
        insert /*MS-YRD-ACCOUNT-BALANCE-DATA-INSERT*/ into account_balance_data(account_balance_id,code,name,currency,initial_debit_balance,initial_credit_balance,current_debit_amount,current_credit_amount,year_debit_amount,year_credit_amount,ending_debit_balance,ending_credit_balance,sort_order,raw_add_time) values (#accountBalanceId#, #code#, #name#, #currency#, #initialDebitBalance.cent#, #initialCreditBalance.cent#, #currentDebitAmount.cent#, #currentCreditAmount.cent#, #yearDebitAmount.cent#, #yearCreditAmount.cent#, #endingDebitBalance.cent#, #endingCreditBalance.cent#, #sortOrder#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisAccountBalanceDataDAO.update -->
    <update id="MS-ACCOUNT-BALANCE-DATA-UPDATE">
    <![CDATA[
        update /*MS-YRD-ACCOUNT-BALANCE-DATA-UPDATE*/ account_balance_data set account_balance_id=#accountBalanceId#, code=#code#, name=#name#, currency=#currency#, initial_debit_balance=#initialDebitBalance.cent#, initial_credit_balance=#initialCreditBalance.cent#, current_debit_amount=#currentDebitAmount.cent#, current_credit_amount=#currentCreditAmount.cent#, year_debit_amount=#yearDebitAmount.cent#, year_credit_amount=#yearCreditAmount.cent#, ending_debit_balance=#endingDebitBalance.cent#, ending_credit_balance=#endingCreditBalance.cent#, sort_order=#sortOrder# where (account_balance_data_id = #accountBalanceDataId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisAccountBalanceDataDAO.findById -->
    <select id="MS-ACCOUNT-BALANCE-DATA-FIND-BY-ID" resultMap="RM-ACCOUNT-BALANCE-DATA">
    <![CDATA[
        select /*MS-YRD-ACCOUNT-BALANCE-DATA-FIND-BY-ID*/ * from account_balance_data where (account_balance_data_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAccountBalanceDataDAO.findByAccountBalanceId -->
    <select id="MS-ACCOUNT-BALANCE-DATA-FIND-BY-ACCOUNT-BALANCE-ID" resultMap="RM-ACCOUNT-BALANCE-DATA">
    <![CDATA[
        select /*MS-YRD-ACCOUNT-BALANCE-DATA-FIND-BY-ACCOUNT-BALANCE-ID*/ * from account_balance_data where (account_balance_id = #value#) order by sort_order ASC
    ]]>
    </select>

    <!-- mapped statement for IbatisAccountBalanceDataDAO.deleteById -->
    <delete id="MS-ACCOUNT-BALANCE-DATA-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-ACCOUNT-BALANCE-DATA-DELETE-BY-ID*/ from account_balance_data where (account_balance_data_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAccountBalanceDataDAO.deleteByAccountBalanceId -->
    <delete id="MS-ACCOUNT-BALANCE-DATA-DELETE-BY-ACCOUNT-BALANCE-ID">
    <![CDATA[
        delete /*MS-YRD-ACCOUNT-BALANCE-DATA-DELETE-BY-ACCOUNT-BALANCE-ID*/ from account_balance_data where (account_balance_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAccountBalanceDataDAO.findByConditionCount -->
    <select id="MS-ACCOUNT-BALANCE-DATA-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-ACCOUNT-BALANCE-DATA-FIND-BY-CONDITION-COUNT*/  count(*) FROM account_balance_data WHERE  1=1
	        	<dynamic>
	          		<isGreaterThan property="accountBalanceData.accountBalanceId"  compareValue="0" prepend=" and ">
	              		account_balance_id = #accountBalance.accountBalanceId#
	       			</isGreaterThan>
					<isNotEmpty property="codeFull" prepend=" and ">
             			code = #codeFull#
          			</isNotEmpty>
					<isNotEmpty property="accountBalanceData.code" prepend=" and ">
             			code like CONCAT(#accountBalanceData.code#,'%')
          			</isNotEmpty>
					<isNotEmpty property="accountBalanceData.name" prepend=" and ">
             			name like CONCAT('%',#accountBalanceData.name#,'%')
          			</isNotEmpty>
		        </dynamic>
    </select>

    <!-- mapped statement for IbatisAccountBalanceDataDAO.findByCondition -->
    <select id="MS-ACCOUNT-BALANCE-DATA-FIND-BY-CONDITION" resultMap="RM-ACCOUNT-BALANCE-DATA">
        SELECT /*MS-YRD-ACCOUNT-BALANCE-DATA-FIND-BY-CONDITION*/ * from account_balance_data where 1=1
        	<dynamic>
          		<isGreaterThan property="accountBalanceData.accountBalanceId"  compareValue="0" prepend=" and ">
              		account_balance_id = #accountBalance.accountBalanceId#
       			</isGreaterThan>
				<isNotEmpty property="codeFull" prepend=" and ">
           			code = #codeFull#
       			</isNotEmpty>
				<isNotEmpty property="accountBalanceData.code" prepend=" and ">
           			code like CONCAT(#accountBalanceData.code#,'%')
        		</isNotEmpty>
				<isNotEmpty property="accountBalanceData.name" prepend=" and ">
           			name like CONCAT('%',#accountBalanceData.name#,'%')
        		</isNotEmpty>
	        </dynamic>
	        <isNotEmpty property="sortCol" prepend=" order by ">
            	$sortCol$
	            <isNotEmpty property="sortOrder">
	                $sortOrder$
	            </isNotEmpty>
            </isNotEmpty>
	        <isEmpty property="sortCol" prepend=" ">
	            ORDER BY sort_order ASC 
	        </isEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

</sqlMap>
