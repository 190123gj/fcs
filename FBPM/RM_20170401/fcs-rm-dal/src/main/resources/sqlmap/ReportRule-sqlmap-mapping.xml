<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table report_rule -->
    <resultMap id="RM-REPORT-RULE" class="com.born.fcs.rm.dal.dataobject.ReportRuleDO">
        <result property="reportId" column="report_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="reportName" column="report_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sqlStr" column="sql_str" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="accessRoles" column="access_roles" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="note" column="note" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter1Name" column="filter1_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter1Type" column="filter1_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter1Sql" column="filter1_sql" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter1Options" column="filter1_options" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter2Name" column="filter2_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter2Type" column="filter2_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter2Sql" column="filter2_sql" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter2Options" column="filter2_options" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter3Name" column="filter3_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter3Type" column="filter3_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter3Sql" column="filter3_sql" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter3Options" column="filter3_options" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter4Name" column="filter4_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter4Type" column="filter4_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter4Sql" column="filter4_sql" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter4Options" column="filter4_options" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter5Name" column="filter5_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter5Type" column="filter5_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter5Sql" column="filter5_sql" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter5Options" column="filter5_options" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter6Name" column="filter6_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter6Type" column="filter6_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter6Sql" column="filter6_sql" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filter6Options" column="filter6_options" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sortOrder" column="sort_order" javaType="int" jdbcType="INT" nullValue="0"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisReportRuleDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisReportRuleDAO.insert -->
    <insert id="MS-REPORT-RULE-INSERT">
        INSERT /*MS-YRD-REPORT-RULE-INSERT*/ INTO report_rule(report_id,report_name,sql_str,access_roles,filter1_name,filter1_type,filter1_sql,filter2_name,filter2_type,filter2_sql,filter3_name,filter3_type,filter3_sql,filter4_name,filter4_type,filter4_sql,filter5_name,filter5_type,filter5_sql,filter6_name,filter6_type,filter6_sql,filter1_options,filter2_options,filter3_options,filter4_options,filter5_options,filter6_options,note,sort_order) VALUES (#reportId#,#reportName#,#sqlStr#,#accessRoles#,#filter1Name#,#filter1Type#,#filter1Sql#,#filter2Name#,#filter2Type#,#filter2Sql#,#filter3Name#,#filter3Type#,#filter3Sql#,#filter4Name#,#filter4Type#,#filter4Sql#,#filter5Name#,#filter5Type#,#filter5Sql#,#filter6Name#,#filter6Type#,#filter6Sql#,#filter1Options#,#filter2Options#,#filter3Options#,#filter4Options#,#filter5Options#,#filter6Options#,#note#,#sortOrder#)
		    <selectKey  resultClass ="long"  keyProperty ="reportId" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisReportRuleDAO.update -->
    <update id="MS-REPORT-RULE-UPDATE">
    <![CDATA[
        update /*MS-YRD-REPORT-RULE-UPDATE*/ report_rule set report_name=#reportName#, sql_str=#sqlStr#, access_roles=#accessRoles#, filter1_name=#filter1Name#, filter1_type=#filter1Type#, filter1_sql=#filter1Sql#, filter2_name=#filter2Name#, filter2_type=#filter2Type#, filter2_sql=#filter2Sql#, filter3_name=#filter3Name#, filter3_type=#filter3Type#, filter3_sql=#filter3Sql#, filter4_name=#filter4Name#, filter4_type=#filter4Type#, filter4_sql=#filter4Sql#, filter5_name=#filter5Name#, filter5_type=#filter5Type#, filter5_sql=#filter5Sql#, filter6_name=#filter6Name#, filter6_type=#filter6Type#, filter6_sql=#filter6Sql#, filter1_options=#filter1Options#, filter2_options=#filter2Options#, filter3_options=#filter3Options#, filter4_options=#filter4Options#, filter5_options=#filter5Options#, filter6_options=#filter6Options#, note=#note#, sort_order=#sortOrder# where (report_id = #reportId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisReportRuleDAO.findById -->
    <select id="MS-REPORT-RULE-FIND-BY-ID" resultMap="RM-REPORT-RULE">
    <![CDATA[
        select /*MS-YRD-REPORT-RULE-FIND-BY-ID*/ report_id, report_name, sql_str, access_roles, filter1_name, filter1_type, filter1_sql, filter2_name, filter2_type, filter2_sql, filter3_name, filter3_type, filter3_sql, filter4_name, filter4_type, filter4_sql, filter5_name, filter5_type, filter5_sql, filter6_name, filter6_type, filter6_sql, filter1_options, filter2_options, filter3_options, filter4_options, filter5_options, filter6_options, note, sort_order from report_rule where (report_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisReportRuleDAO.deleteById -->
    <delete id="MS-REPORT-RULE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-REPORT-RULE-DELETE-BY-ID*/ from report_rule where (report_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisReportRuleDAO.findAllCount -->
    <select id="MS-REPORT-RULE-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-YRD-REPORT-RULE-FIND-ALL-COUNT*/ COUNT(*) from report_rule
    ]]>
    </select>

    <!-- mapped statement for IbatisReportRuleDAO.findByCondition -->
    <select id="MS-REPORT-RULE-FIND-BY-CONDITION" resultMap="RM-REPORT-RULE">
        SELECT /*MS-YRD-REPORT-RULE-FIND-BY-CONDITION*/  report_id ,report_name ,sql_str ,access_roles ,filter1_name ,filter1_type ,filter1_sql ,filter2_name ,filter2_type ,filter2_sql ,filter3_name ,filter3_type ,filter3_sql ,filter4_name ,filter4_type ,filter4_sql ,filter5_name ,filter5_type ,filter5_sql ,filter6_name ,filter6_type ,filter6_sql,filter1_options,filter2_options,filter3_options,filter4_options,filter5_options,filter6_options,note,sort_order  
			    FROM report_rule r  WHERE 1=1
				
			<dynamic>
			
			<isNotEmpty property="reportRule.reportName" prepend=" and ">
				<![CDATA[ r.report_name like concat('%',#reportRule.reportName#,'%')  ]]>
			</isNotEmpty>
		
			<isNotEmpty property="reportRule.note" prepend=" and ">
				<![CDATA[ r.note like concat('%',#reportRule.note#,'%')  ]]>
			</isNotEmpty>
		
			
			<isGreaterThan property="reportRule.reportId" compareValue="0" prepend=" and ">
				<![CDATA[ r.report_id = #reportRule.reportId#  ]]>
			</isGreaterThan>
			
			</dynamic>
				ORDER BY r.sort_order,r.report_name DESC
				LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisReportRuleDAO.findByConditionCount -->
    <select id="MS-REPORT-RULE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-REPORT-RULE-FIND-BY-CONDITION-COUNT*/  count(*) FROM report_rule r 
			WHERE 1=1
			
			<dynamic>
			
			<isNotEmpty property="reportName" prepend=" and ">
				<![CDATA[ r.report_name like concat('%',#reportName#,'%')  ]]>
			</isNotEmpty>
			
			<isNotEmpty property="note" prepend=" and ">
				<![CDATA[ r.note like concat('%',#note#,'%')  ]]>
			</isNotEmpty>
			
			<isGreaterThan property="reportId" compareValue="0" prepend=" and ">
				<![CDATA[ r.report_id = #reportId#  ]]>
			</isGreaterThan>
		
			</dynamic>
    </select>

</sqlMap>
