<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table account_balance -->
    <resultMap id="RM-ACCOUNT-BALANCE" class="com.born.fcs.rm.dal.dataobject.AccountBalanceDO">
        <result property="accountBalanceId" column="account_balance_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="reportYear" column="report_year" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="reportMonth" column="report_month" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="version" column="version" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="operatorId" column="operator_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="operatorAccount" column="operator_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="operatorName" column="operator_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisAccountBalanceDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisAccountBalanceDAO.insert -->
    <insert id="MS-ACCOUNT-BALANCE-INSERT">
        INSERT /*MS-YRD-ACCOUNT-BALANCE-INSERT*/ INTO account_balance(report_year,report_month,version,operator_id,operator_account,operator_name,status,raw_add_time)
		   		VALUES (#reportYear#,#reportMonth#,#version#,#operatorId#,#operatorAccount#,#operatorName#,#status#,#rawAddTime#)
	       		<selectKey  resultClass ="long"  keyProperty ="accountBalanceId" >
	          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisAccountBalanceDAO.update -->
    <update id="MS-ACCOUNT-BALANCE-UPDATE">
    <![CDATA[
        update /*MS-YRD-ACCOUNT-BALANCE-UPDATE*/ account_balance set report_year=#reportYear#, report_month=#reportMonth#, version=#version#, operator_id=#operatorId#, operator_account=#operatorAccount#, operator_name=#operatorName#, status=#status# where (account_balance_id = #accountBalanceId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisAccountBalanceDAO.updateToHis -->
    <update id="MS-ACCOUNT-BALANCE-UPDATE-TO-HIS">
    <![CDATA[
        update /*MS-YRD-ACCOUNT-BALANCE-UPDATE-TO-HIS*/ account_balance set version='HIS' where ((version = 'NOW') AND (report_year = #reportYear#) AND (report_month = #reportMonth#))
    ]]>
    </update>

    <!-- mapped statement for IbatisAccountBalanceDAO.findById -->
    <select id="MS-ACCOUNT-BALANCE-FIND-BY-ID" resultMap="RM-ACCOUNT-BALANCE">
    <![CDATA[
        select /*MS-YRD-ACCOUNT-BALANCE-FIND-BY-ID*/ * from account_balance where (account_balance_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisAccountBalanceDAO.deleteById -->
    <delete id="MS-ACCOUNT-BALANCE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-ACCOUNT-BALANCE-DELETE-BY-ID*/ from account_balance where (account_balance_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisAccountBalanceDAO.findByConditionCount -->
    <select id="MS-ACCOUNT-BALANCE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-ACCOUNT-BALANCE-FIND-BY-CONDITION-COUNT*/  count(*) FROM account_balance WHERE  1=1
	        	<dynamic>
	          		<isGreaterThan property="accountBalance.reportYear"  compareValue="0" prepend=" and ">
	              		report_year = #accountBalance.reportYear#
	       			</isGreaterThan>
	          		<isGreaterThan property="accountBalance.reportMonth"  compareValue="0" prepend=" and ">
	              		report_month = #accountBalance.reportMonth#
	       			</isGreaterThan>
					<isNotEmpty property="accountBalance.version" prepend=" and ">
             			version = #accountBalance.version#
          			</isNotEmpty>
	          		<isGreaterThan property="accountBalance.operatorId"  compareValue="0" prepend=" and ">
	              		operator_id = #accountBalance.operatorId#
	       			</isGreaterThan>
					<isNotEmpty property="accountBalance.operatorAccount" prepend=" and ">
             			operator_account like CONCAT('%',#accountBalance.operatorAccount#,'%')
          			</isNotEmpty>
					<isNotEmpty property="accountBalance.operatorName" prepend=" and ">
             			operator_name like CONCAT('%',#accountBalance.operatorName#,'%')
          			</isNotEmpty>
					<isNotEmpty property="startTime" prepend=" and ">
             			<![CDATA[ raw_add_time >= #startTime# ]]>
          			</isNotEmpty>
		           	<isNotEmpty property="endTime" prepend=" and ">
		             	<![CDATA[ raw_add_time <= #endTime# ]]>
		      		</isNotEmpty>
		        </dynamic>
    </select>

    <!-- mapped statement for IbatisAccountBalanceDAO.findByCondition -->
    <select id="MS-ACCOUNT-BALANCE-FIND-BY-CONDITION" resultMap="RM-ACCOUNT-BALANCE">
        SELECT /*MS-YRD-ACCOUNT-BALANCE-FIND-BY-CONDITION*/ * from account_balance where 1=1
    	     <dynamic>
          		<isGreaterThan property="accountBalance.reportYear"  compareValue="0" prepend=" and ">
              		report_year = #accountBalance.reportYear#
       			</isGreaterThan>
          		<isGreaterThan property="accountBalance.reportMonth"  compareValue="0" prepend=" and ">
              		report_month = #accountBalance.reportMonth#
       			</isGreaterThan>
				<isNotEmpty property="accountBalance.version" prepend=" and ">
            			version = #accountBalance.version#
         			</isNotEmpty>
          		<isGreaterThan property="accountBalance.operatorId"  compareValue="0" prepend=" and ">
              		operator_id = #accountBalance.operatorId#
       			</isGreaterThan>
				<isNotEmpty property="accountBalance.operatorAccount" prepend=" and ">
            			operator_account like CONCAT('%',#accountBalance.operatorAccount#,'%')
         			</isNotEmpty>
				<isNotEmpty property="accountBalance.operatorName" prepend=" and ">
            			operator_name like CONCAT('%',#accountBalance.operatorName#,'%')
         			</isNotEmpty>
				<isNotEmpty property="startTime" prepend=" and ">
            			<![CDATA[ raw_add_time >= #startTime# ]]>
         			</isNotEmpty>
	           	<isNotEmpty property="endTime" prepend=" and ">
	             	<![CDATA[ raw_add_time <= #endTime# ]]>
	      		</isNotEmpty>
	        </dynamic>
	        <isNotEmpty property="sortCol" prepend=" order by ">
            	$sortCol$
	            <isNotEmpty property="sortOrder">
	                $sortOrder$
	            </isNotEmpty>
            </isNotEmpty>
	        <isEmpty property="sortCol" prepend=" ">
	            ORDER BY account_balance_id DESC
	        </isEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

</sqlMap>
