/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.rm.dal.daointerface;

// auto generated imports
import com.born.fcs.rm.dal.dataobject.ProjectItemDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>project_item</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_item.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ProjectItemDAO {
	/**
	 *  Insert one <tt>ProjectItemDO</tt> object to DB table <tt>project_item</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_item(report_id,item_type,item_name,item_unit,amount,sort_order,item_time,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectItem
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectItemDO projectItem) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_item</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_item set report_id=?, item_type=?, item_name=?, item_unit=?, amount=?, sort_order=?, item_time=? where (project_item_id = ?)</tt>
	 *
	 *	@param projectItem
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectItemDO projectItem) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_item</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_item where (project_item_id = ?)</tt>
	 *
	 *	@param projectItemId
	 *	@return ProjectItemDO
	 *	@throws DataAccessException
	 */	 
    public ProjectItemDO findById(long projectItemId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_item</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_item where (report_id = ?) order by sort_order ASC</tt>
	 *
	 *	@param reportId
	 *	@return List<ProjectItemDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectItemDO> findByReportId(long reportId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_item</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_item where (project_item_id = ?)</tt>
	 *
	 *	@param projectItemId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long projectItemId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_item</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_item where (report_id = ?)</tt>
	 *
	 *	@param reportId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReportId(long reportId) throws DataAccessException;

}