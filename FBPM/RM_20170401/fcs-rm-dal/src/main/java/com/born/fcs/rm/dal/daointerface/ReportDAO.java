/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.rm.dal.daointerface;

// auto generated imports
import com.born.fcs.rm.dal.dataobject.ReportDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>report</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/report.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ReportDAO {
	/**
	 *  Insert one <tt>ReportDO</tt> object to DB table <tt>report</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into report(report_name,report_type,report_code,report_year,report_month,version,operator_id,operator_account,operator_name,dept_id,dept_code,dept_name,dept_path,dept_path_name,content,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param report
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ReportDO report) throws DataAccessException;

	/**
	 *  Update DB table <tt>report</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update report set report_name=?, report_type=?, report_code=?, report_year=?, report_month=?, version=?, operator_id=?, operator_account=?, operator_name=?, dept_id=?, dept_code=?, dept_name=?, dept_path=?, dept_path_name=?, content=? where (report_id = ?)</tt>
	 *
	 *	@param report
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ReportDO report) throws DataAccessException;

	/**
	 *  Update DB table <tt>report</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update report set version='HIS' where ((version = 'NOW') AND (report_code = ?) AND (report_year = ?) AND (report_month = ?))</tt>
	 *
	 *	@param report
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateToHis(ReportDO report) throws DataAccessException;

	/**
	 *  Update DB table <tt>report</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update report set version='HIS' where ((version = 'NOW') AND (report_code = ?) AND (report_year = ?) AND (report_month = ?) AND (report_name = ?))</tt>
	 *
	 *	@param report
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateBaseDataToHis(ReportDO report) throws DataAccessException;

	/**
	 *  Query DB table <tt>report</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from report where (report_id = ?)</tt>
	 *
	 *	@param reportId
	 *	@return ReportDO
	 *	@throws DataAccessException
	 */	 
    public ReportDO findById(long reportId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>report</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from report where (report_id = ?)</tt>
	 *
	 *	@param reportId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long reportId) throws DataAccessException;

	/**
	 *  Query DB table <tt>report</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from report where (1 = 1)</tt>
	 *
	 *	@param report
	 *	@param startTime
	 *	@param endTime
	 *	@param reportTypeList
	 *	@param deptList
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ReportDO report, String startTime, String endTime, List reportTypeList, List deptList) throws DataAccessException;

	/**
	 *  Query DB table <tt>report</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from report where (1 = 1)</tt>
	 *
	 *	@param report
	 *	@param startTime
	 *	@param endTime
	 *	@param reportTypeList
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param deptList
	 *	@return List<ReportDO>
	 *	@throws DataAccessException
	 */	 
    public List<ReportDO> findByCondition(ReportDO report, String startTime, String endTime, List reportTypeList, long limitStart, long pageSize, String sortCol, String sortOrder, List deptList) throws DataAccessException;

}