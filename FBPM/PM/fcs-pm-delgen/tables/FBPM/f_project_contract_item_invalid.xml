<table sqlname="f_project_contract_item_invalid">

	<operation name="insert" paramtype="object">
		<sql>
			<![CDATA[
INSERT INTO f_project_contract_item_invalid(id,form_id,project_code,project_name,customer_id,customer_name,contract_code,contract_name,invalid_reason,withdraw_all,cnt,file_url,contract_scan_url,remark,raw_add_time) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)


			]]>
		</sql>
		
		<sqlmap>
			<![CDATA[
			INSERT INTO f_project_contract_item_invalid(id,form_id,project_code,project_name,customer_id,customer_name,contract_code,contract_name,invalid_reason,withdraw_all,cnt,file_url,contract_scan_url,remark,raw_add_time)

		   VALUES (#id#,#formId#,#projectCode#,#projectName#,#customerId#,#customerName#,#contractCode#,#contractName#,#invalidReason#,#withdrawAll#,#cnt#,#fileUrl#,#contractScanUrl#,#remark#,#rawAddTime#)
	        <selectKey  resultClass ="long"  keyProperty ="id" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	      	</selectKey>
				]]>
		</sqlmap>
		
	</operation>
	
	<operation name="update" paramtype="object">
		<sql>
			<![CDATA[
		UPDATE f_project_contract_item_invalid SET form_id=?,project_code=?,project_name=?,customer_id=?,customer_name=?,contract_code=?,contract_name=?,invalid_reason=?,withdraw_all=?,cnt=?,file_url=?,contract_scan_url=?,remark=? WHERE id=?


			]]>
		</sql>
	</operation>
	
	
	<operation name="findById">
		<sql>
			<![CDATA[
		SELECT  id ,form_id ,project_code ,project_name ,customer_id ,customer_name ,contract_code ,contract_name,invalid_reason ,withdraw_all ,cnt,file_url,contract_scan_url,remark ,raw_add_time ,raw_update_time  FROM f_project_contract_item_invalid WHERE id=?

			]]>
		</sql>
	</operation>
	
	<operation name="findByFormId"  >
		<sql>
			<![CDATA[
	SELECT  id ,form_id ,project_code ,project_name ,customer_id ,customer_name ,contract_code ,contract_name,invalid_reason ,withdraw_all ,cnt,file_url,contract_scan_url,remark ,raw_add_time ,raw_update_time  FROM f_project_contract_item_invalid WHERE form_id=?

			]]>
		</sql>
	</operation>

	<operation name="findByContractCode">
		<sql>
			<![CDATA[
		SELECT  id ,form_id ,project_code ,project_name ,customer_id ,customer_name ,contract_code ,contract_name,invalid_reason ,withdraw_all ,cnt,file_url,contract_scan_url,remark ,raw_add_time ,raw_update_time  FROM f_project_contract_item_invalid WHERE contract_code=?

			]]>
		</sql>
	</operation>
	
	
	
	
	<operation name="deleteById">
		<sql>
			<![CDATA[
				DELETE FROM f_project_contract_item_invalid WHERE id=?
			]]>
		</sql>
	</operation>
	

	
	<operation name="findByCondition" paramtype="object" multiplicity="many">
		<extraparams>
			<param name="limitStart" javatype="long" />
			<param name="pageSize" javatype="long" />
		</extraparams>
		<sql>
				<![CDATA[
				SELECT  *  FROM f_project_contract_item_invalid WHERE id=?
				]]>
		</sql>
		<sqlmap>
			<![CDATA[
			SELECT  *  FROM f_project_contract_item_invalid
			WHERE 1=1 

			<dynamic>
			
			<isGreaterThan property="FProjectContractItemInvalid.id" compareValue="0" prepend=" and ">
				${cdata-start} id = #FProjectContractItemInvalid.id# ${cdata-end}
			</isGreaterThan>

			<isNotEmpty property="FProjectContractItemInvalid.contractName"  prepend=" and ">
				${cdata-start} contract_name = #FProjectContractItemInvalid.contractName# ${cdata-end}
			</isNotEmpty>
			
			<isNotEmpty property="FProjectContractItemInvalid.contractCode"  prepend=" and ">
				${cdata-start} contract_type = #FProjectContractItemInvalid.contractCode# ${cdata-end}
			</isNotEmpty>
			

			</dynamic>
			order by id desc
			<isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
			]]>	
		</sqlmap>
	</operation>


	<operation name="findByConditionCount" paramtype="object"  resultClass="long">
	
		<sql>
				<![CDATA[
				SELECT  *  FROM f_project_contract_item_invalid WHERE id=?
				]]>
		</sql>
		<sqlmap>
			<![CDATA[
			SELECT  count(*) totalCount  FROM f_project_contract_item_invalid
			WHERE 1=1
			
			<dynamic>
			
			<isGreaterThan property="FProjectContractItemInvalid.id" compareValue="0" prepend=" and ">
				${cdata-start} id = #FProjectContractItemInvalid.id# ${cdata-end}
			</isGreaterThan>

			<isNotEmpty property="FProjectContractItemInvalid.contractName"  prepend=" and ">
				${cdata-start} contract_name = #FProjectContractItemInvalid.contractName# ${cdata-end}
			</isNotEmpty>

			<isNotEmpty property="FProjectContractItemInvalid.contractCode"  prepend=" and ">
				${cdata-start} contract_type = #FProjectContractItemInvalid.contractCode# ${cdata-end}
			</isNotEmpty>
			

			</dynamic>
			
			]]>	
		</sqlmap>
	</operation>
	
</table>
