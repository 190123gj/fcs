<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table recover_project_track_record -->
    <resultMap id="RM-RECOVER-PROJECT-TRACK-RECORD" class="com.born.fcs.pm.dal.dataobject.RecoverProjectTrackRecordDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="recoverId" column="recover_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="recordType" column="record_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="recordTypeName" column="record_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="proposeTime" column="propose_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="payTime" column="pay_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="judgeTime" column="judge_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="sealUpDate" column="seal_up_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="sealUpObject" column="seal_up_object" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="sealUpStartTime" column="seal_up_start_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="sealUpEndTime" column="seal_up_end_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="sealUpRemark" column="seal_up_remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="detainDate" column="detain_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="detainObject" column="detain_object" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="detainStartTime" column="detain_start_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="detainEndTime" column="detain_end_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="detainRemark" column="detain_remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="freezeDate" column="freeze_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="freezeObject" column="freeze_object" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="freezeStartTime" column="freeze_start_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="freezeEndTime" column="freeze_end_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="freezeRemark" column="freeze_remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisRecoverProjectTrackRecordDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisRecoverProjectTrackRecordDAO.insert -->
    <insert id="MS-RECOVER-PROJECT-TRACK-RECORD-INSERT">
    <![CDATA[
        insert /*MS-YRD-RECOVER-PROJECT-TRACK-RECORD-INSERT*/ into recover_project_track_record(recover_id,record_type,record_type_name,propose_time,pay_time,judge_time,seal_up_date,seal_up_object,seal_up_start_time,seal_up_end_time,seal_up_remark,detain_date,detain_object,detain_start_time,detain_end_time,detain_remark,freeze_date,freeze_object,freeze_start_time,freeze_end_time,freeze_remark,raw_add_time) values (#recoverId#, #recordType#, #recordTypeName#, #proposeTime#, #payTime#, #judgeTime#, #sealUpDate#, #sealUpObject#, #sealUpStartTime#, #sealUpEndTime#, #sealUpRemark#, #detainDate#, #detainObject#, #detainStartTime#, #detainEndTime#, #detainRemark#, #freezeDate#, #freezeObject#, #freezeStartTime#, #freezeEndTime#, #freezeRemark#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisRecoverProjectTrackRecordDAO.update -->
    <update id="MS-RECOVER-PROJECT-TRACK-RECORD-UPDATE">
    <![CDATA[
        update /*MS-YRD-RECOVER-PROJECT-TRACK-RECORD-UPDATE*/ recover_project_track_record set recover_id=#recoverId#, record_type=#recordType#, record_type_name=#recordTypeName#, propose_time=#proposeTime#, pay_time=#payTime#, judge_time=#judgeTime#, seal_up_date=#sealUpDate#, seal_up_object=#sealUpObject#, seal_up_start_time=#sealUpStartTime#, seal_up_end_time=#sealUpEndTime#, seal_up_remark=#sealUpRemark#, detain_date=#detainDate#, detain_object=#detainObject#, detain_start_time=#detainStartTime#, detain_end_time=#detainEndTime#, detain_remark=#detainRemark#, freeze_date=#freezeDate#, freeze_object=#freezeObject#, freeze_start_time=#freezeStartTime#, freeze_end_time=#freezeEndTime#, freeze_remark=#freezeRemark# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisRecoverProjectTrackRecordDAO.findById -->
    <select id="MS-RECOVER-PROJECT-TRACK-RECORD-FIND-BY-ID" resultMap="RM-RECOVER-PROJECT-TRACK-RECORD">
    <![CDATA[
        select /*MS-YRD-RECOVER-PROJECT-TRACK-RECORD-FIND-BY-ID*/ * from recover_project_track_record where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisRecoverProjectTrackRecordDAO.findByRecoverId -->
    <select id="MS-RECOVER-PROJECT-TRACK-RECORD-FIND-BY-RECOVER-ID" resultMap="RM-RECOVER-PROJECT-TRACK-RECORD">
    <![CDATA[
        select /*MS-YRD-RECOVER-PROJECT-TRACK-RECORD-FIND-BY-RECOVER-ID*/ * from recover_project_track_record where (recover_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisRecoverProjectTrackRecordDAO.deleteById -->
    <delete id="MS-RECOVER-PROJECT-TRACK-RECORD-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-RECOVER-PROJECT-TRACK-RECORD-DELETE-BY-ID*/ from recover_project_track_record where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisRecoverProjectTrackRecordDAO.deleteByRecoverId -->
    <delete id="MS-RECOVER-PROJECT-TRACK-RECORD-DELETE-BY-RECOVER-ID">
    <![CDATA[
        delete /*MS-YRD-RECOVER-PROJECT-TRACK-RECORD-DELETE-BY-RECOVER-ID*/ from recover_project_track_record where (recover_id = #value#)
    ]]>
    </delete>

</sqlMap>
