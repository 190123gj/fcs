<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table council_risk -->
    <resultMap id="RM-COUNCIL-RISK" class="com.born.fcs.pm.dal.dataobject.CouncilRiskDO">
        <result property="councilId" column="council_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="councilCode" column="council_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="councilType" column="council_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="councilPlace" column="council_place" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="councilSubject" column="council_subject" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="beginTime" column="begin_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="applyManId" column="apply_man_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="applyManName" column="apply_man_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="councilStatus" column="council_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="participantIds" column="participant_ids" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="participantNames" column="participant_names" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCouncilRiskDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCouncilRiskDAO.insert -->
    <insert id="MS-COUNCIL-RISK-INSERT">
        INSERT /*MS-YRD-COUNCIL-RISK-INSERT*/ INTO council_risk(council_id,council_code,council_type,council_place,council_subject,begin_time,customer_id,customer_name,project_code
		,project_name,apply_man_id,apply_man_name,council_status,participant_ids,participant_names,raw_add_time)
		 VALUES (#councilId#,#councilCode#,#councilType#,#councilPlace#,#councilSubject#,#beginTime#,#customerId#,#customerName#,#projectCode#,#projectName#,#applyManId#,#applyManName#,#councilStatus#,#participantIds#,#participantNames#,#rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="councilId" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisCouncilRiskDAO.update -->
    <update id="MS-COUNCIL-RISK-UPDATE">
    <![CDATA[
        update /*MS-YRD-COUNCIL-RISK-UPDATE*/ council_risk set council_code=#councilCode#, council_type=#councilType#, council_place=#councilPlace#, council_subject=#councilSubject#, begin_time=#beginTime#, customer_id=#customerId#, customer_name=#customerName#, project_code=#projectCode#, project_name=#projectName#, apply_man_id=#applyManId#, apply_man_name=#applyManName#, council_status=#councilStatus#, participant_ids=#participantIds#, participant_names=#participantNames# where (council_id = #councilId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCouncilRiskDAO.findById -->
    <select id="MS-COUNCIL-RISK-FIND-BY-ID" resultMap="RM-COUNCIL-RISK">
    <![CDATA[
        select /*MS-YRD-COUNCIL-RISK-FIND-BY-ID*/ * from council_risk where (council_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCouncilRiskDAO.deleteById -->
    <delete id="MS-COUNCIL-RISK-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-COUNCIL-RISK-DELETE-BY-ID*/ from council_risk where (council_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCouncilRiskDAO.findByCondition -->
    <select id="MS-COUNCIL-RISK-FIND-BY-CONDITION" resultMap="RM-COUNCIL-RISK">
        SELECT /*MS-YRD-COUNCIL-RISK-FIND-BY-CONDITION*/  risk.*  FROM council_risk  risk
             	<isGreaterThan property="loginUserId"  compareValue="0">
					JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
						   WHERE user_id = #loginUserId# AND is_del = 'NO'
							<isNotEmpty property="relatedRoleList" prepend=" and " >
								user_type in
								<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
									#relatedRoleList[]#
								</iterate>
							</isNotEmpty>
						   GROUP BY project_code) r
					  ON r.project_code = risk.project_code AND r.rnum > 0
	      	</isGreaterThan>

	      	<isNotEmpty property="deptIdList">
	            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
	            	   WHERE is_del = 'NO' AND dept_id in
	            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
								#deptIdList[]#
							</iterate>
					   GROUP BY project_code) rl
    			  ON rl.project_code = risk.project_code AND rl.rnum > 0
	           </isNotEmpty>


             WHERE 1=1


	        <dynamic>



	            <isNotEmpty property="councilRisk.councilType"   prepend=" and ">
	                risk.council_type = #councilRisk.councilType#
	            </isNotEmpty>

	             <isNotEmpty property="councilRisk.councilStatus" prepend=" and ">
	               risk.council_status = #councilRisk.councilStatus#
	            </isNotEmpty>

	             <isNotEmpty property="councilRisk.projectCode" prepend=" and ">
	               risk.project_code = #councilRisk.projectCode#
	            </isNotEmpty>

	            <isNotEmpty property="startTimeBegin" prepend=" and ">
	            	<![CDATA[ risk.begin_time >= #startTimeBegin#  ]]>
	             </isNotEmpty>
	             <isNotEmpty property="startTimeEnd" prepend=" and ">
	            	<![CDATA[ risk.begin_time <= #startTimeEnd#  ]]>
	             </isNotEmpty>



	        </dynamic>

             <isEmpty property="sortCol" prepend=" order by ">
			    	risk.begin_time DESC
			</isEmpty>

			 <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>

            <isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisCouncilRiskDAO.findByConditionCount -->
    <select id="MS-COUNCIL-RISK-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-COUNCIL-RISK-FIND-BY-CONDITION-COUNT*/  count(*)  FROM council_risk risk
             <isGreaterThan property="loginUserId"  compareValue="0">
					JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
						   WHERE user_id = #loginUserId# AND is_del = 'NO'
							<isNotEmpty property="relatedRoleList" prepend=" and " >
								user_type in
								<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
									#relatedRoleList[]#
								</iterate>
							</isNotEmpty>
						   GROUP BY project_code) r
					  ON r.project_code = risk.project_code AND r.rnum > 0
	      	</isGreaterThan>

	      	<isNotEmpty property="deptIdList">
	            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
	            	   WHERE is_del = 'NO' AND dept_id in
	            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
								#deptIdList[]#
							</iterate>
					   GROUP BY project_code) rl
    			  ON rl.project_code = risk.project_code AND rl.rnum > 0
	           </isNotEmpty>

          WHERE   1=1
	        <dynamic>

	           <isNotEmpty property="councilRisk.councilType"   prepend=" and ">
	                risk.council_type = #councilRisk.councilType#
	            </isNotEmpty>

	             <isNotEmpty property="councilRisk.councilStatus" prepend=" and ">
	               risk.council_status = #councilRisk.councilStatus#
	            </isNotEmpty>

	            <isNotEmpty property="councilRisk.projectCode" prepend=" and ">
	               risk.project_code = #councilRisk.projectCode#
	            </isNotEmpty>

	             <isNotEmpty property="startTimeBegin" prepend=" and ">
	            	<![CDATA[ risk.begin_time >= #startTimeBegin#  ]]>
	             </isNotEmpty>
	             <isNotEmpty property="startTimeEnd" prepend=" and ">
	            	<![CDATA[ risk.begin_time <= #startTimeEnd#  ]]>
	             </isNotEmpty>


	        </dynamic>
    </select>

</sqlMap>
