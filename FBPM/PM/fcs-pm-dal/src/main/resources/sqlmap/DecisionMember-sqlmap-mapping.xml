<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table decision_member -->
    <resultMap id="RM-DECISION-MEMBER" class="com.born.fcs.pm.dal.dataobject.DecisionMemberDO">
        <result property="memberId" column="member_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="institutionId" column="institution_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userAccount" column="user_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sortOrder" column="sort_order" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisDecisionMemberDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisDecisionMemberDAO.insert -->
    <insert id="MS-DECISION-MEMBER-INSERT">
    <![CDATA[
        insert /*MS-YRD-DECISION-MEMBER-INSERT*/ into decision_member(institution_id,user_id,user_account,user_name,sort_order,delete_mark,raw_add_time) values (#institutionId#, #userId#, #userAccount#, #userName#, #sortOrder#,#deleteMark#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisDecisionMemberDAO.update -->
    <update id="MS-DECISION-MEMBER-UPDATE">
    <![CDATA[
        update /*MS-YRD-DECISION-MEMBER-UPDATE*/ decision_member set institution_id=#institutionId#, user_id=#userId#, user_account=#userAccount#, user_name=#userName#, sort_order=#sortOrder#,delete_mark=#deleteMark# where (member_id = #memberId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisDecisionMemberDAO.findById -->
    <select id="MS-DECISION-MEMBER-FIND-BY-ID" resultMap="RM-DECISION-MEMBER">
    <![CDATA[
        select /*MS-YRD-DECISION-MEMBER-FIND-BY-ID*/ * from decision_member where (member_id = #value# and delete_mark="0" )
    ]]>
    </select>
     <!-- mapped statement for IbatisDecisionMemberDAO.findByInstitutionIdAndUserId -->
    <select id="MS-DECISION-MEMBER-FIND-BY-INSTITUTION-USERID" resultMap="RM-DECISION-MEMBER">
    <![CDATA[
        select /*MS-YRD-DECISION-MEMBER-FIND-BY-ID*/ * from decision_member where (institution_id = #institutionId# and delete_mark="0" and user_id=#userId# )
    ]]>
    </select>

    <!-- mapped statement for IbatisDecisionMemberDAO.findCountByInstitutionId -->
    <select id="MS-DECISION-MEMBER-FIND-COUNT-BY-INSTITUTION-ID" resultClass="long">
    <![CDATA[
        select /*MS-YRD-DECISION-MEMBER-FIND-COUNT-BY-INSTITUTION-ID*/ COUNT(*) from decision_member where (institution_id = #value# and delete_mark="0")
    ]]>
    </select>

    <!-- mapped statement for IbatisDecisionMemberDAO.findDecisionMemberByUserName -->
    <select id="MS-DECISION-MEMBER-FIND-DECISION-MEMBER-BY-USER-NAME" resultMap="RM-DECISION-MEMBER">
    <![CDATA[
        select /*MS-YRD-DECISION-MEMBER-FIND-DECISION-MEMBER-BY-USER-NAME*/ * from decision_member where (user_name = #value# and delete_mark="0")
    ]]>
    </select>

    <!-- mapped statement for IbatisDecisionMemberDAO.findListByInstitutionId -->
    <select id="MS-DECISION-MEMBER-FIND-LIST-BY-INSTITUTION-ID" resultMap="RM-DECISION-MEMBER">
    <![CDATA[
        select /*MS-YRD-DECISION-MEMBER-FIND-LIST-BY-INSTITUTION-ID*/ * from decision_member where (institution_id = #value# and delete_mark="0")
    ]]>
    </select>

    <!-- mapped statement for IbatisDecisionMemberDAO.deleteById -->
    <delete id="MS-DECISION-MEMBER-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-DECISION-MEMBER-DELETE-BY-ID*/ from decision_member where (member_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisDecisionMemberDAO.deleteByInstitutionId -->
    <delete id="MS-DECISION-MEMBER-DELETE-BY-INSTITUTION-ID">
    <![CDATA[
        delete /*MS-YRD-DECISION-MEMBER-DELETE-BY-INSTITUTION-ID*/ from decision_member where (institution_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisDecisionMemberDAO.findByConditionCount -->
    <select id="MS-DECISION-MEMBER-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-DECISION-MEMBER-FIND-BY-CONDITION-COUNT*/  count(*)  FROM decision_member WHERE  1=1 and delete_mark="0"
	        <dynamic>
	            <isNotEmpty property="decisionMember.institutionId" prepend=" and ">
	               institution_id LIKE CONCAT('%',#decisionMember.institutionId#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.userId" prepend=" and ">
	               user_id LIKE CONCAT('%',#decisionMember.userId#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.userAccount" prepend=" and ">
	               user_account LIKE CONCAT('%',#decisionMember.userAccount#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.userName" prepend=" and ">
	               user_name LIKE CONCAT('%',#decisionMember.userName#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.sortOrder" prepend=" and ">
	               sort_order LIKE CONCAT('%',#decisionMember.sortOrder#,'%')
	            </isNotEmpty>
	        </dynamic>
    </select>

    <!-- mapped statement for IbatisDecisionMemberDAO.findByCondition -->
    <select id="MS-DECISION-MEMBER-FIND-BY-CONDITION" resultMap="RM-DECISION-MEMBER">
        SELECT /*MS-YRD-DECISION-MEMBER-FIND-BY-CONDITION*/ * from decision_member where 1=1 and delete_mark="0"
	        <dynamic>
	            <isNotEmpty property="decisionMember.institutionId" prepend=" and ">
	               institution_id LIKE CONCAT('%',#decisionMember.institutionId#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.userId" prepend=" and ">
	               user_id LIKE CONCAT('%',#decisionMember.userId#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.userAccount" prepend=" and ">
	               user_account LIKE CONCAT('%',#decisionMember.userAccount#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.userName" prepend=" and ">
	               user_name LIKE CONCAT('%',#decisionMember.userName#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionMember.sortOrder" prepend=" and ">
	               sort_order LIKE CONCAT('%',#decisionMember.sortOrder#,'%')
	            </isNotEmpty>
	        </dynamic>
            ORDER by member_id DESC 
            LIMIT #limitStart#,#pageSize#;
    </select>

</sqlMap>
