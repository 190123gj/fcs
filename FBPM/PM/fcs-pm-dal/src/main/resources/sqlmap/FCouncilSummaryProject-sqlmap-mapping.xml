<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_council_summary_project -->
    <resultMap id="RM-F-COUNCIL-SUMMARY-PROJECT" class="com.born.fcs.pm.dal.dataobject.FCouncilSummaryProjectDO">
        <result property="spId" column="sp_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="spCode" column="sp_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="summaryId" column="summary_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="riskHandleId" column="risk_handle_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerType" column="customer_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiType" column="busi_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiTypeName" column="busi_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="loanPurpose" column="loan_purpose" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="isMaximumAmount" column="is_maximum_amount" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="timeLimit" column="time_limit" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="timeUnit" column="time_unit" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="timeRemark" column="time_remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="repayWay" column="repay_way" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isRepayEqual" column="is_repay_equal" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="chargeWay" column="charge_way" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="chargePhase" column="charge_phase" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="chargeRemark" column="charge_remark" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="isChargeEveryBeginning" column="is_charge_every_beginning" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="voteResult" column="vote_result" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="voteResultDesc" column="vote_result_desc" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="oneVoteDown" column="one_vote_down" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="oneVoteDownMark" column="one_vote_down_mark" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="oneVoteDownTime" column="one_vote_down_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="isDel" column="is_del" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="approvalTime" column="approval_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="other" column="other" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="belongToNc" column="belong_to_nc" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="overview" column="overview" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="otherRemark" column="other_remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFCouncilSummaryProjectDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.insert -->
    <insert id="MS-F-COUNCIL-SUMMARY-PROJECT-INSERT">
        INSERT /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-INSERT*/ INTO f_council_summary_project
							(sp_id,sp_code,summary_id,risk_handle_id,project_code,project_name,customer_id,customer_name,customer_type,busi_type,busi_type_name,loan_purpose,amount,time_limit,time_unit,time_remark,repay_way,is_repay_equal,charge_way,charge_remark,is_charge_every_beginning,charge_phase,vote_result,vote_result_desc,remark,is_maximum_amount,is_del,one_vote_down,one_vote_down_mark,one_vote_down_time,approval_time,other,belong_to_nc,overview,other_remark,raw_add_time) 
					VALUES  (#spId#,#spCode#,#summaryId#,#riskHandleId#,#projectCode#,#projectName#,#customerId#,#customerName#,#customerType#,#busiType#,#busiTypeName#,#loanPurpose#,#amount#,#timeLimit#,#timeUnit#,#timeRemark#,#repayWay#,#isRepayEqual#,#chargeWay#,#chargeRemark#,#isChargeEveryBeginning#,#chargePhase#,#voteResult#,#voteResultDesc#,#remark#,#isMaximumAmount#,#isDel#,#oneVoteDown#,#oneVoteDownMark#,#oneVoteDownTime#,#approvalTime#,#other#,#belongToNc#,#overview#,#otherRemark#,SYSDATE())
				<selectKey  resultClass ="long"  keyProperty ="spId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.update -->
    <update id="MS-F-COUNCIL-SUMMARY-PROJECT-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-UPDATE*/ f_council_summary_project set sp_code=#spCode#, summary_id=#summaryId#, risk_handle_id=#riskHandleId#, project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, customer_type=#customerType#, busi_type=#busiType#, busi_type_name=#busiTypeName#, loan_purpose=#loanPurpose#, amount=#amount.cent#, time_limit=#timeLimit#, time_unit=#timeUnit#, time_remark=#timeRemark#, repay_way=#repayWay#, is_repay_equal=#isRepayEqual#, charge_way=#chargeWay#, charge_remark=#chargeRemark#, is_charge_every_beginning=#isChargeEveryBeginning#, charge_phase=#chargePhase#, vote_result=#voteResult#, vote_result_desc=#voteResultDesc#, remark=#remark#, is_maximum_amount=#isMaximumAmount#, is_del=#isDel#, one_vote_down=#oneVoteDown#, one_vote_down_mark=#oneVoteDownMark#, one_vote_down_time=#oneVoteDownTime#, approval_time=#approvalTime#, other=#other#, belong_to_nc=#belongToNc#, overview=#overview#, other_remark=#otherRemark# where (sp_id = #spId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.findById -->
    <select id="MS-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-ID" resultMap="RM-F-COUNCIL-SUMMARY-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-ID*/ * from f_council_summary_project where (sp_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.findByProjectCode -->
    <select id="MS-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-PROJECT-CODE" resultMap="RM-F-COUNCIL-SUMMARY-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-PROJECT-CODE*/ * from f_council_summary_project where ((project_code = #value#) AND (vote_result = 'END_PASS')) order by sp_id DESC
    ]]>
    </select>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.findBySpCode -->
    <select id="MS-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-SP-CODE" resultMap="RM-F-COUNCIL-SUMMARY-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-SP-CODE*/ * from f_council_summary_project where (sp_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.findBySummaryId -->
    <select id="MS-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-SUMMARY-ID" resultMap="RM-F-COUNCIL-SUMMARY-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-SUMMARY-ID*/ * from f_council_summary_project where (summary_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.findByRiskHandleId -->
    <select id="MS-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-RISK-HANDLE-ID" resultMap="RM-F-COUNCIL-SUMMARY-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-RISK-HANDLE-ID*/ * from f_council_summary_project where (risk_handle_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.deleteById -->
    <delete id="MS-F-COUNCIL-SUMMARY-PROJECT-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-DELETE-BY-ID*/ from f_council_summary_project where (sp_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.deleteBySummaryId -->
    <delete id="MS-F-COUNCIL-SUMMARY-PROJECT-DELETE-BY-SUMMARY-ID">
    <![CDATA[
        delete /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-DELETE-BY-SUMMARY-ID*/ from f_council_summary_project where (summary_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.deleteByByRiskHandleId -->
    <delete id="MS-F-COUNCIL-SUMMARY-PROJECT-DELETE-BY-BY-RISK-HANDLE-ID">
    <![CDATA[
        delete /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-DELETE-BY-BY-RISK-HANDLE-ID*/ from f_council_summary_project where (risk_handle_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.findByCondition -->
    <select id="MS-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-CONDITION" resultMap="RM-F-COUNCIL-SUMMARY-PROJECT">
        SELECT /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-CONDITION*/ * from f_council_summary_project p 
		         <isGreaterThan property="project.busiManagerId"  compareValue="0">
		            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
		            	   WHERE user_id = #project.busiManagerId# AND user_type = 'BUSI_MANAGER' GROUP BY project_code) r1
	    			  ON r1.project_code = p.project_code AND r1.rnum > 0
		      	</isGreaterThan>
		         <isGreaterThan property="project.busiManagerbId"  compareValue="0">
		            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
		            	   WHERE user_id = #project.busiManagerbId# AND user_type = 'BUSI_MANAGERB' GROUP BY project_code) r2
	    			  ON r2.project_code = p.project_code AND r2.rnum > 0
		      	</isGreaterThan>	      	
			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = p.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = p.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty>    	         
	         where 1=1
 	        <dynamic>
	            <isGreaterThan property="FCouncilSummaryProject.spId"  compareValue="0" prepend=" and ">
	                p.sp_id = #FCouncilSummaryProject.spId#
	            </isGreaterThan>
	            <isGreaterThan property="FCouncilSummaryProject.summaryId"  compareValue="0" prepend=" and ">
	                p.summary_id = #FCouncilSummaryProject.summaryId#
	            </isGreaterThan>
	            <isGreaterThan property="FCouncilSummaryProject.customerId"  compareValue="0" prepend=" and ">
	                p.customer_id = #FCouncilSummaryProject.customerId#
	            </isGreaterThan>
	             <isNotEmpty property="FCouncilSummaryProject.customerName" prepend=" and ">
	               p.customer_name like concat('%',#FCouncilSummaryProject.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.spCode" prepend=" and ">
	               p.sp_code = #FCouncilSummaryProject.spCode#
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.projectCode" prepend=" and ">
	               p.project_code = #FCouncilSummaryProject.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.busiType" prepend=" and ">
	               p.busi_type = #FCouncilSummaryProject.busiType#
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.isDel" prepend=" and ">
	               p.is_del = #FCouncilSummaryProject.isDel#
	            </isNotEmpty>	            
	             <isNotEmpty property="FCouncilSummaryProject.oneVoteDown" prepend=" and ">
	               p.one_vote_down = #FCouncilSummaryProject.oneVoteDown#
	            </isNotEmpty>	            
	             <isNotEmpty property="FCouncilSummaryProject.voteResult" prepend=" and ">
	               p.vote_result = #FCouncilSummaryProject.voteResult#
	            </isNotEmpty>	            
	             <isNotEmpty property="isApproval" prepend=" and ">
	              	 <isEqual property="isApproval" compareValue="IS">
	              		  p.vote_result = 'END_PASS' AND p.one_vote_down = 'NO' AND p.approval_time is not null
	              		  AND p.project_code not like 'F%'
	              	</isEqual>
	              	 <isEqual property="isApproval" compareValue="NO">
	              		  (p.vote_result != 'END_PASS' OR p.one_vote_down = 'YES')
	              		  AND p.project_code not like 'F%'
	              	</isEqual>
	            </isNotEmpty>	            
	             <isNotEmpty property="isApprovalList" prepend=" and ">
	              	 <isEqual property="isApprovalList" compareValue="IS">
	              		  (p.vote_result = 'END_PASS' OR p.vote_result = 'END_NOPASS') 
	              		  AND p.approval_time is not null
	              		  AND p.project_code not like 'F%'
	              	</isEqual>
	            </isNotEmpty>	            
	             <isNotEmpty property="startTime" prepend=" and ">
	               <![CDATA[ p.approval_time >= #startTime# ]]>
	            </isNotEmpty>
	             <isNotEmpty property="endTime" prepend=" and ">
	               <![CDATA[ p.approval_time <= #endTime# ]]>
	            </isNotEmpty>
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisFCouncilSummaryProjectDAO.findByConditionCount -->
    <select id="MS-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-COUNCIL-SUMMARY-PROJECT-FIND-BY-CONDITION-COUNT*/  count(*)  FROM f_council_summary_project p
		         <isGreaterThan property="project.busiManagerId"  compareValue="0">
		            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
		            	   WHERE user_id = #project.busiManagerId# AND user_type = 'BUSI_MANAGER' GROUP BY project_code) r1
	    			  ON r1.project_code = p.project_code AND r1.rnum > 0
		      	</isGreaterThan>
		         <isGreaterThan property="project.busiManagerbId"  compareValue="0">
		            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
		            	   WHERE user_id = #project.busiManagerbId# AND user_type = 'BUSI_MANAGERB' GROUP BY project_code) r2
	    			  ON r2.project_code = p.project_code AND r2.rnum > 0
		      	</isGreaterThan>	      	
			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = p.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = p.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty> 	         
	          where 1=1
 	        <dynamic>
	            <isGreaterThan property="FCouncilSummaryProject.spId"  compareValue="0" prepend=" and ">
	                p.sp_id = #FCouncilSummaryProject.spId#
	            </isGreaterThan>
	            <isGreaterThan property="FCouncilSummaryProject.summaryId"  compareValue="0" prepend=" and ">
	                 p.summary_id = #FCouncilSummaryProject.summaryId#
	            </isGreaterThan>
	            <isGreaterThan property="FCouncilSummaryProject.customerId"  compareValue="0" prepend=" and ">
	                 p.customer_id = #FCouncilSummaryProject.customerId#
	            </isGreaterThan>
	             <isNotEmpty property="FCouncilSummaryProject.customerName" prepend=" and ">
	                 p.customer_name like concat('%',#FCouncilSummaryProject.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.spCode" prepend=" and ">
	                p.sp_code = #FCouncilSummaryProject.spCode#
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.projectCode" prepend=" and ">
	                p.project_code = #FCouncilSummaryProject.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.busiType" prepend=" and ">
	                p.busi_type = #FCouncilSummaryProject.busiType#
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.isDel" prepend=" and ">
	                p.is_del = #FCouncilSummaryProject.isDel#
	            </isNotEmpty>
	             <isNotEmpty property="FCouncilSummaryProject.oneVoteDown" prepend=" and ">
	               p.one_vote_down = #FCouncilSummaryProject.oneVoteDown#
	            </isNotEmpty>	            
	             <isNotEmpty property="FCouncilSummaryProject.voteResult" prepend=" and ">
	               p.vote_result = #FCouncilSummaryProject.voteResult#
	            </isNotEmpty>	
	             <isNotEmpty property="isApproval" prepend=" and ">
	              	 <isEqual property="isApproval" compareValue="IS">
	              		  p.vote_result = 'END_PASS' AND p.one_vote_down = 'NO' AND p.approval_time is not null
	              		  AND p.project_code not like 'F%'
	              	</isEqual>
	              	 <isEqual property="isApproval" compareValue="NO">
	              		  (p.vote_result != 'END_PASS' OR p.one_vote_down = 'YES')
	              		   AND p.project_code not like 'F%'
	              	</isEqual>
	            </isNotEmpty>
	             <isNotEmpty property="isApprovalList" prepend=" and ">
	              	 <isEqual property="isApprovalList" compareValue="IS">
	              		  (p.vote_result = 'END_PASS' OR p.vote_result = 'END_NOPASS') 
	              		  AND p.approval_time is not null
	              		  AND p.project_code not like 'F%'
	              	</isEqual>
	            </isNotEmpty>	            		            	            	            
	             <isNotEmpty property="startTime" prepend=" and ">
	               <![CDATA[  p.approval_time >= #startTime# ]]>
	            </isNotEmpty>
	             <isNotEmpty property="endTime" prepend=" and ">
	               <![CDATA[  p.approval_time <= #endTime# ]]>
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
