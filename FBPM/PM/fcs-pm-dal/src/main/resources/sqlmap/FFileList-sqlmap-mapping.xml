<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_file_list -->
    <resultMap id="RM-F-FILE-LIST" class="com.born.fcs.pm.dal.dataobject.FFileListDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="fileId" column="file_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="fileType" column="file_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="fileName" column="file_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="archiveFileName" column="archive_file_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="filePage" column="file_page" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="filePath" column="file_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="inputRemark" column="input_remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="receiveTime" column="receive_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isArchive" column="is_archive" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="sortOrder" column="sort_order" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFFileListDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFFileListDAO.insert -->
    <insert id="MS-F-FILE-LIST-INSERT">
    <![CDATA[
        insert /*MS-YRD-F-FILE-LIST-INSERT*/ into f_file_list(file_id,file_type,file_name,archive_file_name,file_page,file_path,remark,input_remark,receive_time,type,is_archive,parent_id,sort_order,raw_add_time) values (#fileId#, #fileType#, #fileName#, #archiveFileName#, #filePage#, #filePath#, #remark#, #inputRemark#, #receiveTime#, #type#, #isArchive#, #parentId#, #sortOrder#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisFFileListDAO.update -->
    <update id="MS-F-FILE-LIST-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-FILE-LIST-UPDATE*/ f_file_list set file_id=#fileId#, file_type=#fileType#, file_name=#fileName#, archive_file_name=#archiveFileName#, file_page=#filePage#, file_path=#filePath#, remark=#remark#, input_remark=#inputRemark#, receive_time=#receiveTime#, type=#type#, is_archive=#isArchive#, parent_id=#parentId#, sort_order=#sortOrder# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFFileListDAO.findById -->
    <select id="MS-F-FILE-LIST-FIND-BY-ID" resultMap="RM-F-FILE-LIST">
    <![CDATA[
        select /*MS-YRD-F-FILE-LIST-FIND-BY-ID*/ * from f_file_list where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFFileListDAO.findByFileId -->
    <select id="MS-F-FILE-LIST-FIND-BY-FILE-ID" resultMap="RM-F-FILE-LIST">
    <![CDATA[
        select /*MS-YRD-F-FILE-LIST-FIND-BY-FILE-ID*/ * from f_file_list where ((file_id = #fileId#) AND (type = #type#))
    ]]>
    </select>

    <!-- mapped statement for IbatisFFileListDAO.findByType -->
    <select id="MS-F-FILE-LIST-FIND-BY-TYPE" resultMap="RM-F-FILE-LIST">
    <![CDATA[
        select /*MS-YRD-F-FILE-LIST-FIND-BY-TYPE*/ * from f_file_list where (type = #value#) order by sort_order ASC
    ]]>
    </select>

    <!-- mapped statement for IbatisFFileListDAO.findByTypeAndNotArchive -->
    <select id="MS-F-FILE-LIST-FIND-BY-TYPE-AND-NOT-ARCHIVE" resultMap="RM-F-FILE-LIST">
    <![CDATA[
        select /*MS-YRD-F-FILE-LIST-FIND-BY-TYPE-AND-NOT-ARCHIVE*/ * from f_file_list where ((type = #value#) AND ((is_archive IS NULL) OR (is_archive = ''))) order by sort_order ASC
    ]]>
    </select>

    <!-- mapped statement for IbatisFFileListDAO.findByParentId -->
    <select id="MS-F-FILE-LIST-FIND-BY-PARENT-ID" resultMap="RM-F-FILE-LIST">
    <![CDATA[
        select /*MS-YRD-F-FILE-LIST-FIND-BY-PARENT-ID*/ * from f_file_list where (parent_id = #value#) order by sort_order ASC
    ]]>
    </select>

    <!-- mapped statement for IbatisFFileListDAO.deleteById -->
    <delete id="MS-F-FILE-LIST-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-FILE-LIST-DELETE-BY-ID*/ from f_file_list where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFFileListDAO.deleteByFileId -->
    <delete id="MS-F-FILE-LIST-DELETE-BY-FILE-ID">
    <![CDATA[
        delete /*MS-YRD-F-FILE-LIST-DELETE-BY-FILE-ID*/ from f_file_list where (file_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFFileListDAO.findByCondition -->
    <select id="MS-F-FILE-LIST-FIND-BY-CONDITION" resultMap="RM-F-FILE-LIST">
        SELECT /*MS-YRD-F-FILE-LIST-FIND-BY-CONDITION*/ * from f_file_list where 1=1
	        <dynamic>
	            <isGreaterThan property="fFileList.id"  compareValue="0" prepend=" and ">
	                id = #fFileList.id#
	            </isGreaterThan>
	            <isGreaterThan property="fFileList.fileId"  compareValue="0" prepend=" and ">
	                file_id = #fFileList.fileId#
	            </isGreaterThan>
	             <isNotEmpty property="fFileList.fileType" prepend=" and ">
	               file_type = #fFileList.fileType#
	            </isNotEmpty>
	        </dynamic>
            ORDER by sort_order asc
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisFFileListDAO.findByConditionCount -->
    <select id="MS-F-FILE-LIST-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-FILE-LIST-FIND-BY-CONDITION-COUNT*/  count(*)  FROM f_file_list  where 1=1
 	        <dynamic>
	            <isGreaterThan property="fFileList.id"  compareValue="0" prepend=" and ">
	                id = #fFileList.id#
	            </isGreaterThan>
	            <isGreaterThan property="fFileList.fileId"  compareValue="0" prepend=" and ">
	                file_id = #fFileList.fileId#
	            </isGreaterThan>
	             <isNotEmpty property="fFileList.fileType" prepend=" and ">
	               file_type = #fFileList.fileType#
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
