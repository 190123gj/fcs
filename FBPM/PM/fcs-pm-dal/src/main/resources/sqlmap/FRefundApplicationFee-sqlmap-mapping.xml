<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_refund_application_fee -->
    <resultMap id="RM-F-REFUND-APPLICATION-FEE" class="com.born.fcs.pm.dal.dataobject.FRefundApplicationFeeDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="refundId" column="refund_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="refundReason" column="refund_reason" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="refundAmount" column="refund_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="basisOfDecision" column="basis_of_decision" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="basisOfDecisionType" column="basis_of_decision_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="formChange" column="form_change" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="riskCouncilSummary" column="risk_council_summary" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectApproval" column="project_approval" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contract" column="contract" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFRefundApplicationFeeDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.insert -->
    <insert id="MS-F-REFUND-APPLICATION-FEE-INSERT">
        INSERT /*MS-YRD-F-REFUND-APPLICATION-FEE-INSERT*/ INTO f_refund_application_fee
					(refund_id,
						refund_reason,
						refund_amount,
						remark,
						basis_of_decision,
						basis_of_decision_type,
						form_change,
						risk_council_summary,
						project_approval,
						contract,
						raw_add_time)  
				VALUES (#refundId#, #refundReason#, #refundAmount#, #remark#,#basisOfDecision#,#basisOfDecisionType#,#formChange#,#riskCouncilSummary#,#projectApproval#,#contract#,#rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.update -->
    <update id="MS-F-REFUND-APPLICATION-FEE-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-REFUND-APPLICATION-FEE-UPDATE*/ f_refund_application_fee set refund_id=#refundId#, refund_reason=#refundReason#, refund_amount=#refundAmount.cent#, remark=#remark#, basis_of_decision=#basisOfDecision#, basis_of_decision_type=#basisOfDecisionType#, form_change=#formChange#, risk_council_summary=#riskCouncilSummary#, project_approval=#projectApproval#, contract=#contract# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.findById -->
    <select id="MS-F-REFUND-APPLICATION-FEE-FIND-BY-ID" resultMap="RM-F-REFUND-APPLICATION-FEE">
    <![CDATA[
        select /*MS-YRD-F-REFUND-APPLICATION-FEE-FIND-BY-ID*/ * from f_refund_application_fee where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.findByRefundId -->
    <select id="MS-F-REFUND-APPLICATION-FEE-FIND-BY-REFUND-ID" resultMap="RM-F-REFUND-APPLICATION-FEE">
    <![CDATA[
        select /*MS-YRD-F-REFUND-APPLICATION-FEE-FIND-BY-REFUND-ID*/ * from f_refund_application_fee where (refund_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.deleteById -->
    <delete id="MS-F-REFUND-APPLICATION-FEE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-REFUND-APPLICATION-FEE-DELETE-BY-ID*/ from f_refund_application_fee where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.deleteByRefundId -->
    <delete id="MS-F-REFUND-APPLICATION-FEE-DELETE-BY-REFUND-ID">
    <![CDATA[
        delete /*MS-YRD-F-REFUND-APPLICATION-FEE-DELETE-BY-REFUND-ID*/ from f_refund_application_fee where (refund_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.findByCondition -->
    <select id="MS-F-REFUND-APPLICATION-FEE-FIND-BY-CONDITION" resultMap="RM-F-REFUND-APPLICATION-FEE">
        SELECT /*MS-YRD-F-REFUND-APPLICATION-FEE-FIND-BY-CONDITION*/ * from f_refund_application_fee where 1=1
	        <dynamic>
	            <isGreaterThan property="fRefundApplicationFee.id"  compareValue="0" prepend=" and ">
	               id = #fRefundApplicationFee.id#
	            </isGreaterThan>
	            <isGreaterThan property="fRefundApplicationFee.refundId"  compareValue="0" prepend=" and ">
	                refund_id = #fRefundApplicationFee.refundId#
	            </isGreaterThan>
	         
	             <isNotEmpty property="fRefundApplicationFee.refundReason" prepend=" and ">
	               refund_reason = #fRefundApplicationFee.refundReason#
	            </isNotEmpty>
	            
	             <isNotEmpty property="fRefundApplicationFee.refundAmount" prepend=" and ">
	               refund_amount like concat('%',#fRefundApplicationFee.refundAmount#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="fRefundApplicationFee.remark" prepend=" and ">
	               remark like concat('%',#fRefundApplicationFee.remark#,'%')
	            </isNotEmpty>
	
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisFRefundApplicationFeeDAO.findByConditionCount -->
    <select id="MS-F-REFUND-APPLICATION-FEE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-REFUND-APPLICATION-FEE-FIND-BY-CONDITION-COUNT*/  count(*)  FROM f_refund_application_fee  where 1=1
	        <dynamic>
	               <isGreaterThan property="fRefundApplicationFee.id"  compareValue="0" prepend=" and ">
	               id = #fRefundApplicationFee.id#
	            </isGreaterThan>
	            <isGreaterThan property="fRefundApplicationFee.refundId"  compareValue="0" prepend=" and ">
	                refund_id = #fRefundApplicationFee.refundId#
	            </isGreaterThan>
	         
	             <isNotEmpty property="fRefundApplicationFee.refundReason" prepend=" and ">
	               refund_reason = #fRefundApplicationFee.refundReason#
	            </isNotEmpty>
	            
	             <isNotEmpty property="fRefundApplicationFee.refundAmount" prepend=" and ">
	               refund_amount like concat('%',#fRefundApplicationFee.refundAmount#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="fRefundApplicationFee.remark" prepend=" and ">
	               remark like concat('%',#fRefundApplicationFee.remark#,'%')
	            </isNotEmpty>
				
	        </dynamic>
    </select>

</sqlMap>
