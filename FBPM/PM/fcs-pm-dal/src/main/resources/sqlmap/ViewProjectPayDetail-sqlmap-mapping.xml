<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table view_project_pay_detail -->
    <resultMap id="RM-VIEW-PROJECT-PAY-DETAIL" class="com.born.fcs.pm.dal.dataobject.ViewProjectPayDetailDO">
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerType" column="customer_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiType" column="busi_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiTypeName" column="busi_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiManagerId" column="busi_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="busiManagerAccount" column="busi_manager_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiManagerName" column="busi_manager_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="startTime" column="start_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="endTime" column="end_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="balance" column="balance" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="compPrincipalAmount" column="comp_principal_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="feeType" column="fee_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="payAmount" column="pay_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="payTime" column="pay_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="payConfirmTime" column="pay_confirm_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="payAccount" column="pay_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisViewProjectPayDetailDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisViewProjectPayDetailDAO.findByCondition -->
    <select id="MS-VIEW-PROJECT-PAY-DETAIL-FIND-BY-CONDITION" resultMap="RM-VIEW-PROJECT-PAY-DETAIL">
        SELECT /*MS-YRD-VIEW-PROJECT-PAY-DETAIL-FIND-BY-CONDITION*/ * FROM view_project_pay_detail p
			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = p.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = p.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty>
	      	WHERE 1=1  				 			
			<dynamic> 	        
	            <isNotEmpty property="viewProjectPayDetail.projectCode" prepend=" and ">
	               p.project_code =#viewProjectPayDetail.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="viewProjectPayDetail.projectName" prepend=" and ">
	               p.project_name like concat('%',#project.projectName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectCodeOrName" prepend=" and ">
	               (p.project_code like concat('%',#projectCodeOrName#,'%') 
	               	OR p.project_name like concat('%',#projectCodeOrName#,'%') )
	            </isNotEmpty>  
	             <isNotEmpty property="viewProjectPayDetail.customerName" prepend=" and ">
	               p.customer_name like concat('%',#viewProjectPayDetail.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="viewProjectPayDetail.busiManagerName" prepend=" and ">
	               p.busi_manager_name like concat('%',#viewProjectPayDetail.busiManagerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="viewProjectPayDetail.busiType" prepend=" and ">
	               p.busi_type like concat(#viewProjectPayDetail.busiType#,'%')
	            </isNotEmpty>
 			   <isNotEmpty property="inGuarantee" prepend=" and ">
	               <isEqual property="inGuarantee" compareValue="YES">
	               		<![CDATA[ p.balance > 0 ]]>
	               </isEqual>
	               <isEqual property="inGuarantee" compareValue="NO">
	               		<![CDATA[ p.balance <= 0 ]]>
	               </isEqual>
               </isNotEmpty> 
  			   <isNotEmpty property="payTimeStart" prepend=" and ">
	               <![CDATA[p.pay_time >= #payTimeStart#]]>
               </isNotEmpty>                             				
 			   <isNotEmpty property="payTimeEnd" prepend=" and ">
	               <![CDATA[p.pay_time <= #payTimeEnd#]]>
               </isNotEmpty>   
		      	<isNotEmpty property="feeTypeList" prepend=" and ">
		      		p.fee_type in 
           	   		<iterate property="feeTypeList" open="(" close=")" conjunction=",">
						#feeTypeList[]#
					</iterate>
		      	</isNotEmpty>                               
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>  	        
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisViewProjectPayDetailDAO.findByConditionCount -->
    <select id="MS-VIEW-PROJECT-PAY-DETAIL-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-VIEW-PROJECT-PAY-DETAIL-FIND-BY-CONDITION-COUNT*/ count(*) FROM view_project_pay_detail p
	 			      <isNotEmpty property="deptIdList">
			            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user
			            	   WHERE is_del = 'NO' AND 
			            	   		(dept_id in 
			            	   		<iterate property="deptIdList" open="(" close=")" conjunction=",">
										#deptIdList[]#
									</iterate>
							 		<isGreaterThan property="loginUserId"  compareValue="0" prepend=" OR ">
					            	    (user_id = #loginUserId# 
								      	<isNotEmpty property="relatedRoleList" prepend=" and ">
								      		user_type in 
					            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
												#relatedRoleList[]#
											</iterate>
								      	</isNotEmpty>)  	            	   
								    </isGreaterThan>)
							   GROUP BY project_code) rl
		    			  ON rl.project_code = p.project_code AND rl.rnum > 0
			      </isNotEmpty>
			      <isEmpty property="deptIdList">    
			 		  <isGreaterThan property="loginUserId"  compareValue="0">
				            JOIN (SELECT COUNT(*) rnum,project_code FROM project_related_user 
				            	   WHERE user_id = #loginUserId# AND is_del = 'NO'
							      	<isNotEmpty property="relatedRoleList" prepend=" and ">
							      		user_type in 
				            	   		<iterate property="relatedRoleList" open="(" close=")" conjunction=",">
											#relatedRoleList[]#
										</iterate>
							      	</isNotEmpty>  	            	   
				            	   GROUP BY project_code) rl
			    			  ON rl.project_code = p.project_code AND rl.rnum > 0
				      </isGreaterThan>
			      </isEmpty>
	      	WHERE 1=1  				 			
			<dynamic> 	        
	            <isNotEmpty property="viewProjectPayDetail.projectCode" prepend=" and ">
	               p.project_code =#viewProjectPayDetail.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="viewProjectPayDetail.projectName" prepend=" and ">
	               p.project_name like concat('%',#project.projectName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectCodeOrName" prepend=" and ">
	               (p.project_code like concat('%',#projectCodeOrName#,'%') 
	               	OR p.project_name like concat('%',#projectCodeOrName#,'%') )
	            </isNotEmpty>  
	             <isNotEmpty property="viewProjectPayDetail.customerName" prepend=" and ">
	               p.customer_name like concat('%',#viewProjectPayDetail.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="viewProjectPayDetail.busiManagerName" prepend=" and ">
	               p.busi_manager_name like concat('%',#viewProjectPayDetail.busiManagerName#,'%')
	            </isNotEmpty>	            
	             <isNotEmpty property="viewProjectPayDetail.busiType" prepend=" and ">
	               p.busi_type like concat(#viewProjectPayDetail.busiType#,'%')
	            </isNotEmpty>
 			   <isNotEmpty property="inGuarantee" prepend=" and ">
	               <isEqual property="inGuarantee" compareValue="YES">
	               		<![CDATA[ p.balance > 0 ]]>
	               </isEqual>
	               <isEqual property="inGuarantee" compareValue="NO">
	               		<![CDATA[ p.balance <= 0 ]]>
	               </isEqual>
               </isNotEmpty> 
  			   <isNotEmpty property="payTimeStart" prepend=" and ">
	               <![CDATA[p.pay_time >= #payTimeStart#]]>
               </isNotEmpty>                             				
 			   <isNotEmpty property="payTimeEnd" prepend=" and ">
	               <![CDATA[p.pay_time <= #payTimeEnd#]]>
               </isNotEmpty>   
		      	<isNotEmpty property="feeTypeList" prepend=" and ">
		      		p.fee_type in 
           	   		<iterate property="feeTypeList" open="(" close=")" conjunction=",">
						#feeTypeList[]#
					</iterate>
		      	</isNotEmpty>                               
	        </dynamic>
    </select>

</sqlMap>
