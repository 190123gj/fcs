<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_internal_opinion_exchange_user -->
    <resultMap id="RM-F-INTERNAL-OPINION-EXCHANGE-USER" class="com.born.fcs.pm.dal.dataobject.FInternalOpinionExchangeUserDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userAccount" column="user_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userMobile" column="user_mobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userEmail" column="user_email" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="exType" column="ex_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="feedbackTime" column="feedback_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="feedback" column="feedback" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="isNotified" column="is_notified" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isPrincipal" column="is_principal" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFInternalOpinionExchangeUserDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.insert -->
    <insert id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-INSERT">
    <![CDATA[
        insert /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-INSERT*/ into f_internal_opinion_exchange_user(id,form_id,user_id,user_account,user_name,user_mobile,user_email,ex_type,feedback_time,feedback,is_notified,is_principal,raw_add_time) values (#id#, #formId#, #userId#, #userAccount#, #userName#, #userMobile#, #userEmail#, #exType#, #feedbackTime#, #feedback#, #isNotified#, #isPrincipal#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.update -->
    <update id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-UPDATE*/ f_internal_opinion_exchange_user set form_id=#formId#, user_id=#userId#, user_account=#userAccount#, user_name=#userName#, user_mobile=#userMobile#, user_email=#userEmail#, ex_type=#exType#, feedback_time=#feedbackTime#, feedback=#feedback#, is_notified=#isNotified#, is_principal=#isPrincipal# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.findById -->
    <select id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-BY-ID" resultMap="RM-F-INTERNAL-OPINION-EXCHANGE-USER">
    <![CDATA[
        select /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-BY-ID*/ * from f_internal_opinion_exchange_user where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.findByFormId -->
    <select id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-BY-FORM-ID" resultMap="RM-F-INTERNAL-OPINION-EXCHANGE-USER">
    <![CDATA[
        select /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-BY-FORM-ID*/ * from f_internal_opinion_exchange_user where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.findByFormIdAndUser -->
    <select id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-BY-FORM-ID-AND-USER" resultMap="RM-F-INTERNAL-OPINION-EXCHANGE-USER">
    <![CDATA[
        select /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-BY-FORM-ID-AND-USER*/ * from f_internal_opinion_exchange_user where ((form_id = #formId#) AND (user_id = #userId#))
    ]]>
    </select>

    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.findNeedNofity -->
    <select id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-NEED-NOFITY" resultMap="RM-F-INTERNAL-OPINION-EXCHANGE-USER">
        SELECT /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-FIND-NEED-NOFITY*/  * FROM f_internal_opinion_exchange_user WHERE is_notified = 'NO' AND feedback is null AND feedback_time &lt;= date_add(sysdate(),interval #beforeDays# day) AND feedback_time &gt;= sysdate() LIMIT #limit#;
    </select>

    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.deleteByFormId -->
    <delete id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-DELETE-BY-FORM-ID">
    <![CDATA[
        delete /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-DELETE-BY-FORM-ID*/ from f_internal_opinion_exchange_user where (form_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFInternalOpinionExchangeUserDAO.deleteById -->
    <delete id="MS-F-INTERNAL-OPINION-EXCHANGE-USER-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-INTERNAL-OPINION-EXCHANGE-USER-DELETE-BY-ID*/ from f_internal_opinion_exchange_user where (id = #value#)
    ]]>
    </delete>

</sqlMap>
