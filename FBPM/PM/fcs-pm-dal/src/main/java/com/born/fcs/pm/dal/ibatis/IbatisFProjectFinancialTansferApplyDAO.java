/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.FProjectFinancialTansferApplyDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.FProjectFinancialTansferApplyDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.FProjectFinancialTansferApplyDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_project_financial_tansfer_apply.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings("unchecked")

public class IbatisFProjectFinancialTansferApplyDAO extends SqlMapClientDaoSupport implements FProjectFinancialTansferApplyDAO {
	/**
	 *  Insert one <tt>FProjectFinancialTansferApplyDO</tt> object to DB table <tt>f_project_financial_tansfer_apply</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_project_financial_tansfer_apply(apply_id,form_id,project_code,buy_num,hold_num,actual_hold_num,transfering_num,redeeming_num,transfer_price,transfer_num,transfer_reason,transfer_time,transfer_interest,transfer_to,interest_rate,is_transfer_ownership,is_buy_back,buy_back_price,buy_back_time,council_type,council_apply_id,council_status,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FProjectFinancialTansferApply
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FProjectFinancialTansferApplyDO FProjectFinancialTansferApply) throws DataAccessException {
    	if (FProjectFinancialTansferApply == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-PROJECT-FINANCIAL-TANSFER-APPLY-INSERT", FProjectFinancialTansferApply);

        return FProjectFinancialTansferApply.getApplyId();
    }

	/**
	 *  Update DB table <tt>f_project_financial_tansfer_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project_financial_tansfer_apply set form_id=?, project_code=?, buy_num=?, hold_num=?, actual_hold_num=?, transfering_num=?, redeeming_num=?, transfer_price=?, transfer_num=?, transfer_reason=?, transfer_time=?, transfer_interest=?, transfer_to=?, interest_rate=?, is_transfer_ownership=?, is_buy_back=?, buy_back_price=?, buy_back_time=?, council_type=?, council_apply_id=?, council_status=? where (apply_id = ?)</tt>
	 *
	 *	@param FProjectFinancialTansferApply
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FProjectFinancialTansferApplyDO FProjectFinancialTansferApply) throws DataAccessException {
    	if (FProjectFinancialTansferApply == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-FINANCIAL-TANSFER-APPLY-UPDATE", FProjectFinancialTansferApply);
    }

	/**
	 *  Query DB table <tt>f_project_financial_tansfer_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project_financial_tansfer_apply where (apply_id = ?)</tt>
	 *
	 *	@param applyId
	 *	@return FProjectFinancialTansferApplyDO
	 *	@throws DataAccessException
	 */	 
    public FProjectFinancialTansferApplyDO findById(long applyId) throws DataAccessException {
        Long param = new Long(applyId);

        return (FProjectFinancialTansferApplyDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-FINANCIAL-TANSFER-APPLY-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_project_financial_tansfer_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project_financial_tansfer_apply where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FProjectFinancialTansferApplyDO
	 *	@throws DataAccessException
	 */	 
    public FProjectFinancialTansferApplyDO findByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return (FProjectFinancialTansferApplyDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-FINANCIAL-TANSFER-APPLY-FIND-BY-FORM-ID", param);

    }

	/**
	 *  Query DB table <tt>f_project_financial_tansfer_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project_financial_tansfer_apply where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return List<FProjectFinancialTansferApplyDO>
	 *	@throws DataAccessException
	 */	 
    public List<FProjectFinancialTansferApplyDO> findByProjectCode(String projectCode) throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-F-PROJECT-FINANCIAL-TANSFER-APPLY-FIND-BY-PROJECT-CODE", projectCode);

    }

	/**
	 *  Delete records from DB table <tt>f_project_financial_tansfer_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_project_financial_tansfer_apply where (apply_id = ?)</tt>
	 *
	 *	@param applyId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long applyId) throws DataAccessException {
        Long param = new Long(applyId);

        return getSqlMapClientTemplate().delete("MS-F-PROJECT-FINANCIAL-TANSFER-APPLY-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>f_project_financial_tansfer_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project_financial_tansfer_apply where ((p.council_status = 'COUNCIL_WAITING') AND (p.council_type != 'SELF_PR'))</tt>
	 *
	 *	@param limit
	 *	@return List<FProjectFinancialTansferApplyDO>
	 *	@throws DataAccessException
	 */	 
    public List<FProjectFinancialTansferApplyDO> findCouncilWaitingApply(long limit) throws DataAccessException {
        Long param = new Long(limit);

        return getSqlMapClientTemplate().queryForList("MS-F-PROJECT-FINANCIAL-TANSFER-APPLY-FIND-COUNCIL-WAITING-APPLY", param);

    }

}