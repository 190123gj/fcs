/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.AssessCompanyDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>assess_company</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/assess_company.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface AssessCompanyDAO {
	/**
	 *  Insert one <tt>AssessCompanyDO</tt> object to DB table <tt>assess_company</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into assess_company(company_name,region,city,city_code,contact_name,contact_number,country_code,country_name,province_code,province_name,county_code,county_name,delete_mark,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param assessCompany
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(AssessCompanyDO assessCompany) throws DataAccessException;

	/**
	 *  Update DB table <tt>assess_company</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update assess_company set company_name=?, region=?, city=?, city_code=?, contact_name=?, contact_number=?, country_code=?, country_name=?, province_code=?, province_name=?, county_code=?, county_name=?, delete_mark=? where (company_id = ?)</tt>
	 *
	 *	@param assessCompany
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(AssessCompanyDO assessCompany) throws DataAccessException;

	/**
	 *  Query DB table <tt>assess_company</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from assess_company where (company_id = ?)</tt>
	 *
	 *	@param companyId
	 *	@return AssessCompanyDO
	 *	@throws DataAccessException
	 */	 
    public AssessCompanyDO findById(long companyId) throws DataAccessException;

	/**
	 *  Query DB table <tt>assess_company</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from assess_company where ((company_name = ?) AND (delete_mark = "0"))</tt>
	 *
	 *	@param assessCompany
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByNameCount(AssessCompanyDO assessCompany) throws DataAccessException;

	/**
	 *  Query DB table <tt>assess_company</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select distinct ac.city from assess_company ac where (ac.delete_mark = "0") order by ac.city ASC</tt>
	 *
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public List<String> findCities() throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>assess_company</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from assess_company where (company_id = ?)</tt>
	 *
	 *	@param companyId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long companyId) throws DataAccessException;

	/**
	 *  Query DB table <tt>assess_company</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from assess_company where ((1 = 1) AND (delete_mark = "0"))</tt>
	 *
	 *	@param assessCompany
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(AssessCompanyDO assessCompany) throws DataAccessException;

	/**
	 *  Query DB table <tt>assess_company</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from assess_company where ((1 = 1) AND (delete_mark = "0"))</tt>
	 *
	 *	@param assessCompany
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<AssessCompanyDO>
	 *	@throws DataAccessException
	 */	 
    public List<AssessCompanyDO> findByCondition(AssessCompanyDO assessCompany, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException;

}