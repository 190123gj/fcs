/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.FProjectContractExtraValueModifyDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.FProjectContractExtraValueModifyDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.FProjectContractExtraValueModifyDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_project_contract_extra_value_modify.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings("unchecked")

public class IbatisFProjectContractExtraValueModifyDAO extends SqlMapClientDaoSupport implements FProjectContractExtraValueModifyDAO {
	/**
	 *  Insert one <tt>FProjectContractExtraValueModifyDO</tt> object to DB table <tt>f_project_contract_extra_value_modify</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_project_contract_extra_value_modify(contract_id,contract_item_id,contract_code,template_id,user_id,user_name,value_id,document_name,document_describe,document_value_old,document_value_new,document_type,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FProjectContractExtraValueModify
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FProjectContractExtraValueModifyDO FProjectContractExtraValueModify) throws DataAccessException {
    	if (FProjectContractExtraValueModify == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-PROJECT-CONTRACT-EXTRA-VALUE-MODIFY-INSERT", FProjectContractExtraValueModify);

        return FProjectContractExtraValueModify.getId();
    }

	/**
	 *  Update DB table <tt>f_project_contract_extra_value_modify</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project_contract_extra_value_modify set contract_id=?, contract_item_id=?, contract_code=?, template_id=?, user_id=?, user_name=?, value_id=?, document_name=?, document_describe=?, document_value_old=?, document_value_new=?, document_type=? where (id = ?)</tt>
	 *
	 *	@param FProjectContractExtraValueModify
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FProjectContractExtraValueModifyDO FProjectContractExtraValueModify) throws DataAccessException {
    	if (FProjectContractExtraValueModify == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-CONTRACT-EXTRA-VALUE-MODIFY-UPDATE", FProjectContractExtraValueModify);
    }

	/**
	 *  Query DB table <tt>f_project_contract_extra_value_modify</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, contract_id, contract_item_id, contract_code, template_id, user_id, user_name, value_id, document_name, document_describe, document_value_old, document_value_new, document_type, raw_add_time, raw_update_time from f_project_contract_extra_value_modify where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FProjectContractExtraValueModifyDO
	 *	@throws DataAccessException
	 */	 
    public FProjectContractExtraValueModifyDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (FProjectContractExtraValueModifyDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-CONTRACT-EXTRA-VALUE-MODIFY-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_project_contract_extra_value_modify</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, contract_id, contract_item_id, contract_code, template_id, user_id, user_name, value_id, document_name, document_describe, document_value_old, document_value_new, document_type, raw_add_time, raw_update_time from f_project_contract_extra_value_modify where (contract_item_id = ?)</tt>
	 *
	 *	@param contractItemId
	 *	@return List<FProjectContractExtraValueModifyDO>
	 *	@throws DataAccessException
	 */	 
    public List<FProjectContractExtraValueModifyDO> findByItemId(long contractItemId) throws DataAccessException {
        Long param = new Long(contractItemId);

        return getSqlMapClientTemplate().queryForList("MS-F-PROJECT-CONTRACT-EXTRA-VALUE-MODIFY-FIND-BY-ITEM-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>f_project_contract_extra_value_modify</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_project_contract_extra_value_modify where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-F-PROJECT-CONTRACT-EXTRA-VALUE-MODIFY-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>f_project_contract_extra_value_modify</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_project_contract_extra_value_modify</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findAllCount() throws DataAccessException {

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-CONTRACT-EXTRA-VALUE-MODIFY-FIND-ALL-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}