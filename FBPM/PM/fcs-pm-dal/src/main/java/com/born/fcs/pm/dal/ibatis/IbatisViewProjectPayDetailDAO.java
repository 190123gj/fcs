/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.ViewProjectPayDetailDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.ViewProjectPayDetailDO;
import java.util.List;
import java.util.Date;
import org.springframework.dao.DataAccessException;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.ViewProjectPayDetailDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/view_project_pay_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisViewProjectPayDetailDAO extends SqlMapClientDaoSupport implements ViewProjectPayDetailDAO {
	/**
	 *  Query DB table <tt>view_project_pay_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from view_project_pay_detail</tt>
	 *
	 *	@param viewProjectPayDetail
	 *	@param loginUserId
	 *	@param deptIdList
	 *	@param relatedRoleList
	 *	@param projectCodeOrName
	 *	@param inGuarantee
	 *	@param payTimeStart
	 *	@param payTimeEnd
	 *	@param feeTypeList
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@return List<ViewProjectPayDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<ViewProjectPayDetailDO> findByCondition(ViewProjectPayDetailDO viewProjectPayDetail, long loginUserId, List deptIdList, List relatedRoleList, String projectCodeOrName, String inGuarantee, Date payTimeStart, Date payTimeEnd, List feeTypeList, long limitStart, long pageSize, String sortCol, String sortOrder) throws DataAccessException {
    	if (viewProjectPayDetail == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("viewProjectPayDetail", viewProjectPayDetail);
        param.put("loginUserId", new Long(loginUserId));
        param.put("deptIdList", deptIdList);
        param.put("relatedRoleList", relatedRoleList);
        param.put("projectCodeOrName", projectCodeOrName);
        param.put("inGuarantee", inGuarantee);
        param.put("payTimeStart", payTimeStart);
        param.put("payTimeEnd", payTimeEnd);
        param.put("feeTypeList", feeTypeList);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);

        return getSqlMapClientTemplate().queryForList("MS-VIEW-PROJECT-PAY-DETAIL-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>view_project_pay_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from view_project_pay_detail</tt>
	 *
	 *	@param viewProjectPayDetail
	 *	@param loginUserId
	 *	@param deptIdList
	 *	@param relatedRoleList
	 *	@param projectCodeOrName
	 *	@param inGuarantee
	 *	@param payTimeStart
	 *	@param payTimeEnd
	 *	@param feeTypeList
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ViewProjectPayDetailDO viewProjectPayDetail, long loginUserId, List deptIdList, List relatedRoleList, String projectCodeOrName, String inGuarantee, Date payTimeStart, Date payTimeEnd, List feeTypeList) throws DataAccessException {
    	if (viewProjectPayDetail == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("viewProjectPayDetail", viewProjectPayDetail);
        param.put("loginUserId", new Long(loginUserId));
        param.put("deptIdList", deptIdList);
        param.put("relatedRoleList", relatedRoleList);
        param.put("projectCodeOrName", projectCodeOrName);
        param.put("inGuarantee", inGuarantee);
        param.put("payTimeStart", payTimeStart);
        param.put("payTimeEnd", payTimeEnd);
        param.put("feeTypeList", feeTypeList);

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-VIEW-PROJECT-PAY-DETAIL-FIND-BY-CONDITION-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}