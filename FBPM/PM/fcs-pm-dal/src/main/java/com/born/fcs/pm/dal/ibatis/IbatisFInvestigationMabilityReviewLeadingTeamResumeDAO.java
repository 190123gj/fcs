/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.FInvestigationMabilityReviewLeadingTeamResumeDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.FInvestigationMabilityReviewLeadingTeamResumeDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.FInvestigationMabilityReviewLeadingTeamResumeDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_investigation_mability_review_leading_team_resume.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisFInvestigationMabilityReviewLeadingTeamResumeDAO extends SqlMapClientDaoSupport implements FInvestigationMabilityReviewLeadingTeamResumeDAO {
	/**
	 *  Insert one <tt>FInvestigationMabilityReviewLeadingTeamResumeDO</tt> object to DB table <tt>f_investigation_mability_review_leading_team_resume</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_investigation_mability_review_leading_team_resume(ma_review_id,owner,tid,start_date,end_date,company_name,title,sort_order,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FInvestigationMabilityReviewLeadingTeamResume
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FInvestigationMabilityReviewLeadingTeamResumeDO FInvestigationMabilityReviewLeadingTeamResume) throws DataAccessException {
    	if (FInvestigationMabilityReviewLeadingTeamResume == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-INSERT", FInvestigationMabilityReviewLeadingTeamResume);

        return FInvestigationMabilityReviewLeadingTeamResume.getId();
    }

	/**
	 *  Update DB table <tt>f_investigation_mability_review_leading_team_resume</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_investigation_mability_review_leading_team_resume set ma_review_id=?, owner=?, tid=?, start_date=?, end_date=?, company_name=?, title=?, sort_order=? where (id = ?)</tt>
	 *
	 *	@param FInvestigationMabilityReviewLeadingTeamResume
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FInvestigationMabilityReviewLeadingTeamResumeDO FInvestigationMabilityReviewLeadingTeamResume) throws DataAccessException {
    	if (FInvestigationMabilityReviewLeadingTeamResume == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-UPDATE", FInvestigationMabilityReviewLeadingTeamResume);
    }

	/**
	 *  Query DB table <tt>f_investigation_mability_review_leading_team_resume</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_mability_review_leading_team_resume where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FInvestigationMabilityReviewLeadingTeamResumeDO
	 *	@throws DataAccessException
	 */	 
    public FInvestigationMabilityReviewLeadingTeamResumeDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (FInvestigationMabilityReviewLeadingTeamResumeDO) getSqlMapClientTemplate().queryForObject("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_investigation_mability_review_leading_team_resume</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_mability_review_leading_team_resume where ((ma_review_id = ?) AND (owner = ?)) order by sort_order ASC</tt>
	 *
	 *	@param maReviewId
	 *	@param owner
	 *	@return List<FInvestigationMabilityReviewLeadingTeamResumeDO>
	 *	@throws DataAccessException
	 */	 
    public List<FInvestigationMabilityReviewLeadingTeamResumeDO> findByReviewIdAndOwner(long maReviewId, String owner) throws DataAccessException {
        Map param = new HashMap();

        param.put("maReviewId", new Long(maReviewId));
        param.put("owner", owner);

        return getSqlMapClientTemplate().queryForList("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-FIND-BY-REVIEW-ID-AND-OWNER", param);

    }

	/**
	 *  Query DB table <tt>f_investigation_mability_review_leading_team_resume</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_mability_review_leading_team_resume where ((ma_review_id = ?) AND (owner = ?) AND (tid = ?)) order by sort_order ASC</tt>
	 *
	 *	@param maReviewId
	 *	@param owner
	 *	@param tid
	 *	@return List<FInvestigationMabilityReviewLeadingTeamResumeDO>
	 *	@throws DataAccessException
	 */	 
    public List<FInvestigationMabilityReviewLeadingTeamResumeDO> findByReviewIdOwnerTid(long maReviewId, String owner, long tid) throws DataAccessException {
        Map param = new HashMap();

        param.put("maReviewId", new Long(maReviewId));
        param.put("owner", owner);
        param.put("tid", new Long(tid));

        return getSqlMapClientTemplate().queryForList("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-FIND-BY-REVIEW-ID-OWNER-TID", param);

    }

	/**
	 *  Delete records from DB table <tt>f_investigation_mability_review_leading_team_resume</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_mability_review_leading_team_resume where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_investigation_mability_review_leading_team_resume</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_mability_review_leading_team_resume where ((ma_review_id = ?) AND (owner = ?))</tt>
	 *
	 *	@param maReviewId
	 *	@param owner
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReviewIdAndOwner(long maReviewId, String owner) throws DataAccessException {
        Map param = new HashMap();

        param.put("maReviewId", new Long(maReviewId));
        param.put("owner", owner);

        return getSqlMapClientTemplate().delete("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-DELETE-BY-REVIEW-ID-AND-OWNER", param);
    }

	/**
	 *  Delete records from DB table <tt>f_investigation_mability_review_leading_team_resume</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_mability_review_leading_team_resume where ((ma_review_id = ?) AND (owner = ?) AND (tid = ?))</tt>
	 *
	 *	@param maReviewId
	 *	@param owner
	 *	@param tid
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReviewIdOwnerTid(long maReviewId, String owner, long tid) throws DataAccessException {
        Map param = new HashMap();

        param.put("maReviewId", new Long(maReviewId));
        param.put("owner", owner);
        param.put("tid", new Long(tid));

        return getSqlMapClientTemplate().delete("MS-F-INVESTIGATION-MABILITY-REVIEW-LEADING-TEAM-RESUME-DELETE-BY-REVIEW-ID-OWNER-TID", param);
    }

}