/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.EnterpriseScaleRuleDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>enterprise_scale_rule</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/enterprise_scale_rule.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface EnterpriseScaleRuleDAO {
	/**
	 *  Insert one <tt>EnterpriseScaleRuleDO</tt> object to DB table <tt>enterprise_scale_rule</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into enterprise_scale_rule(industry_code,industry_name,kpi_type,kpi_name,kpi_unit,kpi_variable,scale_huge_script,scale_big_script,scale_medium_script,scale_small_script,scale_tiny_script,version,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param enterpriseScaleRule
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int insert(EnterpriseScaleRuleDO enterpriseScaleRule) throws DataAccessException;

	/**
	 *  Update DB table <tt>enterprise_scale_rule</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update enterprise_scale_rule set industry_code=?, industry_name=?, kpi_type=?, kpi_name=?, kpi_unit=?, kpi_variable=?, scale_huge_script=?, scale_big_script=?, scale_medium_script=?, scale_small_script=?, scale_tiny_script=?, version=? where (rule_id = ?)</tt>
	 *
	 *	@param enterpriseScaleRule
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(EnterpriseScaleRuleDO enterpriseScaleRule) throws DataAccessException;

	/**
	 *  Query DB table <tt>enterprise_scale_rule</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from enterprise_scale_rule where (rule_id = ?)</tt>
	 *
	 *	@param ruleId
	 *	@return EnterpriseScaleRuleDO
	 *	@throws DataAccessException
	 */	 
    public EnterpriseScaleRuleDO findById(int ruleId) throws DataAccessException;

	/**
	 *  Query DB table <tt>enterprise_scale_rule</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from enterprise_scale_rule where (version = 'NOW')</tt>
	 *
	 *	@return List<EnterpriseScaleRuleDO>
	 *	@throws DataAccessException
	 */	 
    public List<EnterpriseScaleRuleDO> findByAll() throws DataAccessException;

	/**
	 *  Query DB table <tt>enterprise_scale_rule</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from enterprise_scale_rule where (industry_code = 'DEFAULT')</tt>
	 *
	 *	@return EnterpriseScaleRuleDO
	 *	@throws DataAccessException
	 */	 
    public EnterpriseScaleRuleDO findByDefault() throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>enterprise_scale_rule</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from enterprise_scale_rule where (rule_id = ?)</tt>
	 *
	 *	@param ruleId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(int ruleId) throws DataAccessException;

}