/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.FFileBorrowDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>f_file_borrow</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_file_borrow.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface FFileBorrowDAO {
	/**
	 *  Insert one <tt>FFileBorrowDO</tt> object to DB table <tt>f_file_borrow</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_file_borrow(file_id,form_id,file_code,old_file_code,project_code,project_name,customer_id,customer_name,apply_man_id,apply_man,apply_time,apply_dept,expect_return_time,borrow_reason,borrow_detail_id,borrow_detail,hand_over_man_id,hand_over_man,hand_over_time,receive_dept,receive_man_id,receive_man,hand_over_dept,receive_time,is_return,is_batch,file_ids,borrow_form_id,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FFileBorrow
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FFileBorrowDO FFileBorrow) throws DataAccessException;

	/**
	 *  Update DB table <tt>f_file_borrow</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_file_borrow set file_id=?, form_id=?, file_code=?, old_file_code=?, project_code=?, project_name=?, customer_id=?, customer_name=?, apply_man_id=?, apply_man=?, apply_time=?, apply_dept=?, expect_return_time=?, borrow_reason=?, borrow_detail_id=?, borrow_detail=?, hand_over_man_id=?, hand_over_man=?, hand_over_time=?, receive_dept=?, receive_man_id=?, receive_man=?, hand_over_dept=?, receive_time=?, is_batch=? where (id = ?)</tt>
	 *
	 *	@param FFileBorrow
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FFileBorrowDO FFileBorrow) throws DataAccessException;

	/**
	 *  Update DB table <tt>f_file_borrow</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_file_borrow set file_id=?, form_id=?, file_code=?, old_file_code=?, project_code=?, project_name=?, customer_id=?, customer_name=?, apply_man_id=?, apply_man=?, apply_time=?, apply_dept=?, expect_return_time=?, borrow_reason=?, borrow_detail_id=?, borrow_detail=?, hand_over_man_id=?, hand_over_man=?, hand_over_time=?, receive_dept=?, receive_man_id=?, receive_man=?, hand_over_dept=?, receive_time=? where (form_id = ?)</tt>
	 *
	 *	@param FFileBorrow
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByFormId(FFileBorrowDO FFileBorrow) throws DataAccessException;

	/**
	 *  Update DB table <tt>f_file_borrow</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_file_borrow set is_return="IS" where (file_code = ?)</tt>
	 *
	 *	@param fileCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByFileCode(String fileCode) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_file_borrow</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_file_borrow where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FFileBorrowDO
	 *	@throws DataAccessException
	 */	 
    public FFileBorrowDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_file_borrow</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_file_borrow where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FFileBorrowDO
	 *	@throws DataAccessException
	 */	 
    public FFileBorrowDO findByFormId(long formId) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_file_borrow</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_file_borrow where (file_id = ?)</tt>
	 *
	 *	@param fileId
	 *	@return FFileBorrowDO
	 *	@throws DataAccessException
	 */	 
    public FFileBorrowDO findByFileId(long fileId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_file_borrow</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_file_borrow where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_file_borrow</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_file_borrow where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_file_borrow</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_file_borrow where (file_id = ?)</tt>
	 *
	 *	@param fileId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFileId(long fileId) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_file_borrow</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_file_borrow where (1 = 1)</tt>
	 *
	 *	@param FFileBorrow
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<FFileBorrowDO>
	 *	@throws DataAccessException
	 */	 
    public List<FFileBorrowDO> findByCondition(FFileBorrowDO FFileBorrow, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_file_borrow</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_file_borrow where (1 = 1)</tt>
	 *
	 *	@param FFileBorrow
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FFileBorrowDO FFileBorrow) throws DataAccessException;

}