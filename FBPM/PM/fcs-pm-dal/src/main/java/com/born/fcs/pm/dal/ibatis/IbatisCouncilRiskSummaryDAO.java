/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.CouncilRiskSummaryDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.CouncilRiskSummaryDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.CouncilRiskSummaryDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/council_risk_summary.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings("unchecked")

public class IbatisCouncilRiskSummaryDAO extends SqlMapClientDaoSupport implements CouncilRiskSummaryDAO {
	/**
	 *  Insert one <tt>CouncilRiskSummaryDO</tt> object to DB table <tt>council_risk_summary</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into council_risk_summary(summary_id,council_id,summary,need_confirm,confirm_man_ids,confirm_man_names,is_confirm,confirm_man_id,confirm_man_name,confirm_result,confirm_remark,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param councilRiskSummary
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(CouncilRiskSummaryDO councilRiskSummary) throws DataAccessException {
    	if (councilRiskSummary == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-COUNCIL-RISK-SUMMARY-INSERT", councilRiskSummary);

        return councilRiskSummary.getSummaryId();
    }

	/**
	 *  Update DB table <tt>council_risk_summary</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update council_risk_summary set council_id=?, summary=?, need_confirm=?, confirm_man_ids=?, confirm_man_names=?, is_confirm=?, confirm_man_id=?, confirm_man_name=?, confirm_result=?, confirm_remark=? where (summary_id = ?)</tt>
	 *
	 *	@param councilRiskSummary
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(CouncilRiskSummaryDO councilRiskSummary) throws DataAccessException {
    	if (councilRiskSummary == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-COUNCIL-RISK-SUMMARY-UPDATE", councilRiskSummary);
    }

	/**
	 *  Query DB table <tt>council_risk_summary</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from council_risk_summary where (summary_id = ?)</tt>
	 *
	 *	@param summaryId
	 *	@return CouncilRiskSummaryDO
	 *	@throws DataAccessException
	 */	 
    public CouncilRiskSummaryDO findById(long summaryId) throws DataAccessException {
        Long param = new Long(summaryId);

        return (CouncilRiskSummaryDO) getSqlMapClientTemplate().queryForObject("MS-COUNCIL-RISK-SUMMARY-FIND-BY-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>council_risk_summary</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from council_risk_summary where (council_id = ?)</tt>
	 *
	 *	@param councilId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long councilId) throws DataAccessException {
        Long param = new Long(councilId);

        return getSqlMapClientTemplate().delete("MS-COUNCIL-RISK-SUMMARY-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>council_risk_summary</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select summary_id, council_id, summary, need_confirm, confirm_man_ids, confirm_man_names, is_confirm, confirm_man_id, confirm_man_name, confirm_result, confirm_remark, raw_add_time, raw_update_time from council_risk_summary where (1 = 1)</tt>
	 *
	 *	@param councilRiskSummary
	 *	@return List<CouncilRiskSummaryDO>
	 *	@throws DataAccessException
	 */	 
    public List<CouncilRiskSummaryDO> findByCondition(CouncilRiskSummaryDO councilRiskSummary) throws DataAccessException {
    	if (councilRiskSummary == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


        return getSqlMapClientTemplate().queryForList("MS-COUNCIL-RISK-SUMMARY-FIND-BY-CONDITION", councilRiskSummary);

    }

}