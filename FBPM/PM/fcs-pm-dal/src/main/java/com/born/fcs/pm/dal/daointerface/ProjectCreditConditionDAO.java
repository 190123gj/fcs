/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.ProjectCreditConditionDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>project_credit_condition</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_credit_condition.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ProjectCreditConditionDAO {
	/**
	 *  Insert one <tt>ProjectCreditConditionDO</tt> object to DB table <tt>project_credit_condition</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_credit_condition(project_code,item_id,item_desc,asset_id,type,is_confirm,confirm_man_id,confirm_man_account,confirm_man_name,confirm_date,contract_no,contract_agreement_url,text_info,right_vouche,remark,status,release_status,release_id,release_reason,release_gist,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectCreditCondition
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectCreditConditionDO projectCreditCondition) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_credit_condition</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_credit_condition set project_code=?, item_id=?, item_desc=?, asset_id=?, type=?, is_confirm=?, confirm_man_id=?, confirm_man_account=?, confirm_man_name=?, confirm_date=?, contract_no=?, contract_agreement_url=?, text_info=?, right_vouche=?, remark=?, status=?, release_status=?, release_id=?, release_reason=?, release_gist=? where (id = ?)</tt>
	 *
	 *	@param projectCreditCondition
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectCreditConditionDO projectCreditCondition) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_credit_condition</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_credit_condition set project_code=?, item_id=?, item_desc=?, asset_id=?, type=?, is_confirm=?, confirm_man_id=?, confirm_man_account=?, confirm_man_name=?, confirm_date=?, contract_no=?, contract_agreement_url=?, text_info=?, right_vouche=?, remark=?, status=? where (id = ?)</tt>
	 *
	 *	@param projectCreditCondition
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCreditById(ProjectCreditConditionDO projectCreditCondition) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_credit_condition</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_credit_condition set release_status=?, release_id=?, release_reason=?, release_gist=? where (id = ?)</tt>
	 *
	 *	@param projectCreditCondition
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateReleaseById(ProjectCreditConditionDO projectCreditCondition) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_credit_condition</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_credit_condition set release_status=? where (release_id = ?)</tt>
	 *
	 *	@param projectCreditCondition
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateReleaseStatusByReaseId(ProjectCreditConditionDO projectCreditCondition) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_credit_condition</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_credit_condition where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return ProjectCreditConditionDO
	 *	@throws DataAccessException
	 */	 
    public ProjectCreditConditionDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_credit_condition</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_credit_condition where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return List<ProjectCreditConditionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectCreditConditionDO> findByProjectCode(String projectCode) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_credit_condition</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_credit_condition where ((project_code = ?) AND (status = ?) AND (contract_no IS NOT NULL))</tt>
	 *
	 *	@param projectCode
	 *	@param status
	 *	@return List<ProjectCreditConditionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectCreditConditionDO> findByProjectCodeAndStatus(String projectCode, String status) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_credit_condition</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_credit_condition where ((project_code = ?) AND (item_id = ?) AND (type = ?))</tt>
	 *
	 *	@param projectCode
	 *	@param itemId
	 *	@param type
	 *	@return ProjectCreditConditionDO
	 *	@throws DataAccessException
	 */	 
    public ProjectCreditConditionDO findByProjectCodeAndItemIdAndType(String projectCode, long itemId, String type) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_credit_condition</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_credit_condition where ((project_code = ?) AND (asset_id = ?))</tt>
	 *
	 *	@param projectCode
	 *	@param assetId
	 *	@return ProjectCreditConditionDO
	 *	@throws DataAccessException
	 */	 
    public ProjectCreditConditionDO findByProjectCodeAssetId(String projectCode, long assetId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_credit_condition</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_credit_condition where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_credit_condition</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_credit_condition where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectCode(String projectCode) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_credit_condition</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_credit_condition where (1 = 1)</tt>
	 *
	 *	@param projectCreditCondition
	 *	@param limitStart
	 *	@param pageSize
	 *	@param statusList
	 *	@return List<ProjectCreditConditionDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectCreditConditionDO> findByCondition(ProjectCreditConditionDO projectCreditCondition, long limitStart, long pageSize, List statusList) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_credit_condition</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from project_credit_condition where (1 = 1)</tt>
	 *
	 *	@param projectCreditCondition
	 *	@param statusList
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ProjectCreditConditionDO projectCreditCondition, List statusList) throws DataAccessException;

}