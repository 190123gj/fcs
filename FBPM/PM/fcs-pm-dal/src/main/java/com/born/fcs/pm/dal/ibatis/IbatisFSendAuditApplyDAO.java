/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.FSendAuditApplyDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.FSendAuditApplyDO;
import org.springframework.dao.DataAccessException;

/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.FSendAuditApplyDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_send_audit_apply.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 

public class IbatisFSendAuditApplyDAO extends SqlMapClientDaoSupport implements FSendAuditApplyDAO {
	/**
	 *  Insert one <tt>FSendAuditApplyDO</tt> object to DB table <tt>f_send_audit_apply</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_send_audit_apply(form_id,project_code,project_name,customer_id,customer_name,is_investigation_rule,is_data_correct,is_legal,is_company_rule,is_purpose_real,is_amount_correct,is_timelimit_repayway_rational,other,operation_state_review,financial_kpi_review,repay_source_review,counter_guarantee_review,risk_precaution,conclusion_suggestion,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FSendAuditApply
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FSendAuditApplyDO FSendAuditApply) throws DataAccessException {
    	if (FSendAuditApply == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-SEND-AUDIT-APPLY-INSERT", FSendAuditApply);

        return FSendAuditApply.getApplyId();
    }

	/**
	 *  Update DB table <tt>f_send_audit_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_send_audit_apply set form_id=?, project_code=?, project_name=?, customer_id=?, customer_name=?, is_investigation_rule=?, is_data_correct=?, is_legal=?, is_company_rule=?, is_purpose_real=?, is_amount_correct=?, is_timelimit_repayway_rational=?, other=?, operation_state_review=?, financial_kpi_review=?, repay_source_review=?, counter_guarantee_review=?, risk_precaution=?, conclusion_suggestion=? where (apply_id = ?)</tt>
	 *
	 *	@param FSendAuditApply
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FSendAuditApplyDO FSendAuditApply) throws DataAccessException {
    	if (FSendAuditApply == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-SEND-AUDIT-APPLY-UPDATE", FSendAuditApply);
    }

	/**
	 *  Update DB table <tt>f_send_audit_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_send_audit_apply set project_code=?, project_name=?, customer_id=?, customer_name=?, is_investigation_rule=?, is_data_correct=?, is_legal=?, is_company_rule=?, is_purpose_real=?, is_amount_correct=?, is_timelimit_repayway_rational=?, other=?, operation_state_review=?, financial_kpi_review=?, repay_source_review=?, counter_guarantee_review=?, risk_precaution=?, conclusion_suggestion=? where (form_id = ?)</tt>
	 *
	 *	@param FSendAuditApply
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByFormId(FSendAuditApplyDO FSendAuditApply) throws DataAccessException {
    	if (FSendAuditApply == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-SEND-AUDIT-APPLY-UPDATE-BY-FORM-ID", FSendAuditApply);
    }

	/**
	 *  Update DB table <tt>f_send_audit_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_send_audit_apply set form_id=?, project_name=?, customer_id=?, customer_name=?, is_investigation_rule=?, is_data_correct=?, is_legal=?, is_company_rule=?, is_purpose_real=?, is_amount_correct=?, is_timelimit_repayway_rational=?, other=?, operation_state_review=?, financial_kpi_review=?, repay_source_review=?, counter_guarantee_review=?, risk_precaution=?, conclusion_suggestion=? where (project_code = ?)</tt>
	 *
	 *	@param FSendAuditApply
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByProjectCode(FSendAuditApplyDO FSendAuditApply) throws DataAccessException {
    	if (FSendAuditApply == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-SEND-AUDIT-APPLY-UPDATE-BY-PROJECT-CODE", FSendAuditApply);
    }

	/**
	 *  Query DB table <tt>f_send_audit_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_send_audit_apply where (apply_id = ?)</tt>
	 *
	 *	@param applyId
	 *	@return FSendAuditApplyDO
	 *	@throws DataAccessException
	 */	 
    public FSendAuditApplyDO findById(long applyId) throws DataAccessException {
        Long param = new Long(applyId);

        return (FSendAuditApplyDO) getSqlMapClientTemplate().queryForObject("MS-F-SEND-AUDIT-APPLY-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_send_audit_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_send_audit_apply where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FSendAuditApplyDO
	 *	@throws DataAccessException
	 */	 
    public FSendAuditApplyDO findByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return (FSendAuditApplyDO) getSqlMapClientTemplate().queryForObject("MS-F-SEND-AUDIT-APPLY-FIND-BY-FORM-ID", param);

    }

	/**
	 *  Query DB table <tt>f_send_audit_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_send_audit_apply where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return FSendAuditApplyDO
	 *	@throws DataAccessException
	 */	 
    public FSendAuditApplyDO findByProjectCode(String projectCode) throws DataAccessException {

        return (FSendAuditApplyDO) getSqlMapClientTemplate().queryForObject("MS-F-SEND-AUDIT-APPLY-FIND-BY-PROJECT-CODE", projectCode);

    }

	/**
	 *  Delete records from DB table <tt>f_send_audit_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_send_audit_apply where (apply_id = ?)</tt>
	 *
	 *	@param applyId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long applyId) throws DataAccessException {
        Long param = new Long(applyId);

        return getSqlMapClientTemplate().delete("MS-F-SEND-AUDIT-APPLY-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_send_audit_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_send_audit_apply where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException {
        Long param = new Long(formId);

        return getSqlMapClientTemplate().delete("MS-F-SEND-AUDIT-APPLY-DELETE-BY-FORM-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_send_audit_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_send_audit_apply where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectCode(String projectCode) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-F-SEND-AUDIT-APPLY-DELETE-BY-PROJECT-CODE", projectCode);
    }

}