<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_project -->
    <resultMap id="RM-F-PROJECT" class="com.born.fcs.pm.dal.dataobject.FProjectDO">
        <result property="projectId" column="project_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerType" column="customer_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiType" column="busi_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiTypeName" column="busi_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="industryCode" column="industry_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="industryName" column="industry_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="timeLimit" column="time_limit" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="timeUnit" column="time_unit" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="otherCounterGuarntee" column="other_counter_guarntee" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="busiManagerId" column="busi_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="busiManagerAccount" column="busi_manager_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiManagerName" column="busi_manager_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiManagerbId" column="busi_managerb_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="busiManagerbAccount" column="busi_managerb_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiManagerbName" column="busi_managerb_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="deptId" column="dept_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="deptCode" column="dept_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="deptName" column="dept_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="deptPath" column="dept_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="deptPathName" column="dept_path_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFProjectDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFProjectDAO.insert -->
    <insert id="MS-F-PROJECT-INSERT">
        insert /*MS-YRD-F-PROJECT-INSERT*/ into f_project(project_code,project_name,form_id,customer_id,customer_name,customer_type,busi_type,busi_type_name,industry_code,industry_name,time_limit,time_unit,amount,busi_manager_id,busi_manager_account,busi_manager_name,busi_managerb_id,busi_managerb_account,busi_managerb_name,dept_id,dept_code,dept_name,dept_path,dept_path_name,raw_add_time,other_counter_guarntee,remark) values (#projectCode#, #projectName#, #formId#, #customerId#, #customerName#, #customerType#, #busiType#, #busiTypeName#,#industryCode#,#industryName#, #timeLimit#, #timeUnit#, #amount.cent#, #busiManagerId#, #busiManagerAccount#, #busiManagerName#, #busiManagerbId#, #busiManagerbAccount#, #busiManagerbName#, #deptId#, #deptCode#, #deptName#, #deptPath#, #deptPathName#, SYSDATE(),#otherCounterGuarntee#,#remark#)
				<selectKey  resultClass ="long"  keyProperty ="projectId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFProjectDAO.update -->
    <update id="MS-F-PROJECT-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-UPDATE*/ f_project set project_code=#projectCode#, project_name=#projectName#, form_id=#formId#, customer_id=#customerId#, customer_name=#customerName#, customer_type=#customerType#, busi_type=#busiType#, busi_type_name=#busiTypeName#, industry_code=#industryCode#, industry_name=#industryName#, time_limit=#timeLimit#, time_unit=#timeUnit#, amount=#amount.cent#, busi_manager_id=#busiManagerId#, busi_manager_account=#busiManagerAccount#, busi_manager_name=#busiManagerName#, busi_managerb_id=#busiManagerbId#, busi_managerb_account=#busiManagerbAccount#, busi_managerb_name=#busiManagerbName#, dept_id=#deptId#, dept_code=#deptCode#, dept_name=#deptName#, dept_path=#deptPath#, dept_path_name=#deptPathName#, other_counter_guarntee=#otherCounterGuarntee#, remark=#remark# where (project_id = #projectId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectDAO.updateCustomInfoByFormId -->
    <update id="MS-F-PROJECT-UPDATE-CUSTOM-INFO-BY-FORM-ID">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-UPDATE-CUSTOM-INFO-BY-FORM-ID*/ f_project set customer_id=#customerId#, customer_name=#customerName#, customer_type=#customerType#, industry_code=#industryCode#, industry_name=#industryName# where (form_id = #formId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectDAO.updateByProjectCode -->
    <update id="MS-F-PROJECT-UPDATE-BY-PROJECT-CODE">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-UPDATE-BY-PROJECT-CODE*/ f_project set project_name=#projectName#, form_id=#formId#, customer_id=#customerId#, customer_name=#customerName#, customer_type=#customerType#, busi_type=#busiType#, busi_type_name=#busiTypeName#, industry_code=#industryCode#, industry_name=#industryName#, time_limit=#timeLimit#, time_unit=#timeUnit#, amount=#amount.cent#, busi_manager_id=#busiManagerId#, busi_manager_account=#busiManagerAccount#, busi_manager_name=#busiManagerName#, busi_managerb_id=#busiManagerbId#, busi_managerb_account=#busiManagerbAccount#, busi_managerb_name=#busiManagerbName#, dept_id=#deptId#, dept_code=#deptCode#, dept_name=#deptName#, dept_path=#deptPath#, dept_path_name=#deptPathName#, other_counter_guarntee=#otherCounterGuarntee#, remark=#remark# where (project_code = #projectCode#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectDAO.updateByFormId -->
    <update id="MS-F-PROJECT-UPDATE-BY-FORM-ID">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-UPDATE-BY-FORM-ID*/ f_project set project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, customer_type=#customerType#, busi_type=#busiType#, busi_type_name=#busiTypeName#, industry_code=#industryCode#, industry_name=#industryName#, time_limit=#timeLimit#, time_unit=#timeUnit#, amount=#amount.cent#, busi_manager_id=#busiManagerId#, busi_manager_account=#busiManagerAccount#, busi_manager_name=#busiManagerName#, busi_managerb_id=#busiManagerbId#, busi_managerb_account=#busiManagerbAccount#, busi_managerb_name=#busiManagerbName#, dept_id=#deptId#, dept_code=#deptCode#, dept_name=#deptName#, dept_path=#deptPath#, dept_path_name=#deptPathName#, other_counter_guarntee=#otherCounterGuarntee#, remark=#remark# where (form_id = #formId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectDAO.findById -->
    <select id="MS-F-PROJECT-FIND-BY-ID" resultMap="RM-F-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-FIND-BY-ID*/ * from f_project where (project_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectDAO.findByFormId -->
    <select id="MS-F-PROJECT-FIND-BY-FORM-ID" resultMap="RM-F-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-FIND-BY-FORM-ID*/ * from f_project where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectDAO.findByProjectCode -->
    <select id="MS-F-PROJECT-FIND-BY-PROJECT-CODE" resultMap="RM-F-PROJECT">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-FIND-BY-PROJECT-CODE*/ * from f_project where (project_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectDAO.deleteById -->
    <delete id="MS-F-PROJECT-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-DELETE-BY-ID*/ from f_project where (project_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectDAO.deleteByFormId -->
    <delete id="MS-F-PROJECT-DELETE-BY-FORM-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-DELETE-BY-FORM-ID*/ from f_project where (form_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectDAO.deleteByProjectCode -->
    <delete id="MS-F-PROJECT-DELETE-BY-PROJECT-CODE">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-DELETE-BY-PROJECT-CODE*/ from f_project where (project_code = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectDAO.findByCondition -->
    <select id="MS-F-PROJECT-FIND-BY-CONDITION" resultMap="RM-F-PROJECT">
        SELECT /*MS-YRD-F-PROJECT-FIND-BY-CONDITION*/ * from f_project where 1=1
 	        <dynamic>
	            <isGreaterThan property="FProjcet.projectId"  compareValue="0" prepend=" and ">
	                project_id = #FProjcet.projectId#
	            </isGreaterThan>
	            <isGreaterThan property="FProjcet.formId"  compareValue="0" prepend=" and ">
	                form_id = #FProjcet.formId#
	            </isGreaterThan>
	            <isGreaterThan property="FProjcet.customerId"  compareValue="0" prepend=" and ">
	                customer_id = #FProjcet.customerId#
	            </isGreaterThan>
	            <isGreaterThan property="FProjcet.busiManagerId"  compareValue="0" prepend=" and ">
	                (busi_manager_id = #FProjcet.busiManagerId# OR busi_managerb_id = #FProjcet.busiManagerId#)
	            </isGreaterThan>
	            <isGreaterThan property="FProjcet.busiManagerbId"  compareValue="0" prepend=" and ">
	                (busi_manager_id = #FProjcet.busiManagerbId# OR busi_managerb_id = #FProjcet.busiManagerbId#)
	            </isGreaterThan>
	            <isGreaterThan property="FProjcet.deptId"  compareValue="0" prepend=" and ">
	                dept_id = #FProjcet.deptId#
	            </isGreaterThan>
	             <isNotEmpty property="FProjcet.projectCode" prepend=" and ">
	               project_code = #FProjcet.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="FProjcet.projectName" prepend=" and ">
	               project_name like concat('%',#FProjcet.projectName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FProjcet.customerName" prepend=" and ">
	               customer_name like concat('%',#FProjcet.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FProjcet.busiManagerName" prepend=" and ">
	               busi_manager_name like concat('%',#FProjcet.busiManagerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FProjcet.busiManagerbName" prepend=" and ">
	               busi_managerb_name like concat('%',#FProjcet.busiManagerbName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FProjcet.deptName" prepend=" and ">
	               dept_name like concat('%',#FProjcet.deptName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FProjcet.deptPath" prepend=" and ">
	               dept_path like concat(#deptPath#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="FProjcet.deptPathName" prepend=" and ">
	               dept_path_name like concat(#deptPathName#,'%')
	            </isNotEmpty>
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisFProjectDAO.findByConditionCount -->
    <select id="MS-F-PROJECT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-PROJECT-FIND-BY-CONDITION-COUNT*/  count(*)  FROM f_project  where 1=1
 	        <dynamic>
	            <isGreaterThan property="projectId"  compareValue="0" prepend=" and ">
	                project_id = #projectId#
	            </isGreaterThan>
	            <isGreaterThan property="formId"  compareValue="0" prepend=" and ">
	                form_id = #formId#
	            </isGreaterThan>
	            <isGreaterThan property="customerId"  compareValue="0" prepend=" and ">
	                customer_id = #customerId#
	            </isGreaterThan>
	            <isGreaterThan property="busiManagerId"  compareValue="0" prepend=" and ">
	                (busi_manager_id = #busiManagerId# OR busi_managerb_id = #busiManagerId#)
	            </isGreaterThan>
	            <isGreaterThan property="busiManagerbId"  compareValue="0" prepend=" and ">
	                (busi_manager_id = #busiManagerbId# OR busi_managerb_id = #busiManagerbId#)
	            </isGreaterThan>
	            <isGreaterThan property="deptId"  compareValue="0" prepend=" and ">
	                dept_id = #deptId#
	            </isGreaterThan>
	             <isNotEmpty property="projectCode" prepend=" and ">
	               project_code = #projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="projectName" prepend=" and ">
	               project_name like concat('%',#projectName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="customerName" prepend=" and ">
	               customer_name like concat('%',#customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="busiManagerName" prepend=" and ">
	               busi_manager_name like concat('%',#busiManagerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="busiManagerbName" prepend=" and ">
	               busi_managerb_name like concat('%',#busiManagerbName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="deptName" prepend=" and ">
	               dept_name like concat('%',#deptName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="deptPath" prepend=" and ">
	               dept_path like concat(#deptPath#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="deptPathName" prepend=" and ">
	               dept_path_name like concat(#deptPathName#,'%')
	            </isNotEmpty>	            
	        </dynamic>
    </select>

</sqlMap>
