<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table financial_product -->
    <resultMap id="RM-FINANCIAL-PRODUCT" class="com.born.fcs.pm.dal.dataobject.FinancialProductDO">
        <result property="productId" column="product_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="productType" column="product_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="productName" column="product_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="interestType" column="interest_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="termType" column="term_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="timeLimit" column="time_limit" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="timeUnit" column="time_unit" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="issueInstitution" column="issue_institution" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="interestRate" column="interest_rate" javaType="double" jdbcType="DECIMAL" nullValue="0"/>
        <result property="interestSettlementWay" column="interest_settlement_way" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="price" column="price" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="sellStatus" column="sell_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="riskLevel" column="risk_level" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFinancialProductDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFinancialProductDAO.insert -->
    <insert id="MS-FINANCIAL-PRODUCT-INSERT">
        INSERT /*MS-YRD-FINANCIAL-PRODUCT-INSERT*/ INTO financial_product
					(product_type,
						product_name,
						interest_type,
						term_type,
						time_limit,
						time_unit,
						issue_institution,
						interest_rate,
						interest_settlement_way,
						price,
						risk_level,
						sell_status) 
					VALUES (#productType#, #productName#, #interestType#, #termType#, #timeLimit#, #timeUnit#, #issueInstitution#, #interestRate#, #interestSettlementWay#,#price#,#riskLevel#,#sellStatus#)
				<selectKey  resultClass ="long"  keyProperty ="productId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFinancialProductDAO.update -->
    <update id="MS-FINANCIAL-PRODUCT-UPDATE">
    <![CDATA[
        update /*MS-YRD-FINANCIAL-PRODUCT-UPDATE*/ financial_product set product_type=#productType#, product_name=#productName#, interest_type=#interestType#, term_type=#termType#, time_limit=#timeLimit#, time_unit=#timeUnit#, issue_institution=#issueInstitution#, interest_rate=#interestRate#, interest_settlement_way=#interestSettlementWay#, price=#price.cent#, risk_level=#riskLevel#, sell_status=#sellStatus# where (product_id = #productId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFinancialProductDAO.findById -->
    <select id="MS-FINANCIAL-PRODUCT-FIND-BY-ID" resultMap="RM-FINANCIAL-PRODUCT">
    <![CDATA[
        select /*MS-YRD-FINANCIAL-PRODUCT-FIND-BY-ID*/ * from financial_product where (product_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFinancialProductDAO.deleteById -->
    <delete id="MS-FINANCIAL-PRODUCT-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-FINANCIAL-PRODUCT-DELETE-BY-ID*/ from financial_product where (product_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFinancialProductDAO.findByCondition -->
    <select id="MS-FINANCIAL-PRODUCT-FIND-BY-CONDITION" resultMap="RM-FINANCIAL-PRODUCT">
        SELECT /*MS-YRD-FINANCIAL-PRODUCT-FIND-BY-CONDITION*/ * from financial_product where 1=1
	        <dynamic>
	            <isGreaterThan property="financialProduct.productId"  compareValue="0" prepend=" and ">
	               product_id = #financialProduct.productId#
	            </isGreaterThan>
	             <isNotEmpty property="financialProduct.productType" prepend=" and ">
	               product_type = #financialProduct.productType#
	            </isNotEmpty>
	             <isNotEmpty property="financialProduct.interestType" prepend=" and ">
	               interest_type = #financialProduct.interestType#
	            </isNotEmpty>
	             <isNotEmpty property="financialProduct.termType" prepend=" and ">
	               term_type = #financialProduct.termType#
	            </isNotEmpty>
	             <isNotEmpty property="financialProduct.sellStatus" prepend=" and ">
	               sell_status = #financialProduct.sellStatus#
	            </isNotEmpty>
	             <isNotEmpty property="financialProduct.issueInstitution" prepend=" and ">
	               issue_institution like concat('%',#financialProduct.issueInstitution#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="financialProduct.productName" prepend=" and ">
	               product_name like concat('%',#financialProduct.productName#,'%')
	            </isNotEmpty>
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisFinancialProductDAO.findByConditionCount -->
    <select id="MS-FINANCIAL-PRODUCT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-FINANCIAL-PRODUCT-FIND-BY-CONDITION-COUNT*/  count(*)  FROM financial_product  where 1=1
	        <dynamic>
	            <isGreaterThan property="productId"  compareValue="0" prepend=" and ">
	               product_id = #productId#
	            </isGreaterThan>
	             <isNotEmpty property="productType" prepend=" and ">
	               product_type = #productType#
	            </isNotEmpty>
	             <isNotEmpty property="termType" prepend=" and ">
	               term_type = #termType#
	            </isNotEmpty>	            
	             <isNotEmpty property="interestType" prepend=" and ">
	               interest_type = #interestType#
	            </isNotEmpty>	            
	             <isNotEmpty property="sellStatus" prepend=" and ">
	               sell_status = #sellStatus#
	            </isNotEmpty>
	             <isNotEmpty property="issueInstitution" prepend=" and ">
	               issue_institution like concat('%',#issueInstitution#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="productName" prepend=" and ">
	               product_name like concat('%',#productName#,'%')
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
