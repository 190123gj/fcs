<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_project_contract -->
    <resultMap id="RM-F-PROJECT-CONTRACT" class="com.born.fcs.pm.dal.dataobject.FProjectContractDO">
        <result property="contractId" column="contract_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="freeFlow" column="free_flow" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="applyType" column="apply_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFProjectContractDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFProjectContractDAO.insert -->
    <insert id="MS-F-PROJECT-CONTRACT-INSERT">
        INSERT /*MS-YRD-F-PROJECT-CONTRACT-INSERT*/ INTO f_project_contract(contract_id,form_id,project_code,project_name,customer_id,customer_name,free_flow,apply_type,raw_add_time)
		   VALUES (#contractId#,#formId#,#projectCode#,#projectName#,#customerId#,#customerName#,#freeFlow#,#applyType#,#rawAddTime#)
	        <selectKey  resultClass ="long"  keyProperty ="contractId" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFProjectContractDAO.update -->
    <update id="MS-F-PROJECT-CONTRACT-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-CONTRACT-UPDATE*/ f_project_contract set form_id=#formId#, project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, free_flow=#freeFlow# where (contract_id = #contractId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectContractDAO.findById -->
    <select id="MS-F-PROJECT-CONTRACT-FIND-BY-ID" resultMap="RM-F-PROJECT-CONTRACT">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-FIND-BY-ID*/ contract_id, form_id, project_code, project_name, customer_id, customer_name, raw_add_time, free_flow, apply_type, raw_update_time from f_project_contract where (contract_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractDAO.findByFormId -->
    <select id="MS-F-PROJECT-CONTRACT-FIND-BY-FORM-ID" resultMap="RM-F-PROJECT-CONTRACT">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-FIND-BY-FORM-ID*/ contract_id, form_id, project_code, project_name, customer_id, customer_name, free_flow, apply_type, raw_add_time, raw_update_time from f_project_contract where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractDAO.findByProjectCode -->
    <select id="MS-F-PROJECT-CONTRACT-FIND-BY-PROJECT-CODE" resultMap="RM-F-PROJECT-CONTRACT">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-FIND-BY-PROJECT-CODE*/ contract_id, form_id, project_code, project_name, customer_id, customer_name, free_flow, apply_type, raw_add_time, raw_update_time from f_project_contract where (project_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractDAO.deleteById -->
    <delete id="MS-F-PROJECT-CONTRACT-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-CONTRACT-DELETE-BY-ID*/ from f_project_contract where (contract_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectContractDAO.deleteByFormId -->
    <delete id="MS-F-PROJECT-CONTRACT-DELETE-BY-FORM-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-CONTRACT-DELETE-BY-FORM-ID*/ from f_project_contract where (form_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectContractDAO.findAllCount -->
    <select id="MS-F-PROJECT-CONTRACT-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-FIND-ALL-COUNT*/ COUNT(*) from f_project_contract
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractDAO.findByCondition -->
    <select id="MS-F-PROJECT-CONTRACT-FIND-BY-CONDITION" resultMap="RM-F-PROJECT-CONTRACT">
        SELECT /*MS-YRD-F-PROJECT-CONTRACT-FIND-BY-CONDITION*/  *  FROM f_project_contract    
			WHERE 1=1 

			<dynamic>
			
			<isGreaterThan property="FProjectContract.contractId" compareValue="0" prepend=" and ">
				<![CDATA[ contract_id = #FProjectContract.contractId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="FProjectContract.formId" compareValue="0" prepend=" and ">
				<![CDATA[ form_id = #FProjectContract.formId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="FProjectContract.customerId" compareValue="0" prepend=" and ">
				<![CDATA[ customer_id = #FProjectContract.customerId# ]]>
			</isGreaterThan>
			
			<isNotEmpty property="FProjectContract.projectCode"  prepend=" and ">
				<![CDATA[ project_code = #FProjectContract.projectCode# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FProjectContract.projectName"  prepend=" and ">
				<![CDATA[ project_name = #FProjectContract.projectName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FProjectContract.customerName"  prepend=" and ">
				<![CDATA[ customer_name = #FProjectContract.customerName# ]]>
			</isNotEmpty>
			

			</dynamic>
			order by id desc
			<isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisFProjectContractDAO.findByConditionCount -->
    <select id="MS-F-PROJECT-CONTRACT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-PROJECT-CONTRACT-FIND-BY-CONDITION-COUNT*/  count(*) totalCount  FROM f_project_contract 
			WHERE 1=1
			<dynamic>

			<isGreaterThan property="contractId" compareValue="0" prepend=" and ">
				<![CDATA[ contract_id = #contractId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="formId" compareValue="0" prepend=" and ">
				<![CDATA[ form_id = #formId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="customerId" compareValue="0" prepend=" and ">
				<![CDATA[ customer_id = #customerId# ]]>
			</isGreaterThan>
			
			<isNotEmpty property="projectCode"  prepend=" and ">
				<![CDATA[ project_code = #projectCode# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="projectName"  prepend=" and ">
				<![CDATA[ project_name = #projectName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="customerName"  prepend=" and ">
				<![CDATA[ customer_name = #customerName# ]]>
			</isNotEmpty>
			
			
			</dynamic>
    </select>

</sqlMap>
