<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table recover_project -->
    <resultMap id="RM-RECOVER-PROJECT" class="com.born.fcs.pm.dal.dataobject.RecoverProjectDO">
        <result property="recoverId" column="recover_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectName" column="project_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerId" column="customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="busiManagerId" column="busi_manager_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="busiManagerName" column="busi_manager_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisRecoverProjectDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisRecoverProjectDAO.insert -->
    <insert id="MS-RECOVER-PROJECT-INSERT">
        INSERT /*MS-YRD-RECOVER-PROJECT-INSERT*/ INTO recover_project
					(project_code,
						project_name,
						customer_id,
						customer_name,
						busi_manager_id,
						busi_manager_name,
						status,
						raw_add_time)  
					VALUES (#projectCode#, #projectName#, #customerId#, #customerName#, #busiManagerId#, #busiManagerName#, #status#, #rawAddTime#)
				<selectKey  resultClass ="long"  keyProperty ="recoverId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisRecoverProjectDAO.update -->
    <update id="MS-RECOVER-PROJECT-UPDATE">
    <![CDATA[
        update /*MS-YRD-RECOVER-PROJECT-UPDATE*/ recover_project set project_code=#projectCode#, project_name=#projectName#, customer_id=#customerId#, customer_name=#customerName#, busi_manager_id=#busiManagerId#, busi_manager_name=#busiManagerName#, status=#status# where (recover_id = #recoverId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisRecoverProjectDAO.findById -->
    <select id="MS-RECOVER-PROJECT-FIND-BY-ID" resultMap="RM-RECOVER-PROJECT">
    <![CDATA[
        select /*MS-YRD-RECOVER-PROJECT-FIND-BY-ID*/ * from recover_project where (recover_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisRecoverProjectDAO.deleteById -->
    <delete id="MS-RECOVER-PROJECT-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-RECOVER-PROJECT-DELETE-BY-ID*/ from recover_project where (recover_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisRecoverProjectDAO.findByCondition -->
    <select id="MS-RECOVER-PROJECT-FIND-BY-CONDITION" resultMap="RM-RECOVER-PROJECT">
        SELECT /*MS-YRD-RECOVER-PROJECT-FIND-BY-CONDITION*/ * from recover_project where 1=1
	        <dynamic>
	            <isGreaterThan property="recoverProject.recoverId"  compareValue="0" prepend=" and ">
	                recover_id = #recoverProject.recoverId#
	            </isGreaterThan>
	             <isNotEmpty property="recoverProject.projectCode" prepend=" and ">
	               project_code = #recoverProject.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.projectName" prepend=" and ">
	               project_name like concat('%',#recoverProject.projectName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.customerName" prepend=" and ">
	               customer_name like concat('%',#recoverProject.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.busiManagerName" prepend=" and ">
	               busi_manager_name like concat('%',#recoverProject.busiManagerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.status" prepend=" and ">
	               status = #recoverProject.status#
	            </isNotEmpty>
	             <isNotEmpty property="updateTimeBegin" prepend=" and ">
	            	<![CDATA[ start_time >= #updateTimeBegin#  ]]>
	             </isNotEmpty>	            
	             <isNotEmpty property="updateTimeEnd" prepend=" and ">
	            	<![CDATA[ start_time <= #updateTimeEnd#  ]]>
	             </isNotEmpty>	            
	        </dynamic>
            ORDER by recover_id
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisRecoverProjectDAO.findByConditionCount -->
    <select id="MS-RECOVER-PROJECT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-RECOVER-PROJECT-FIND-BY-CONDITION-COUNT*/  count(*)  FROM recover_project  where 1=1
	        <dynamic>
	            <isGreaterThan property="recoverProject.recoverId"  compareValue="0" prepend=" and ">
	                recover_id = #recoverProject.recoverId#
	            </isGreaterThan>
	             <isNotEmpty property="recoverProject.projectCode" prepend=" and ">
	               project_code = #recoverProject.projectCode#
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.projectName" prepend=" and ">
	               project_name like concat('%',#recoverProject.projectName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.customerName" prepend=" and ">
	               customer_name like concat('%',#recoverProject.customerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.busiManagerName" prepend=" and ">
	               busi_manager_name like concat('%',#recoverProject.busiManagerName#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="recoverProject.status" prepend=" and ">
	               status = #recoverProject.status#
	            </isNotEmpty>
	             <isNotEmpty property="updateTimeBegin" prepend=" and ">
	            	<![CDATA[ start_time >= #updateTimeBegin#  ]]>
	             </isNotEmpty>	            
	             <isNotEmpty property="updateTimeEnd" prepend=" and ">
	            	<![CDATA[ start_time <= #updateTimeEnd#  ]]>
	             </isNotEmpty>	            
	        </dynamic>
    </select>

</sqlMap>
