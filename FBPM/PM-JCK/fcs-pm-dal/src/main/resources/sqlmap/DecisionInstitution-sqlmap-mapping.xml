<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table decision_institution -->
    <resultMap id="RM-DECISION-INSTITUTION" class="com.born.fcs.pm.dal.dataobject.DecisionInstitutionDO">
        <result property="institutionId" column="institution_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="institutionName" column="institution_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="institutionMembers" column="institution_members" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisDecisionInstitutionDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisDecisionInstitutionDAO.insert -->
    <insert id="MS-DECISION-INSTITUTION-INSERT">
        INSERT /*MS-YRD-DECISION-INSTITUTION-INSERT*/ INTO decision_institution(institution_name,institution_members,delete_mark,raw_add_time) VALUES (#institutionName#,#institutionMembers#,#deleteMark#,#rawAddTime#)
		        <selectKey  resultClass ="long"  keyProperty ="institutionId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisDecisionInstitutionDAO.update -->
    <update id="MS-DECISION-INSTITUTION-UPDATE">
    <![CDATA[
        update /*MS-YRD-DECISION-INSTITUTION-UPDATE*/ decision_institution set institution_name=#institutionName#, institution_members=#institutionMembers#,delete_mark=#deleteMark# where (institution_id = #institutionId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisDecisionInstitutionDAO.findById -->
    <select id="MS-DECISION-INSTITUTION-FIND-BY-ID" resultMap="RM-DECISION-INSTITUTION">
    <![CDATA[
        select /*MS-YRD-DECISION-INSTITUTION-FIND-BY-ID*/ * from decision_institution where (institution_id = #value# and delete_mark="0")
    ]]>
    </select>

    <!-- mapped statement for IbatisDecisionInstitutionDAO.deleteById -->
    <delete id="MS-DECISION-INSTITUTION-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-DECISION-INSTITUTION-DELETE-BY-ID*/ from decision_institution where (institution_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisDecisionInstitutionDAO.findDecisionInstitutionByInstitutionName -->
    <select id="MS-DECISION-INSTITUTION-FIND-DECISION-INSTITUTION-BY-INSTITUTION-NAME" resultMap="RM-DECISION-INSTITUTION">
       select /*MS-YRD-DECISION-INSTITUTION-FIND-BY-ID*/ * from decision_institution where (institution_name = #value# and delete_mark="0")
    </select>

    <!-- mapped statement for IbatisDecisionInstitutionDAO.findByConditionCount -->
    <select id="MS-DECISION-INSTITUTION-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-DECISION-INSTITUTION-FIND-BY-CONDITION-COUNT*/  count(*)  FROM decision_institution WHERE  1=1 and delete_mark="0" 
	        <dynamic>
	            <isNotEmpty property="decisionInstitution.institutionName" prepend=" and ">
	               institution_name LIKE CONCAT('%',#decisionInstitution.institutionName#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionInstitution.institutionMembers" prepend=" and ">
	               institution_members LIKE CONCAT('%',#decisionInstitution.institutionMembers#,'%')
	            </isNotEmpty>
	        </dynamic>
    </select>

    <!-- mapped statement for IbatisDecisionInstitutionDAO.findByCondition -->
    <select id="MS-DECISION-INSTITUTION-FIND-BY-CONDITION" resultMap="RM-DECISION-INSTITUTION">
        SELECT /*MS-YRD-DECISION-INSTITUTION-FIND-BY-CONDITION*/ * from decision_institution where 1=1 and delete_mark="0"
	        <dynamic>
	            <isNotEmpty property="decisionInstitution.institutionName" prepend=" and ">
	               institution_name LIKE CONCAT('%',#decisionInstitution.institutionName#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="decisionInstitution.institutionMembers" prepend=" and ">
	               institution_members LIKE CONCAT('%',#decisionInstitution.institutionMembers#,'%')
	            </isNotEmpty>
	        </dynamic>   
	    <isNotEmpty property="sortCol" prepend=" order by ">
            $sortCol$
            <isNotEmpty property="sortOrder">
                $sortOrder$
            </isNotEmpty>
        </isNotEmpty>
        <isEmpty property="sortCol" prepend=" ">
            ORDER BY raw_update_time DESC
        </isEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

</sqlMap>
