<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table project_credit_condition -->
    <resultMap id="RM-PROJECT-CREDIT-CONDITION" class="com.born.fcs.pm.dal.dataobject.ProjectCreditConditionDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="assetId" column="asset_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="itemId" column="item_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="itemDesc" column="item_desc" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isConfirm" column="is_confirm" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="confirmManId" column="confirm_man_id" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="confirmManAccount" column="confirm_man_account" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="confirmManName" column="confirm_man_name" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="confirmDate" column="confirm_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="contractNo" column="contract_no" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="contractAgreementUrl" column="contract_agreement_url" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rightVouche" column="right_vouche" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="releaseStatus" column="release_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="releaseId" column="release_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="releaseReason" column="release_reason" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="releaseGist" column="release_gist" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisProjectCreditConditionDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisProjectCreditConditionDAO.insert -->
    <insert id="MS-PROJECT-CREDIT-CONDITION-INSERT">
    <![CDATA[
        insert /*MS-YRD-PROJECT-CREDIT-CONDITION-INSERT*/ into project_credit_condition(project_code,item_id,item_desc,asset_id,type,is_confirm,confirm_man_id,confirm_man_account,confirm_man_name,confirm_date,contract_no,contract_agreement_url,right_vouche,remark,status,release_status,release_id,release_reason,release_gist,raw_add_time) values (#projectCode#, #itemId#, #itemDesc#, #assetId#, #type#, #isConfirm#, #confirmManId#, #confirmManAccount#, #confirmManName#, #confirmDate#, #contractNo#, #contractAgreementUrl#, #rightVouche#, #remark#, #status#, #releaseStatus#, #releaseId#, #releaseReason#, #releaseGist#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.update -->
    <update id="MS-PROJECT-CREDIT-CONDITION-UPDATE">
    <![CDATA[
        update /*MS-YRD-PROJECT-CREDIT-CONDITION-UPDATE*/ project_credit_condition set project_code=#projectCode#, item_id=#itemId#, item_desc=#itemDesc#, asset_id=#assetId#, type=#type#, is_confirm=#isConfirm#, confirm_man_id=#confirmManId#, confirm_man_account=#confirmManAccount#, confirm_man_name=#confirmManName#, confirm_date=#confirmDate#, contract_no=#contractNo#, contract_agreement_url=#contractAgreementUrl#, right_vouche=#rightVouche#, remark=#remark#, status=#status#, release_status=#releaseStatus#, release_id=#releaseId#, release_reason=#releaseReason#, release_gist=#releaseGist# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.updateCreditById -->
    <update id="MS-PROJECT-CREDIT-CONDITION-UPDATE-CREDIT-BY-ID">
    <![CDATA[
        update /*MS-YRD-PROJECT-CREDIT-CONDITION-UPDATE-CREDIT-BY-ID*/ project_credit_condition set project_code=#projectCode#, item_id=#itemId#, item_desc=#itemDesc#, asset_id=#assetId#, type=#type#, is_confirm=#isConfirm#, confirm_man_id=#confirmManId#, confirm_man_account=#confirmManAccount#, confirm_man_name=#confirmManName#, confirm_date=#confirmDate#, contract_no=#contractNo#, contract_agreement_url=#contractAgreementUrl#, right_vouche=#rightVouche#, remark=#remark#, status=#status# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.updateReleaseById -->
    <update id="MS-PROJECT-CREDIT-CONDITION-UPDATE-RELEASE-BY-ID">
    <![CDATA[
        update /*MS-YRD-PROJECT-CREDIT-CONDITION-UPDATE-RELEASE-BY-ID*/ project_credit_condition set release_status=#releaseStatus#, release_id=#releaseId#, release_reason=#releaseReason#, release_gist=#releaseGist# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.updateReleaseStatusByReaseId -->
    <update id="MS-PROJECT-CREDIT-CONDITION-UPDATE-RELEASE-STATUS-BY-REASE-ID">
    <![CDATA[
        update /*MS-YRD-PROJECT-CREDIT-CONDITION-UPDATE-RELEASE-STATUS-BY-REASE-ID*/ project_credit_condition set release_status=#releaseStatus# where (release_id = #releaseId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.findById -->
    <select id="MS-PROJECT-CREDIT-CONDITION-FIND-BY-ID" resultMap="RM-PROJECT-CREDIT-CONDITION">
    <![CDATA[
        select /*MS-YRD-PROJECT-CREDIT-CONDITION-FIND-BY-ID*/ * from project_credit_condition where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.findByProjectCode -->
    <select id="MS-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE" resultMap="RM-PROJECT-CREDIT-CONDITION">
    <![CDATA[
        select /*MS-YRD-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE*/ * from project_credit_condition where (project_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.findByProjectCodeAndStatus -->
    <select id="MS-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE-AND-STATUS" resultMap="RM-PROJECT-CREDIT-CONDITION">
    <![CDATA[
        select /*MS-YRD-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE-AND-STATUS*/ * from project_credit_condition where ((project_code = #projectCode#) AND (status = #status#) AND (contract_no IS NOT NULL))
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.findByProjectCodeAndItemIdAndType -->
    <select id="MS-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE-AND-ITEM-ID-AND-TYPE" resultMap="RM-PROJECT-CREDIT-CONDITION">
    <![CDATA[
        select /*MS-YRD-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE-AND-ITEM-ID-AND-TYPE*/ * from project_credit_condition where ((project_code = #projectCode#) AND (item_id = #itemId#) AND (type = #type#))
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.findByProjectCodeAssetId -->
    <select id="MS-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE-ASSET-ID" resultMap="RM-PROJECT-CREDIT-CONDITION">
    <![CDATA[
        select /*MS-YRD-PROJECT-CREDIT-CONDITION-FIND-BY-PROJECT-CODE-ASSET-ID*/ * from project_credit_condition where ((project_code = #projectCode#) AND (asset_id = #assetId#))
    ]]>
    </select>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.deleteById -->
    <delete id="MS-PROJECT-CREDIT-CONDITION-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PROJECT-CREDIT-CONDITION-DELETE-BY-ID*/ from project_credit_condition where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.deleteByProjectCode -->
    <delete id="MS-PROJECT-CREDIT-CONDITION-DELETE-BY-PROJECT-CODE">
    <![CDATA[
        delete /*MS-YRD-PROJECT-CREDIT-CONDITION-DELETE-BY-PROJECT-CODE*/ from project_credit_condition where (project_code = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.findByCondition -->
    <select id="MS-PROJECT-CREDIT-CONDITION-FIND-BY-CONDITION" resultMap="RM-PROJECT-CREDIT-CONDITION">
        SELECT /*MS-YRD-PROJECT-CREDIT-CONDITION-FIND-BY-CONDITION*/ * from project_credit_condition where 1=1
	        <dynamic>
	            <isGreaterThan property="projectCreditCondition.id"  compareValue="0" prepend=" and ">
	               id = #projectCreditCondition.id#
	            </isGreaterThan>
	            <isGreaterThan property="projectCreditCondition.itemId"  compareValue="0" prepend=" and ">
	                item_id = #projectCreditCondition.itemId#
	            </isGreaterThan>
	            <isGreaterThan property="projectCreditCondition.assetId"  compareValue="0" prepend=" and ">
	                asset_id = #projectCreditCondition.assetId#
	            </isGreaterThan>
	             <isNotEmpty property="projectCreditCondition.itemDesc" prepend=" and ">
	               item_desc = #projectCreditCondition.itemDesc#
	            </isNotEmpty>
	             <isNotEmpty property="projectCreditCondition.type" prepend=" and ">
	               type like concat('%',#projectCreditCondition.type#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectCreditCondition.isConfirm" prepend=" and ">
	               is_confirm like concat('%',#projectCreditCondition.isConfirm#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectCreditCondition.confirmManAccount" prepend=" and ">
	               confirm_man_account like concat('%',#projectCreditCondition.confirmManAccount#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectCreditCondition.confirmManName" prepend=" and ">
	               confirm_man_name like concat('%',#projectCreditCondition.confirmManName#,'%')
	            </isNotEmpty>
	            
	             <isNotEmpty property="projectCreditCondition.contractNo" prepend=" and ">
	               contract_no like concat('%',#projectCreditCondition.contractNo#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="projectCreditCondition.status" prepend=" and ">
	               status like concat('%',#projectCreditCondition.status#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectCreditCondition.projectCode" prepend=" and ">
	               project_code = #projectCreditCondition.projectCode#
	            </isNotEmpty>	
	             <isNotEmpty property="projectCreditCondition.releaseStatus" prepend=" and ">
	               release_status = #projectCreditCondition.releaseStatus#
	            </isNotEmpty>	
	            <isGreaterThan property="projectCreditCondition.releaseId"  compareValue="0" prepend=" and ">
	                release_id = #projectCreditCondition.releaseId#
	            </isGreaterThan>	            
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisProjectCreditConditionDAO.findByConditionCount -->
    <select id="MS-PROJECT-CREDIT-CONDITION-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PROJECT-CREDIT-CONDITION-FIND-BY-CONDITION-COUNT*/  count(*)  FROM project_credit_condition  where 1=1
	        <dynamic>
	              <isGreaterThan property="id"  compareValue="0" prepend=" and ">
	               id = #id#
	            </isGreaterThan>
	            <isGreaterThan property="itemId"  compareValue="0" prepend=" and ">
	                item_id = #itemId#
	            </isGreaterThan>
	            <isGreaterThan property="assetId"  compareValue="0" prepend=" and ">
	                asset_id = #assetId#
	            </isGreaterThan>
	             <isNotEmpty property="itemDesc" prepend=" and ">
	               item_desc = #itemDesc#
	            </isNotEmpty>
	             <isNotEmpty property="type" prepend=" and ">
	               type like concat('%',#type#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="isConfirm" prepend=" and ">
	               is_confirm like concat('%',#isConfirm#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="confirmManAccount" prepend=" and ">
	               confirm_man_account like concat('%',#confirmManAccount#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="confirmManName" prepend=" and ">
	               confirm_man_name like concat('%',#confirmManName#,'%')
	            </isNotEmpty>
	            
	             <isNotEmpty property="contractNo" prepend=" and ">
	               contract_no like concat('%',#contractNo#,'%')
	            </isNotEmpty>
				 <isNotEmpty property="status" prepend=" and ">
	               status like concat('%',#status#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="projectCode" prepend=" and ">
	               project_code = #projectCode#
	            </isNotEmpty>	            
	             <isNotEmpty property="releaseStatus" prepend=" and ">
	               release_status = #releaseStatus#
	            </isNotEmpty>	
	            <isGreaterThan property="releaseId"  compareValue="0" prepend=" and ">
	                release_id = #releaseId#
	            </isGreaterThan>	            
	        </dynamic>
    </select>

</sqlMap>
