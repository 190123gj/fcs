<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_broker_business -->
    <resultMap id="RM-F-BROKER-BUSINESS" class="com.born.fcs.pm.dal.dataobject.FBrokerBusinessDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectCode" column="project_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="summary" column="summary" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="isNeedCouncil" column="is_need_council" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="chargedAmount" column="charged_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="contractUrl" column="contract_url" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFBrokerBusinessDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFBrokerBusinessDAO.insert -->
    <insert id="MS-F-BROKER-BUSINESS-INSERT">
    <![CDATA[
        insert /*MS-YRD-F-BROKER-BUSINESS-INSERT*/ into f_broker_business(id,form_id,project_code,customer_name,summary,is_need_council,status,charged_amount,contract_url,raw_add_time) values (#id#, #formId#, #projectCode#, #customerName#, #summary#, #isNeedCouncil#, #status#, #chargedAmount.cent#, #contractUrl#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisFBrokerBusinessDAO.update -->
    <update id="MS-F-BROKER-BUSINESS-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-BROKER-BUSINESS-UPDATE*/ f_broker_business set form_id=#formId#, project_code=#projectCode#, customer_name=#customerName#, summary=#summary#, is_need_council=#isNeedCouncil#, status=#status#, charged_amount=#chargedAmount.cent#, contract_url=#contractUrl# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFBrokerBusinessDAO.updateByFormId -->
    <update id="MS-F-BROKER-BUSINESS-UPDATE-BY-FORM-ID">
    <![CDATA[
        update /*MS-YRD-F-BROKER-BUSINESS-UPDATE-BY-FORM-ID*/ f_broker_business set project_code=#projectCode#, customer_name=#customerName#, summary=#summary#, is_need_council=#isNeedCouncil#, status=#status#, charged_amount=#chargedAmount.cent#, contract_url=#contractUrl# where (form_id = #formId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFBrokerBusinessDAO.findById -->
    <select id="MS-F-BROKER-BUSINESS-FIND-BY-ID" resultMap="RM-F-BROKER-BUSINESS">
    <![CDATA[
        select /*MS-YRD-F-BROKER-BUSINESS-FIND-BY-ID*/ * from f_broker_business where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFBrokerBusinessDAO.findByProjectCode -->
    <select id="MS-F-BROKER-BUSINESS-FIND-BY-PROJECT-CODE" resultMap="RM-F-BROKER-BUSINESS">
    <![CDATA[
        select /*MS-YRD-F-BROKER-BUSINESS-FIND-BY-PROJECT-CODE*/ * from f_broker_business where (project_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFBrokerBusinessDAO.findByFormId -->
    <select id="MS-F-BROKER-BUSINESS-FIND-BY-FORM-ID" resultMap="RM-F-BROKER-BUSINESS">
    <![CDATA[
        select /*MS-YRD-F-BROKER-BUSINESS-FIND-BY-FORM-ID*/ * from f_broker_business where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFBrokerBusinessDAO.deleteById -->
    <delete id="MS-F-BROKER-BUSINESS-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-BROKER-BUSINESS-DELETE-BY-ID*/ from f_broker_business where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFBrokerBusinessDAO.findCouncilWaiting -->
    <select id="MS-F-BROKER-BUSINESS-FIND-COUNCIL-WAITING" resultMap="RM-F-BROKER-BUSINESS">
        SELECT /*MS-YRD-F-BROKER-BUSINESS-FIND-COUNCIL-WAITING*/ * FROM f_broker_business WHERE status = 'COUNCIL_WAITING' AND is_need_council = 'IS' LIMIT #limit#;
    </select>

</sqlMap>
