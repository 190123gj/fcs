<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_project_contract_item -->
    <resultMap id="RM-F-PROJECT-CONTRACT-ITEM" class="com.born.fcs.pm.dal.dataobject.FProjectContractItemDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="contractId" column="contract_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="contractCode" column="contract_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contractName" column="contract_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contractStatus" column="contract_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="pledgeId" column="pledge_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="templateId" column="template_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="contractType" column="contract_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isMain" column="is_main" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="stampPhase" column="stamp_phase" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cnt" column="cnt" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="creditMeasure" column="credit_measure" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="fileUrl" column="file_url" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="content" column="content" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="contentMessage" column="content_message" javaType="java.lang.String" jdbcType="MEDIUMTEXT"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="auditInfo" column="audit_info" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="signedTime" column="signed_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="signPersonAId" column="sign_person_a_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="signPersonA" column="sign_person_a" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="signPersonBId" column="sign_person_b_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="signPersonB" column="sign_person_b" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contractScanUrl" column="contract_scan_url" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="invalidReason" column="invalid_reason" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="approvedAmount" column="approved_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="approvedTime" column="approved_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="approvedUrl" column="approved_url" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="basisOfDecision" column="basis_of_decision" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="letterType" column="letter_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sortOrder" column="sort_order" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFProjectContractItemDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFProjectContractItemDAO.insert -->
    <insert id="MS-F-PROJECT-CONTRACT-ITEM-INSERT">
        INSERT /*MS-YRD-F-PROJECT-CONTRACT-ITEM-INSERT*/ INTO f_project_contract_item(id,contract_id,contract_code,contract_name,contract_status,pledge_id,template_id,contract_type,is_main,stamp_phase,cnt,file_url,credit_measure,content,content_message,remark,audit_info,signed_time,sign_person_a,sign_person_b,sign_person_a_id,sign_person_b_id,contract_scan_url,invalid_reason,approved_amount,approved_time,approved_url,basis_of_decision,letter_type,sort_order,raw_add_time)
		   VALUES (#id#,#contractId#,#contractCode#,#contractName#,#contractStatus#,#pledgeId#,#templateId#,#contractType#,#isMain#,#stampPhase#,#cnt#,#fileUrl#,#creditMeasure#,#content#,#contentMessage#,#remark#,#auditInfo#,#signedTime#,#signPersonA#,#signPersonB#,#signPersonAId#,#signPersonBId#,#contractScanUrl#,#invalidReason#,#approvedAmount#,#approvedTime#,#approvedUrl#,#basisOfDecision#,#letterType#,#sortOrder#,#rawAddTime#)
	        <selectKey  resultClass ="long"  keyProperty ="id" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisFProjectContractItemDAO.update -->
    <update id="MS-F-PROJECT-CONTRACT-ITEM-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-CONTRACT-ITEM-UPDATE*/ f_project_contract_item set contract_id=#contractId#, contract_code=#contractCode#, contract_name=#contractName#, contract_status=#contractStatus#, pledge_id=#pledgeId#, template_id=#templateId#, contract_type=#contractType#, is_main=#isMain#, stamp_phase=#stampPhase#, cnt=#cnt#, file_url=#fileUrl#, credit_measure=#creditMeasure#, content=#content#, content_message=#contentMessage#, remark=#remark#, audit_info=#auditInfo#, signed_time=#signedTime#, sign_person_a=#signPersonA#, sign_person_b=#signPersonB#, sign_person_a_id=#signPersonAId#, sign_person_b_id=#signPersonBId#, contract_scan_url=#contractScanUrl#, invalid_reason=#invalidReason#, approved_amount=#approvedAmount.cent#, approved_time=#approvedTime#, approved_url=#approvedUrl#, basis_of_decision=#basisOfDecision#, letter_type=#letterType#, sort_order=#sortOrder# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectContractItemDAO.findById -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-FIND-BY-ID" resultMap="RM-F-PROJECT-CONTRACT-ITEM">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-ITEM-FIND-BY-ID*/ id, contract_id, contract_code, contract_name, contract_status, pledge_id, template_id, contract_type, is_main, stamp_phase, cnt, file_url, credit_measure, content, content_message, remark, audit_info, signed_time, sign_person_a, sign_person_b, sign_person_a_id, sign_person_b_id, contract_scan_url, invalid_reason, approved_amount, approved_time, approved_url, basis_of_decision, letter_type, sort_order, raw_add_time, raw_update_time from f_project_contract_item where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemDAO.findByFormContractId -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-FIND-BY-FORM-CONTRACT-ID" resultMap="RM-F-PROJECT-CONTRACT-ITEM">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-ITEM-FIND-BY-FORM-CONTRACT-ID*/ id, contract_id, contract_code, contract_name, contract_status, pledge_id, template_id, contract_type, is_main, stamp_phase, cnt, file_url, credit_measure, content, content_message, remark, audit_info, signed_time, sign_person_a, sign_person_b, sign_person_a_id, sign_person_b_id, contract_scan_url, invalid_reason, approved_amount, approved_time, approved_url, basis_of_decision, letter_type, sort_order, raw_add_time, raw_update_time from f_project_contract_item where (contract_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemDAO.findByContractCode -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-FIND-BY-CONTRACT-CODE" resultMap="RM-F-PROJECT-CONTRACT-ITEM">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-ITEM-FIND-BY-CONTRACT-CODE*/ id, contract_id, contract_code, contract_name, contract_status, pledge_id, template_id, contract_type, is_main, stamp_phase, cnt, file_url, credit_measure, content, content_message, remark, audit_info, signed_time, sign_person_a, sign_person_b, sign_person_a_id, sign_person_b_id, contract_scan_url, invalid_reason, approved_amount, approved_time, approved_url, basis_of_decision, letter_type, sort_order, raw_add_time, raw_update_time from f_project_contract_item where (contract_code = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemDAO.deleteById -->
    <delete id="MS-F-PROJECT-CONTRACT-ITEM-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-CONTRACT-ITEM-DELETE-BY-ID*/ from f_project_contract_item where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectContractItemDAO.deleteByContractId -->
    <delete id="MS-F-PROJECT-CONTRACT-ITEM-DELETE-BY-CONTRACT-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-CONTRACT-ITEM-DELETE-BY-CONTRACT-ID*/ from f_project_contract_item where (contract_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectContractItemDAO.findAllCount -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-ITEM-FIND-ALL-COUNT*/ COUNT(*) from f_project_contract_item
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemDAO.findByCondition -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-FIND-BY-CONDITION" resultMap="RM-F-PROJECT-CONTRACT-ITEM">
        SELECT /*MS-YRD-F-PROJECT-CONTRACT-ITEM-FIND-BY-CONDITION*/  *  FROM f_project_contract_item
			WHERE 1=1 

			<dynamic>
			
			<isGreaterThan property="FProjectContractItem.id" compareValue="0" prepend=" and ">
				<![CDATA[ id = #FProjectContractItem.id# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="FProjectContractItem.contractId" compareValue="0" prepend=" and ">
				<![CDATA[ contract_id = #FProjectContractItem.contractId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="FProjectContractItem.pledgeId" compareValue="0" prepend=" and ">
				<![CDATA[ pledge_id = #FProjectContractItem.pledgeId# ]]>
			</isGreaterThan>
			
			<isNotEmpty property="FProjectContractItem.contractName"  prepend=" and ">
				<![CDATA[ contract_name = #FProjectContractItem.contractName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FProjectContractItem.contractType"  prepend=" and ">
				<![CDATA[ contract_type = #FProjectContractItem.contractType# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FProjectContractItem.isMain"  prepend=" and ">
				<![CDATA[ is_main = #FProjectContractItem.isMain# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="FProjectContractItem.stampPhase"  prepend=" and ">
				<![CDATA[ stamp_phase = #FProjectContractItem.stampPhase# ]]>
			</isNotEmpty>
			

			</dynamic>
			order by id desc
			<isGreaterThan property="pageSize" compareValue="0" prepend="">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisFProjectContractItemDAO.findByConditionCount -->
    <select id="MS-F-PROJECT-CONTRACT-ITEM-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-F-PROJECT-CONTRACT-ITEM-FIND-BY-CONDITION-COUNT*/  count(*) totalCount  FROM f_project_contract_item 
			WHERE 1=1
			
			<dynamic>
			
			<isGreaterThan property="id" compareValue="0" prepend=" and ">
				<![CDATA[ id = #id# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="contractId" compareValue="0" prepend=" and ">
				<![CDATA[ contract_id = #contractId# ]]>
			</isGreaterThan>
			
			<isGreaterThan property="pledgeId" compareValue="0" prepend=" and ">
				<![CDATA[ pledge_id = #pledgeId# ]]>
			</isGreaterThan>
			
			<isNotEmpty property="contractName"  prepend=" and ">
				<![CDATA[ contract_name = #contractName# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="contractType"  prepend=" and ">
				<![CDATA[ contract_type = #contractType# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="isMain"  prepend=" and ">
				<![CDATA[ is_main = #isMain# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="stampPhase"  prepend=" and ">
				<![CDATA[ stamp_phase = #stampPhase# ]]>
			</isNotEmpty>
			

			</dynamic>
    </select>

</sqlMap>
