<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table f_project_contract_check -->
    <resultMap id="RM-F-PROJECT-CONTRACT-CHECK" class="com.born.fcs.pm.dal.dataobject.FProjectContractCheckDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="contractId" column="contract_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="contractItemId" column="contract_item_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="fileUrl" column="file_url" javaType="java.lang.String" jdbcType="TEXT"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFProjectContractCheckDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFProjectContractCheckDAO.insert -->
    <insert id="MS-F-PROJECT-CONTRACT-CHECK-INSERT">
    <![CDATA[
        insert /*MS-YRD-F-PROJECT-CONTRACT-CHECK-INSERT*/ into f_project_contract_check(id,contract_id,contract_item_id,user_id,user_name,file_url,remark,raw_add_time) values (#id#, #contractId#, #contractItemId#, #userId#, #userName#, #fileUrl#, #remark#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisFProjectContractCheckDAO.update -->
    <update id="MS-F-PROJECT-CONTRACT-CHECK-UPDATE">
    <![CDATA[
        update /*MS-YRD-F-PROJECT-CONTRACT-CHECK-UPDATE*/ f_project_contract_check set contract_id=#contractId#, contract_item_id=#contractItemId#, user_id=#userId#, user_name=#userName#, file_url=#fileUrl#, remark=#remark# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisFProjectContractCheckDAO.findById -->
    <select id="MS-F-PROJECT-CONTRACT-CHECK-FIND-BY-ID" resultMap="RM-F-PROJECT-CONTRACT-CHECK">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-CHECK-FIND-BY-ID*/ id, contract_id, contract_item_id, user_id, user_name, file_url, remark, raw_add_time, raw_update_time from f_project_contract_check where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractCheckDAO.findByContractItemId -->
    <select id="MS-F-PROJECT-CONTRACT-CHECK-FIND-BY-CONTRACT-ITEM-ID" resultMap="RM-F-PROJECT-CONTRACT-CHECK">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-CHECK-FIND-BY-CONTRACT-ITEM-ID*/ id, contract_id, contract_item_id, user_id, user_name, file_url, remark, raw_add_time, raw_update_time from f_project_contract_check where (contract_item_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractCheckDAO.findByContractItemIdAndUserId -->
    <select id="MS-F-PROJECT-CONTRACT-CHECK-FIND-BY-CONTRACT-ITEM-ID-AND-USER-ID" resultMap="RM-F-PROJECT-CONTRACT-CHECK">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-CHECK-FIND-BY-CONTRACT-ITEM-ID-AND-USER-ID*/ id, contract_id, contract_item_id, user_id, user_name, file_url, remark, raw_add_time, raw_update_time from f_project_contract_check where ((contract_item_id = #contractItemId#) AND (user_id = #userId#))
    ]]>
    </select>

    <!-- mapped statement for IbatisFProjectContractCheckDAO.deleteById -->
    <delete id="MS-F-PROJECT-CONTRACT-CHECK-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-F-PROJECT-CONTRACT-CHECK-DELETE-BY-ID*/ from f_project_contract_check where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisFProjectContractCheckDAO.findAllCount -->
    <select id="MS-F-PROJECT-CONTRACT-CHECK-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-YRD-F-PROJECT-CONTRACT-CHECK-FIND-ALL-COUNT*/ COUNT(*) from f_project_contract_check
    ]]>
    </select>

</sqlMap>
