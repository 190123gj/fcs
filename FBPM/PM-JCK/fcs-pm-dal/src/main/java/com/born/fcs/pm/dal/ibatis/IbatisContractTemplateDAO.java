/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.ContractTemplateDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.ContractTemplateDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.ContractTemplateDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/contract_template.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisContractTemplateDAO extends SqlMapClientDaoSupport implements ContractTemplateDAO {
	/**
	 *  Insert one <tt>ContractTemplateDO</tt> object to DB table <tt>contract_template</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into contract_template(template_id,name,contract_type,busi_type,busi_type_name,is_main,credit_condition_type,pledge_type,stamp_phase,template_file,template_content,status,attachment,remark,template_type,letter_type,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param contractTemplate
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ContractTemplateDO contractTemplate) throws DataAccessException {
    	if (contractTemplate == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-CONTRACT-TEMPLATE-INSERT", contractTemplate);

        return contractTemplate.getTemplateId();
    }

	/**
	 *  Update DB table <tt>contract_template</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update contract_template set name=?, contract_type=?, busi_type=?, busi_type_name=?, is_main=?, credit_condition_type=?, pledge_type=?, stamp_phase=?, template_file=?, template_content=?, status=?, attachment=?, remark=?, template_type=?, letter_type=? where (template_id = ?)</tt>
	 *
	 *	@param contractTemplate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ContractTemplateDO contractTemplate) throws DataAccessException {
    	if (contractTemplate == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-CONTRACT-TEMPLATE-UPDATE", contractTemplate);
    }

	/**
	 *  Query DB table <tt>contract_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from contract_template where ((busi_type = ?) AND (status = "IN_USE"))</tt>
	 *
	 *	@param busiType
	 *	@return List<ContractTemplateDO>
	 *	@throws DataAccessException
	 */	 
    public List<ContractTemplateDO> findTemplates(String busiType) throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-CONTRACT-TEMPLATE-FIND-TEMPLATES", busiType);

    }

	/**
	 *  Query DB table <tt>contract_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from contract_template where (template_id = ?)</tt>
	 *
	 *	@param templateId
	 *	@return ContractTemplateDO
	 *	@throws DataAccessException
	 */	 
    public ContractTemplateDO findById(long templateId) throws DataAccessException {
        Long param = new Long(templateId);

        return (ContractTemplateDO) getSqlMapClientTemplate().queryForObject("MS-CONTRACT-TEMPLATE-FIND-BY-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>contract_template</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from contract_template where (template_id = ?)</tt>
	 *
	 *	@param templateId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long templateId) throws DataAccessException {
        Long param = new Long(templateId);

        return getSqlMapClientTemplate().delete("MS-CONTRACT-TEMPLATE-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>contract_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from contract_template</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findAllCount() throws DataAccessException {

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-CONTRACT-TEMPLATE-FIND-ALL-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>contract_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from contract_template where (template_id = ?)</tt>
	 *
	 *	@param contractTemplate
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param needNullBusiType
	 *	@param needNullPledgeType
	 *	@param busiTypeList
	 *	@param conditionTypeList
	 *	@param isGetTemplates
	 *	@param notGuarantor
	 *	@return List<ContractTemplateDO>
	 *	@throws DataAccessException
	 */	 
    public List<ContractTemplateDO> findByCondition(ContractTemplateDO contractTemplate, long limitStart, long pageSize, String sortCol, String sortOrder, String needNullBusiType, String needNullPledgeType, List busiTypeList, List conditionTypeList, String isGetTemplates, String notGuarantor) throws DataAccessException {
    	if (contractTemplate == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("contractTemplate", contractTemplate);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);
        param.put("needNullBusiType", needNullBusiType);
        param.put("needNullPledgeType", needNullPledgeType);
        param.put("busiTypeList", busiTypeList);
        param.put("conditionTypeList", conditionTypeList);
        param.put("isGetTemplates", isGetTemplates);
        param.put("notGuarantor", notGuarantor);

        return getSqlMapClientTemplate().queryForList("MS-CONTRACT-TEMPLATE-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>contract_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from contract_template where (template_id = ?)</tt>
	 *
	 *	@param contractTemplate
	 *	@param needNullBusiType
	 *	@param needNullPledgeType
	 *	@param busiTypeList
	 *	@param conditionTypeList
	 *	@param isGetTemplates
	 *	@param notGuarantor
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ContractTemplateDO contractTemplate, String needNullBusiType, String needNullPledgeType, List busiTypeList, List conditionTypeList, String isGetTemplates, String notGuarantor) throws DataAccessException {
    	if (contractTemplate == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("contractTemplate", contractTemplate);
        param.put("needNullBusiType", needNullBusiType);
        param.put("needNullPledgeType", needNullPledgeType);
        param.put("busiTypeList", busiTypeList);
        param.put("conditionTypeList", conditionTypeList);
        param.put("isGetTemplates", isGetTemplates);
        param.put("notGuarantor", notGuarantor);

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-CONTRACT-TEMPLATE-FIND-BY-CONDITION-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}