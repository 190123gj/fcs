/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.FAfterwardsCheckBaseDO;
import org.springframework.dao.DataAccessException;

/**
 * A dao interface provides methods to access database table <tt>f_afterwards_check_base</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_afterwards_check_base.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */

public interface FAfterwardsCheckBaseDAO {
	/**
	 *  Insert one <tt>FAfterwardsCheckBaseDO</tt> object to DB table <tt>f_afterwards_check_base</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_afterwards_check_base(form_id,project_name,project_code,customer_id,customer_name,busi_type,busi_type_name,amount,start_time,end_time,busi_manager_name,risk_manager_name,capital_channel_name,loan_purpose,spend_way,time_limit,time_unit,loaned_amount,repayed_amount,available_amount,release_balance,guarantee_amount,guarantee_deposit,collect_year,collect_month,collect_data,feedback_opinion,customer_opinion,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FAfterwardsCheckBase
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FAfterwardsCheckBaseDO FAfterwardsCheckBase) throws DataAccessException;

	/**
	 *  Update DB table <tt>f_afterwards_check_base</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_afterwards_check_base set form_id=?, project_name=?, project_code=?, customer_id=?, customer_name=?, busi_type=?, busi_type_name=?, amount=?, start_time=?, end_time=?, busi_manager_name=?, risk_manager_name=?, capital_channel_name=?, loan_purpose=?, spend_way=?, time_limit=?, time_unit=?, loaned_amount=?, repayed_amount=?, available_amount=?, release_balance=?, guarantee_amount=?, guarantee_deposit=?, collect_year=?, collect_month=?, collect_data=?, feedback_opinion=?, customer_opinion=? where (base_id = ?)</tt>
	 *
	 *	@param FAfterwardsCheckBase
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FAfterwardsCheckBaseDO FAfterwardsCheckBase) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_afterwards_check_base</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_afterwards_check_base where (base_id = ?)</tt>
	 *
	 *	@param baseId
	 *	@return FAfterwardsCheckBaseDO
	 *	@throws DataAccessException
	 */	 
    public FAfterwardsCheckBaseDO findById(long baseId) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_afterwards_check_base</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_afterwards_check_base where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return FAfterwardsCheckBaseDO
	 *	@throws DataAccessException
	 */	 
    public FAfterwardsCheckBaseDO findByFormId(long formId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_afterwards_check_base</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_afterwards_check_base where (base_id = ?)</tt>
	 *
	 *	@param baseId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long baseId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_afterwards_check_base</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_afterwards_check_base where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByFormId(long formId) throws DataAccessException;

}