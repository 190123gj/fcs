/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.FProjectGuaranteeEntrustedDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.FProjectGuaranteeEntrustedDO;
import org.springframework.dao.DataAccessException;

/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.FProjectGuaranteeEntrustedDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_project_guarantee_entrusted.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 

public class IbatisFProjectGuaranteeEntrustedDAO extends SqlMapClientDaoSupport implements FProjectGuaranteeEntrustedDAO {
	/**
	 *  Insert one <tt>FProjectGuaranteeEntrustedDO</tt> object to DB table <tt>f_project_guarantee_entrusted</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_project_guarantee_entrusted(id,project_id,project_channel_id,project_channel_name,project_sub_channel_id,project_sub_channel_name,capital_channel_id,capital_channel_name,capital_sub_channel_id,capital_sub_channel_name,loan_purpose,repay_source,repay_plan,has_pledge,has_evaluate_company,deposit,deposit_type,deposit_account,evaluate_company_id,evaluate_company_name,evaluate_company_region,risk_manager_id,risk_manager_account,risk_manager_name,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FProjectGuaranteeEntrusted
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FProjectGuaranteeEntrustedDO FProjectGuaranteeEntrusted) throws DataAccessException {
    	if (FProjectGuaranteeEntrusted == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-F-PROJECT-GUARANTEE-ENTRUSTED-INSERT", FProjectGuaranteeEntrusted);

        return FProjectGuaranteeEntrusted.getId();
    }

	/**
	 *  Update DB table <tt>f_project_guarantee_entrusted</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project_guarantee_entrusted set project_id=?, project_channel_id=?, project_channel_name=?, project_sub_channel_id=?, project_sub_channel_name=?, capital_channel_id=?, capital_channel_name=?, capital_sub_channel_id=?, capital_sub_channel_name=?, loan_purpose=?, repay_source=?, repay_plan=?, has_pledge=?, has_evaluate_company=?, deposit=?, deposit_type=?, deposit_account=?, evaluate_company_id=?, evaluate_company_name=?, evaluate_company_region=?, risk_manager_id=?, risk_manager_account=?, risk_manager_name=? where (id = ?)</tt>
	 *
	 *	@param FProjectGuaranteeEntrusted
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FProjectGuaranteeEntrustedDO FProjectGuaranteeEntrusted) throws DataAccessException {
    	if (FProjectGuaranteeEntrusted == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-GUARANTEE-ENTRUSTED-UPDATE", FProjectGuaranteeEntrusted);
    }

	/**
	 *  Update DB table <tt>f_project_guarantee_entrusted</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_project_guarantee_entrusted set project_channel_id=?, project_channel_name=?, project_sub_channel_id=?, project_sub_channel_name=?, capital_channel_id=?, capital_channel_name=?, capital_sub_channel_id=?, capital_sub_channel_name=?, loan_purpose=?, repay_source=?, repay_plan=?, has_pledge=?, has_evaluate_company=?, deposit=?, deposit_type=?, deposit_account=?, evaluate_company_id=?, evaluate_company_name=?, evaluate_company_region=?, risk_manager_id=?, risk_manager_account=?, risk_manager_name=? where (project_id = ?)</tt>
	 *
	 *	@param FProjectGuaranteeEntrusted
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByProjectId(FProjectGuaranteeEntrustedDO FProjectGuaranteeEntrusted) throws DataAccessException {
    	if (FProjectGuaranteeEntrusted == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-F-PROJECT-GUARANTEE-ENTRUSTED-UPDATE-BY-PROJECT-ID", FProjectGuaranteeEntrusted);
    }

	/**
	 *  Query DB table <tt>f_project_guarantee_entrusted</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project_guarantee_entrusted where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FProjectGuaranteeEntrustedDO
	 *	@throws DataAccessException
	 */	 
    public FProjectGuaranteeEntrustedDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (FProjectGuaranteeEntrustedDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-GUARANTEE-ENTRUSTED-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>f_project_guarantee_entrusted</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_project_guarantee_entrusted where (project_id = ?)</tt>
	 *
	 *	@param projectId
	 *	@return FProjectGuaranteeEntrustedDO
	 *	@throws DataAccessException
	 */	 
    public FProjectGuaranteeEntrustedDO findByProjectId(long projectId) throws DataAccessException {
        Long param = new Long(projectId);

        return (FProjectGuaranteeEntrustedDO) getSqlMapClientTemplate().queryForObject("MS-F-PROJECT-GUARANTEE-ENTRUSTED-FIND-BY-PROJECT-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>f_project_guarantee_entrusted</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_project_guarantee_entrusted where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-F-PROJECT-GUARANTEE-ENTRUSTED-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>f_project_guarantee_entrusted</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_project_guarantee_entrusted where (project_id = ?)</tt>
	 *
	 *	@param projectId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByProjectId(long projectId) throws DataAccessException {
        Long param = new Long(projectId);

        return getSqlMapClientTemplate().delete("MS-F-PROJECT-GUARANTEE-ENTRUSTED-DELETE-BY-PROJECT-ID", param);
    }

}