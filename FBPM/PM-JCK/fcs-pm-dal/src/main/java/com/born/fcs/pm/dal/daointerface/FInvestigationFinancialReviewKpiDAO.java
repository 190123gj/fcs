/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.FInvestigationFinancialReviewKpiDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>f_investigation_financial_review_kpi</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_investigation_financial_review_kpi.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface FInvestigationFinancialReviewKpiDAO {
	/**
	 *  Insert one <tt>FInvestigationFinancialReviewKpiDO</tt> object to DB table <tt>f_investigation_financial_review_kpi</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_investigation_financial_review_kpi(f_review_id,kpi_code,kpi_type,kpi_name,kpi_level,kpi_value,kpi_unit,kpi_ratio,parent_id,term_type,remark,sort_order,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FInvestigationFinancialReviewKpi
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FInvestigationFinancialReviewKpiDO FInvestigationFinancialReviewKpi) throws DataAccessException;

	/**
	 *  Update DB table <tt>f_investigation_financial_review_kpi</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_investigation_financial_review_kpi set f_review_id=?, kpi_code=?, kpi_type=?, kpi_name=?, kpi_level=?, kpi_value=?, kpi_unit=?, kpi_ratio=?, parent_id=?, term_type=?, remark=?, sort_order=? where (id = ?)</tt>
	 *
	 *	@param FInvestigationFinancialReviewKpi
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FInvestigationFinancialReviewKpiDO FInvestigationFinancialReviewKpi) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_financial_review_kpi</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_financial_review_kpi where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FInvestigationFinancialReviewKpiDO
	 *	@throws DataAccessException
	 */	 
    public FInvestigationFinancialReviewKpiDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_financial_review_kpi</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_financial_review_kpi where (f_review_id = ?) order by sort_order ASC, id ASC</tt>
	 *
	 *	@param FReviewId
	 *	@return List<FInvestigationFinancialReviewKpiDO>
	 *	@throws DataAccessException
	 */	 
    public List<FInvestigationFinancialReviewKpiDO> findByReviewId(long FReviewId) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_financial_review_kpi</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_financial_review_kpi where ((f_review_id = ?) AND (kpi_type = ?)) order by sort_order ASC, id ASC</tt>
	 *
	 *	@param FReviewId
	 *	@param kpiType
	 *	@return List<FInvestigationFinancialReviewKpiDO>
	 *	@throws DataAccessException
	 */	 
    public List<FInvestigationFinancialReviewKpiDO> findByReviewIdAndKpitype(long FReviewId, String kpiType) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_financial_review_kpi</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_financial_review_kpi where (parent_id = ?) order by sort_order ASC</tt>
	 *
	 *	@param parentId
	 *	@return List<FInvestigationFinancialReviewKpiDO>
	 *	@throws DataAccessException
	 */	 
    public List<FInvestigationFinancialReviewKpiDO> findByParentId(long parentId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_investigation_financial_review_kpi</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_financial_review_kpi where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_investigation_financial_review_kpi</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_financial_review_kpi where (f_review_id = ?)</tt>
	 *
	 *	@param FReviewId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReviewId(long FReviewId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_investigation_financial_review_kpi</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_financial_review_kpi where (parent_id = ?)</tt>
	 *
	 *	@param parentId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByParentId(long parentId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_investigation_financial_review_kpi</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_financial_review_kpi where ((f_review_id = ?) AND (kpi_type = ?))</tt>
	 *
	 *	@param FReviewId
	 *	@param kpiType
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReviewIdAndKpitype(long FReviewId, String kpiType) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_financial_review_kpi</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_financial_review_kpi where (1 = 1)</tt>
	 *
	 *	@param FInvestigationFinancialReviewKpi
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<FInvestigationFinancialReviewKpiDO>
	 *	@throws DataAccessException
	 */	 
    public List<FInvestigationFinancialReviewKpiDO> findByCondition(FInvestigationFinancialReviewKpiDO FInvestigationFinancialReviewKpi, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_financial_review_kpi</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from f_investigation_financial_review_kpi where (1 = 1)</tt>
	 *
	 *	@param FInvestigationFinancialReviewKpi
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FInvestigationFinancialReviewKpiDO FInvestigationFinancialReviewKpi) throws DataAccessException;

}