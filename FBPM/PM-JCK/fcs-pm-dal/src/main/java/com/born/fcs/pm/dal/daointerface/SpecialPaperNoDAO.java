/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.SpecialPaperNoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Date;

/**
 * A dao interface provides methods to access database table <tt>special_paper_no</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/special_paper_no.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface SpecialPaperNoDAO {
	/**
	 *  Insert one <tt>SpecialPaperNoDO</tt> object to DB table <tt>special_paper_no</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into special_paper_no(start_no,end_no,source_id,source,keeping_man_id,keeping_man_name,left_paper,parent_id,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param specialPaperNo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(SpecialPaperNoDO specialPaperNo) throws DataAccessException;

	/**
	 *  Update DB table <tt>special_paper_no</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update special_paper_no set start_no=?, end_no=?, source_id=?, source=?, keeping_man_id=?, keeping_man_name=?, left_paper=?, parent_id=? where (id = ?)</tt>
	 *
	 *	@param specialPaperNo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(SpecialPaperNoDO specialPaperNo) throws DataAccessException;

	/**
	 *  Query DB table <tt>special_paper_no</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, start_no, end_no, source_id, source, keeping_man_id, keeping_man_name, left_paper, raw_add_time, raw_update_time, ((end_no - start_no) + 1) pieces, parent_id from special_paper_no where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return SpecialPaperNoDO
	 *	@throws DataAccessException
	 */	 
    public SpecialPaperNoDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>special_paper_no</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, start_no, end_no, source_id, source, keeping_man_id, keeping_man_name, left_paper, raw_add_time, raw_update_time, ((end_no - start_no) + 1) pieces, parent_id from special_paper_no where ((source = ?) AND (start_no <= ?) AND (end_no >= ?))</tt>
	 *
	 *	@param specialPaperNo
	 *	@return List<SpecialPaperNoDO>
	 *	@throws DataAccessException
	 */	 
    public List<SpecialPaperNoDO> checkNoBySource(SpecialPaperNoDO specialPaperNo) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>special_paper_no</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from special_paper_no where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>special_paper_no</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, start_no, end_no, source_id, source, keeping_man_id, keeping_man_name, left_paper, raw_add_time, raw_update_time, ((end_no - start_no) + 1) pieces, parent_id from special_paper_no where (1 = 1)</tt>
	 *
	 *	@param specialPaperNo
	 *	@param limitStart
	 *	@param pageSize
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param startTime
	 *	@param endTime
	 *	@return List<SpecialPaperNoDO>
	 *	@throws DataAccessException
	 */	 
    public List<SpecialPaperNoDO> findByCondition(SpecialPaperNoDO specialPaperNo, long limitStart, long pageSize, String sortCol, String sortOrder, Date startTime, Date endTime) throws DataAccessException;

	/**
	 *  Query DB table <tt>special_paper_no</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from special_paper_no where (1 = 1)</tt>
	 *
	 *	@param specialPaperNo
	 *	@param startTime
	 *	@param endTime
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(SpecialPaperNoDO specialPaperNo, Date startTime, Date endTime) throws DataAccessException;

}