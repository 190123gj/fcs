/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.born.fcs.pm.dal.daointerface.ProjectFinancialTradeTansferDAO;


// auto generated imports
import com.born.fcs.pm.dal.dataobject.ProjectFinancialTradeTansferDO;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.ProjectFinancialTradeTansferDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_financial_trade_tansfer.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisProjectFinancialTradeTansferDAO extends SqlMapClientDaoSupport implements ProjectFinancialTradeTansferDAO {
	/**
	 *  Insert one <tt>ProjectFinancialTradeTansferDO</tt> object to DB table <tt>project_financial_trade_tansfer</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_financial_trade_tansfer(trade_id,flow_no,project_code,apply_id,transfer_price,transfer_num,transfer_interest,transfer_time,is_transfer_ownership,is_buy_back,buy_back_price,buy_back_time,is_confirm,confirm_time,transfer_reason,attach,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectFinancialTradeTansfer
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectFinancialTradeTansferDO projectFinancialTradeTansfer) throws DataAccessException {
    	if (projectFinancialTradeTansfer == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PROJECT-FINANCIAL-TRADE-TANSFER-INSERT", projectFinancialTradeTansfer);

        return projectFinancialTradeTansfer.getTradeId();
    }

	/**
	 *  Update DB table <tt>project_financial_trade_tansfer</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_financial_trade_tansfer set flow_no=?, project_code=?, apply_id=?, transfer_price=?, transfer_num=?, transfer_interest=?, transfer_time=?, is_transfer_ownership=?, is_buy_back=?, buy_back_price=?, buy_back_time=?, is_confirm=?, confirm_time=?, transfer_reason=?, attach=? where (trade_id = ?)</tt>
	 *
	 *	@param projectFinancialTradeTansfer
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectFinancialTradeTansferDO projectFinancialTradeTansfer) throws DataAccessException {
    	if (projectFinancialTradeTansfer == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-PROJECT-FINANCIAL-TRADE-TANSFER-UPDATE", projectFinancialTradeTansfer);
    }

	/**
	 *  Query DB table <tt>project_financial_trade_tansfer</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_financial_trade_tansfer where (trade_id = ?)</tt>
	 *
	 *	@param tradeId
	 *	@return ProjectFinancialTradeTansferDO
	 *	@throws DataAccessException
	 */	 
    public ProjectFinancialTradeTansferDO findById(long tradeId) throws DataAccessException {
        Long param = new Long(tradeId);

        return (ProjectFinancialTradeTansferDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-FINANCIAL-TRADE-TANSFER-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>project_financial_trade_tansfer</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_financial_trade_tansfer where (apply_id = ?)</tt>
	 *
	 *	@param applyId
	 *	@return ProjectFinancialTradeTansferDO
	 *	@throws DataAccessException
	 */	 
    public ProjectFinancialTradeTansferDO findByApplyId(long applyId) throws DataAccessException {
        Long param = new Long(applyId);

        return (ProjectFinancialTradeTansferDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-FINANCIAL-TRADE-TANSFER-FIND-BY-APPLY-ID", param);

    }

	/**
	 *  Query DB table <tt>project_financial_trade_tansfer</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_financial_trade_tansfer where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return ProjectFinancialTradeTansferDO
	 *	@throws DataAccessException
	 */	 
    public ProjectFinancialTradeTansferDO findByCode(String projectCode) throws DataAccessException {

        return (ProjectFinancialTradeTansferDO) getSqlMapClientTemplate().queryForObject("MS-PROJECT-FINANCIAL-TRADE-TANSFER-FIND-BY-CODE", projectCode);

    }

	/**
	 *  Delete records from DB table <tt>project_financial_trade_tansfer</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_financial_trade_tansfer where (trade_id = ?)</tt>
	 *
	 *	@param tradeId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long tradeId) throws DataAccessException {
        Long param = new Long(tradeId);

        return getSqlMapClientTemplate().delete("MS-PROJECT-FINANCIAL-TRADE-TANSFER-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>project_financial_trade_tansfer</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_financial_trade_tansfer where (project_code = ?)</tt>
	 *
	 *	@param projectCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByCode(String projectCode) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-PROJECT-FINANCIAL-TRADE-TANSFER-DELETE-BY-CODE", projectCode);
    }

	/**
	 *  Query DB table <tt>project_financial_trade_tansfer</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from project_financial_trade_tansfer where (1 = 1)</tt>
	 *
	 *	@param projectFinancialTradeTansfer
	 *	@param transferTimeStart
	 *	@param transferTimeEnd
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<ProjectFinancialTradeTansferDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectFinancialTradeTansferDO> findByCondition(ProjectFinancialTradeTansferDO projectFinancialTradeTansfer, Date transferTimeStart, Date transferTimeEnd, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException {
    	if (projectFinancialTradeTansfer == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("projectFinancialTradeTansfer", projectFinancialTradeTansfer);
        param.put("transferTimeStart", transferTimeStart);
        param.put("transferTimeEnd", transferTimeEnd);
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

        return getSqlMapClientTemplate().queryForList("MS-PROJECT-FINANCIAL-TRADE-TANSFER-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>project_financial_trade_tansfer</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from project_financial_trade_tansfer where (1 = 1)</tt>
	 *
	 *	@param projectFinancialTradeTansfer
	 *	@param transferTimeStart
	 *	@param transferTimeEnd
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ProjectFinancialTradeTansferDO projectFinancialTradeTansfer, Date transferTimeStart, Date transferTimeEnd) throws DataAccessException {
    	if (projectFinancialTradeTansfer == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("projectFinancialTradeTansfer", projectFinancialTradeTansfer);
        param.put("transferTimeStart", transferTimeStart);
        param.put("transferTimeEnd", transferTimeEnd);

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-PROJECT-FINANCIAL-TRADE-TANSFER-FIND-BY-CONDITION-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}