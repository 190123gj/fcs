/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.fcs.pm.dal.daointerface;

// auto generated imports
import com.born.fcs.pm.dal.dataobject.FInvestigationMainlyReviewAssetAndLiabilityDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>f_investigation_mainly_review_asset_and_liability</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/f_investigation_mainly_review_asset_and_liability.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface FInvestigationMainlyReviewAssetAndLiabilityDAO {
	/**
	 *  Insert one <tt>FInvestigationMainlyReviewAssetAndLiabilityDO</tt> object to DB table <tt>f_investigation_mainly_review_asset_and_liability</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into f_investigation_mainly_review_asset_and_liability(m_review_id,name,sex,cert_no,house_num,car_num,invest_amount,deposit_amount,marital_status,spouse_name,spouse_cert_type,spouse_cert_no,spouse_contact_no,spouse_address,spouse_immovable_property,spouse_movable_property,has_bank_loan,has_folk_loan,bank_loan_amount,folk_loan_amount,consumer_loan_bank,consumer_loan_amount,consumer_loan_start_date,consumer_loan_end_date,busines_loan_bank,busines_loan_amount,busines_loan_start_date,busines_loan_end_date,mortgage_loan_bank,mortgage_loan_amount,mortgage_loan_start_date,mortgage_loan_end_date,sort_order,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param FInvestigationMainlyReviewAssetAndLiability
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FInvestigationMainlyReviewAssetAndLiabilityDO FInvestigationMainlyReviewAssetAndLiability) throws DataAccessException;

	/**
	 *  Update DB table <tt>f_investigation_mainly_review_asset_and_liability</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update f_investigation_mainly_review_asset_and_liability set m_review_id=?, name=?, sex=?, cert_no=?, house_num=?, car_num=?, invest_amount=?, deposit_amount=?, marital_status=?, spouse_name=?, spouse_cert_type=?, spouse_cert_no=?, spouse_contact_no=?, spouse_address=?, spouse_immovable_property=?, spouse_movable_property=?, has_bank_loan=?, has_folk_loan=?, bank_loan_amount=?, folk_loan_amount=?, consumer_loan_bank=?, consumer_loan_amount=?, consumer_loan_start_date=?, consumer_loan_end_date=?, busines_loan_bank=?, busines_loan_amount=?, busines_loan_start_date=?, busines_loan_end_date=?, mortgage_loan_bank=?, mortgage_loan_amount=?, mortgage_loan_start_date=?, mortgage_loan_end_date=?, sort_order=? where (id = ?)</tt>
	 *
	 *	@param FInvestigationMainlyReviewAssetAndLiability
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FInvestigationMainlyReviewAssetAndLiabilityDO FInvestigationMainlyReviewAssetAndLiability) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_mainly_review_asset_and_liability</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_mainly_review_asset_and_liability where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FInvestigationMainlyReviewAssetAndLiabilityDO
	 *	@throws DataAccessException
	 */	 
    public FInvestigationMainlyReviewAssetAndLiabilityDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>f_investigation_mainly_review_asset_and_liability</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from f_investigation_mainly_review_asset_and_liability where (m_review_id = ?) order by sort_order ASC</tt>
	 *
	 *	@param MReviewId
	 *	@return List<FInvestigationMainlyReviewAssetAndLiabilityDO>
	 *	@throws DataAccessException
	 */	 
    public List<FInvestigationMainlyReviewAssetAndLiabilityDO> findByReviewId(long MReviewId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_investigation_mainly_review_asset_and_liability</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_mainly_review_asset_and_liability where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>f_investigation_mainly_review_asset_and_liability</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from f_investigation_mainly_review_asset_and_liability where (m_review_id = ?)</tt>
	 *
	 *	@param MReviewId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReviewId(long MReviewId) throws DataAccessException;

}